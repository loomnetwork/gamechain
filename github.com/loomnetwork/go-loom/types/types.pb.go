// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/go-loom/types/types.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	github.com/loomnetwork/go-loom/types/types.proto

It has these top-level messages:
	BlockHeader
	BlockID
	PartSetHeader
	Validator
	Evidence
	BigUInt
	Address
	Transaction
*/
package types

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import github_com_loomnetwork_go_loom_common "github.com/loomnetwork/go-loom/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type BlockHeader struct {
	ChainID        string  `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Height         int64   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Time           int64   `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	NumTxs         int32   `protobuf:"varint,4,opt,name=num_txs,json=numTxs,proto3" json:"num_txs,omitempty"`
	LastBlockID    BlockID `protobuf:"bytes,5,opt,name=last_block_id,json=lastBlockId" json:"last_block_id"`
	LastCommitHash []byte  `protobuf:"bytes,6,opt,name=last_commit_hash,json=lastCommitHash,proto3" json:"last_commit_hash,omitempty"`
	DataHash       []byte  `protobuf:"bytes,7,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	ValidatorsHash []byte  `protobuf:"bytes,8,opt,name=validators_hash,json=validatorsHash,proto3" json:"validators_hash,omitempty"`
	AppHash        []byte  `protobuf:"bytes,9,opt,name=app_hash,json=appHash,proto3" json:"app_hash,omitempty"`
}

func (m *BlockHeader) Reset()                    { *m = BlockHeader{} }
func (m *BlockHeader) String() string            { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()               {}
func (*BlockHeader) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{0} }

func (m *BlockHeader) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *BlockHeader) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockHeader) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *BlockHeader) GetNumTxs() int32 {
	if m != nil {
		return m.NumTxs
	}
	return 0
}

func (m *BlockHeader) GetLastBlockID() BlockID {
	if m != nil {
		return m.LastBlockID
	}
	return BlockID{}
}

func (m *BlockHeader) GetLastCommitHash() []byte {
	if m != nil {
		return m.LastCommitHash
	}
	return nil
}

func (m *BlockHeader) GetDataHash() []byte {
	if m != nil {
		return m.DataHash
	}
	return nil
}

func (m *BlockHeader) GetValidatorsHash() []byte {
	if m != nil {
		return m.ValidatorsHash
	}
	return nil
}

func (m *BlockHeader) GetAppHash() []byte {
	if m != nil {
		return m.AppHash
	}
	return nil
}

type BlockID struct {
	Hash  []byte        `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Parts PartSetHeader `protobuf:"bytes,2,opt,name=parts" json:"parts"`
}

func (m *BlockID) Reset()                    { *m = BlockID{} }
func (m *BlockID) String() string            { return proto.CompactTextString(m) }
func (*BlockID) ProtoMessage()               {}
func (*BlockID) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{1} }

func (m *BlockID) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockID) GetParts() PartSetHeader {
	if m != nil {
		return m.Parts
	}
	return PartSetHeader{}
}

type PartSetHeader struct {
	Total int32  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Hash  []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *PartSetHeader) Reset()                    { *m = PartSetHeader{} }
func (m *PartSetHeader) String() string            { return proto.CompactTextString(m) }
func (*PartSetHeader) ProtoMessage()               {}
func (*PartSetHeader) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{2} }

func (m *PartSetHeader) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PartSetHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type Validator struct {
	PubKey []byte `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Power  int64  `protobuf:"varint,2,opt,name=power,proto3" json:"power,omitempty"`
}

func (m *Validator) Reset()                    { *m = Validator{} }
func (m *Validator) String() string            { return proto.CompactTextString(m) }
func (*Validator) ProtoMessage()               {}
func (*Validator) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{3} }

func (m *Validator) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Validator) GetPower() int64 {
	if m != nil {
		return m.Power
	}
	return 0
}

type Evidence struct {
	PubKey []byte `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Height int64  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *Evidence) Reset()                    { *m = Evidence{} }
func (m *Evidence) String() string            { return proto.CompactTextString(m) }
func (*Evidence) ProtoMessage()               {}
func (*Evidence) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{4} }

func (m *Evidence) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Evidence) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type BigUInt struct {
	Value github_com_loomnetwork_go_loom_common.BigUInt `protobuf:"bytes,1,opt,name=Value,proto3,customtype=github.com/loomnetwork/go-loom/common.BigUInt" json:"Value"`
}

func (m *BigUInt) Reset()                    { *m = BigUInt{} }
func (m *BigUInt) String() string            { return proto.CompactTextString(m) }
func (*BigUInt) ProtoMessage()               {}
func (*BigUInt) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{5} }

type Address struct {
	ChainId string                                             `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Local   github_com_loomnetwork_go_loom_common.LocalAddress `protobuf:"bytes,2,opt,name=local,proto3,customtype=github.com/loomnetwork/go-loom/common.LocalAddress" json:"local"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{6} }

func (m *Address) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

type Transaction struct {
	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{7} }

func (m *Transaction) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Transaction) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockHeader)(nil), "BlockHeader")
	proto.RegisterType((*BlockID)(nil), "BlockID")
	proto.RegisterType((*PartSetHeader)(nil), "PartSetHeader")
	proto.RegisterType((*Validator)(nil), "Validator")
	proto.RegisterType((*Evidence)(nil), "Evidence")
	proto.RegisterType((*BigUInt)(nil), "BigUInt")
	proto.RegisterType((*Address)(nil), "Address")
	proto.RegisterType((*Transaction)(nil), "Transaction")
}

func init() {
	proto.RegisterFile("github.com/loomnetwork/go-loom/types/types.proto", fileDescriptorTypes)
}

var fileDescriptorTypes = []byte{
	// 569 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x6e, 0xd4, 0x3c,
	0x10, 0xfe, 0x93, 0x36, 0x9b, 0xac, 0xf3, 0xb7, 0x20, 0x83, 0x60, 0x01, 0xa1, 0x8d, 0x72, 0x80,
	0x08, 0xa9, 0x59, 0x28, 0xe2, 0x40, 0x39, 0x35, 0x2d, 0x52, 0xa3, 0xee, 0x61, 0x15, 0xca, 0x5e,
	0x57, 0x4e, 0x62, 0x12, 0x6b, 0x13, 0x3b, 0x8a, 0x9d, 0x6d, 0xf7, 0x95, 0x78, 0x92, 0x3e, 0x03,
	0x87, 0x3d, 0xf4, 0x49, 0x90, 0xed, 0xb4, 0x4b, 0x0f, 0x15, 0x5c, 0x22, 0xcf, 0x37, 0xdf, 0xcc,
	0x37, 0xf9, 0x3c, 0x06, 0xef, 0x0b, 0x22, 0xca, 0x2e, 0x0d, 0x33, 0x56, 0x4f, 0x2a, 0xc6, 0x6a,
	0x8a, 0xc5, 0x25, 0x6b, 0x97, 0x93, 0x82, 0x1d, 0xc8, 0x70, 0x22, 0xd6, 0x0d, 0xe6, 0xfa, 0x1b,
	0x36, 0x2d, 0x13, 0xec, 0xe5, 0xc1, 0x1f, 0x15, 0x05, 0x2b, 0xd8, 0x44, 0xc1, 0x69, 0xf7, 0x43,
	0x45, 0x2a, 0x50, 0x27, 0x4d, 0xf7, 0xaf, 0x4d, 0xe0, 0x46, 0x15, 0xcb, 0x96, 0x67, 0x18, 0xe5,
	0xb8, 0x85, 0x6f, 0x80, 0x93, 0x95, 0x88, 0xd0, 0x05, 0xc9, 0x47, 0x86, 0x67, 0x04, 0xc3, 0xc8,
	0xbd, 0xd9, 0x8c, 0xed, 0x13, 0x89, 0xc5, 0xa7, 0x89, 0xad, 0x92, 0x71, 0x0e, 0x9f, 0x81, 0x41,
	0x89, 0x49, 0x51, 0x8a, 0x91, 0xe9, 0x19, 0xc1, 0x4e, 0xd2, 0x47, 0x10, 0x82, 0x5d, 0x41, 0x6a,
	0x3c, 0xda, 0x51, 0xa8, 0x3a, 0xc3, 0xe7, 0xc0, 0xa6, 0x5d, 0xbd, 0x10, 0x57, 0x7c, 0xb4, 0xeb,
	0x19, 0x81, 0x95, 0x0c, 0x68, 0x57, 0x5f, 0x5c, 0x71, 0x78, 0x0c, 0xf6, 0x2a, 0xc4, 0xc5, 0x22,
	0x95, 0x03, 0x48, 0x45, 0xcb, 0x33, 0x02, 0xf7, 0xd0, 0x09, 0xd5, 0x44, 0xf1, 0x69, 0xf4, 0xe4,
	0x7a, 0x33, 0xfe, 0xef, 0x66, 0x33, 0x76, 0xa7, 0x88, 0x8b, 0x1e, 0x4c, 0xdc, 0xea, 0x2e, 0xc8,
	0x61, 0x00, 0x1e, 0xab, 0x16, 0x19, 0xab, 0x6b, 0x22, 0x16, 0x25, 0xe2, 0xe5, 0x68, 0xe0, 0x19,
	0xc1, 0xff, 0xc9, 0xbe, 0xc4, 0x4f, 0x14, 0x7c, 0x86, 0x78, 0x09, 0x5f, 0x81, 0x61, 0x8e, 0x04,
	0xd2, 0x14, 0x5b, 0x51, 0x1c, 0x09, 0xa8, 0xe4, 0x5b, 0xf0, 0x68, 0x85, 0x2a, 0x92, 0x23, 0xc1,
	0x5a, 0xae, 0x29, 0x8e, 0xee, 0xb2, 0x85, 0x15, 0xf1, 0x05, 0x70, 0x50, 0xd3, 0x68, 0xc6, 0x50,
	0x31, 0x6c, 0xd4, 0x34, 0x32, 0xe5, 0xc7, 0xc0, 0xee, 0x47, 0x94, 0x2e, 0x28, 0x86, 0xa1, 0x18,
	0xea, 0x0c, 0xdf, 0x01, 0xab, 0x41, 0xad, 0xe0, 0xca, 0x30, 0xf7, 0x70, 0x3f, 0x9c, 0xa1, 0x56,
	0x7c, 0xc3, 0x42, 0x1b, 0x1f, 0xed, 0xca, 0x5f, 0x4d, 0x34, 0xc5, 0xff, 0x0c, 0xf6, 0xee, 0x65,
	0xe1, 0x53, 0x60, 0x09, 0x26, 0x50, 0xa5, 0x3a, 0x5a, 0x89, 0x0e, 0xee, 0x64, 0xcc, 0xad, 0x8c,
	0x7f, 0x04, 0x86, 0xf3, 0xdb, 0x91, 0xa5, 0xf3, 0x4d, 0x97, 0x2e, 0x96, 0x78, 0xdd, 0x8f, 0x32,
	0x68, 0xba, 0xf4, 0x1c, 0xaf, 0x65, 0xbf, 0x86, 0x5d, 0xe2, 0xb6, 0xbf, 0x3d, 0x1d, 0xf8, 0x5f,
	0x80, 0xf3, 0x75, 0x45, 0x72, 0x4c, 0x33, 0xfc, 0x70, 0xe9, 0x03, 0x37, 0xef, 0xcf, 0x81, 0x1d,
	0x91, 0xe2, 0x7b, 0x4c, 0x05, 0x3c, 0x07, 0xd6, 0x1c, 0x55, 0x1d, 0xd6, 0x95, 0xd1, 0x27, 0xf9,
	0x6b, 0xbf, 0x36, 0xe3, 0x83, 0xbf, 0x2c, 0xb3, 0xbc, 0x43, 0x46, 0xc3, 0xbe, 0x4b, 0xa2, 0x7b,
	0xf8, 0x2b, 0x60, 0x1f, 0xe7, 0x79, 0x8b, 0x39, 0x97, 0xe6, 0xdf, 0x5f, 0xce, 0xed, 0x3e, 0xce,
	0x80, 0x55, 0xb1, 0x0c, 0x55, 0xda, 0x8b, 0xe8, 0xa8, 0x97, 0x3c, 0xfc, 0x37, 0xc9, 0xa9, 0x2c,
	0xed, 0x55, 0x12, 0xdd, 0xc8, 0xff, 0x00, 0xdc, 0x8b, 0x16, 0x51, 0x8e, 0x32, 0x41, 0x18, 0x85,
	0xfb, 0xc0, 0xec, 0x55, 0xf7, 0x12, 0x93, 0xe4, 0xd2, 0x7b, 0xb9, 0x3d, 0xb7, 0xde, 0xcb, 0x73,
	0xe4, 0xfd, 0x34, 0x5f, 0x4f, 0x19, 0xab, 0xc3, 0x93, 0x8a, 0x60, 0x2a, 0xc2, 0x98, 0x0a, 0xdc,
	0x52, 0x54, 0x85, 0xb3, 0xfe, 0x0d, 0xa6, 0x03, 0xf5, 0xea, 0x3e, 0xfe, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x54, 0xfc, 0x8c, 0xca, 0xd8, 0x03, 0x00, 0x00,
}
