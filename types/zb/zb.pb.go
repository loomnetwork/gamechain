// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/zombie_battleground/types/zb/zb.proto

/*
Package zb is a generated protocol buffer package.

It is generated from these files:
	github.com/loomnetwork/zombie_battleground/types/zb/zb.proto

It has these top-level messages:
	ZBAccount
	UpsertAccountRequest
	GetAccountRequest
	GetDecksRequest
	DecksResponse
	ZBDeck
	UserDecks
	CardInCollection
	GetDeckRequest
	AddDeckRequest
	DeleteDeckRequest
	GetDecksResponse
	ZBCardCollection
	InitRequest
	Card
	Effect
	CardList
*/
package zb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ZBAccount struct {
	UserId              string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PhoneNumberVerified bool   `protobuf:"varint,2,opt,name=phone_number_verified,json=phoneNumberVerified,proto3" json:"phone_number_verified,omitempty"`
	RewardRedeemed      bool   `protobuf:"varint,3,opt,name=reward_redeemed,json=rewardRedeemed,proto3" json:"reward_redeemed,omitempty"`
	IsKickstarter       bool   `protobuf:"varint,4,opt,name=is_kickstarter,json=isKickstarter,proto3" json:"is_kickstarter,omitempty"`
	Image               string `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	EmailNotification   bool   `protobuf:"varint,6,opt,name=email_notification,json=emailNotification,proto3" json:"email_notification,omitempty"`
	EloScore            int64  `protobuf:"varint,7,opt,name=elo_score,json=eloScore,proto3" json:"elo_score,omitempty"`
	CurrentTier         int32  `protobuf:"varint,8,opt,name=current_tier,json=currentTier,proto3" json:"current_tier,omitempty"`
	GameMembershipTier  int32  `protobuf:"varint,9,opt,name=game_membership_tier,json=gameMembershipTier,proto3" json:"game_membership_tier,omitempty"`
	Owner               []byte `protobuf:"bytes,10,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (m *ZBAccount) Reset()                    { *m = ZBAccount{} }
func (m *ZBAccount) String() string            { return proto.CompactTextString(m) }
func (*ZBAccount) ProtoMessage()               {}
func (*ZBAccount) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{0} }

func (m *ZBAccount) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ZBAccount) GetPhoneNumberVerified() bool {
	if m != nil {
		return m.PhoneNumberVerified
	}
	return false
}

func (m *ZBAccount) GetRewardRedeemed() bool {
	if m != nil {
		return m.RewardRedeemed
	}
	return false
}

func (m *ZBAccount) GetIsKickstarter() bool {
	if m != nil {
		return m.IsKickstarter
	}
	return false
}

func (m *ZBAccount) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ZBAccount) GetEmailNotification() bool {
	if m != nil {
		return m.EmailNotification
	}
	return false
}

func (m *ZBAccount) GetEloScore() int64 {
	if m != nil {
		return m.EloScore
	}
	return 0
}

func (m *ZBAccount) GetCurrentTier() int32 {
	if m != nil {
		return m.CurrentTier
	}
	return 0
}

func (m *ZBAccount) GetGameMembershipTier() int32 {
	if m != nil {
		return m.GameMembershipTier
	}
	return 0
}

func (m *ZBAccount) GetOwner() []byte {
	if m != nil {
		return m.Owner
	}
	return nil
}

type UpsertAccountRequest struct {
	UserId              string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PhoneNumberVerified bool   `protobuf:"varint,2,opt,name=phone_number_verified,json=phoneNumberVerified,proto3" json:"phone_number_verified,omitempty"`
	RewardRedeemed      bool   `protobuf:"varint,3,opt,name=reward_redeemed,json=rewardRedeemed,proto3" json:"reward_redeemed,omitempty"`
	IsKickstarter       bool   `protobuf:"varint,4,opt,name=is_kickstarter,json=isKickstarter,proto3" json:"is_kickstarter,omitempty"`
	Image               string `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	EmailNotification   bool   `protobuf:"varint,6,opt,name=email_notification,json=emailNotification,proto3" json:"email_notification,omitempty"`
	EloScore            int64  `protobuf:"varint,7,opt,name=elo_score,json=eloScore,proto3" json:"elo_score,omitempty"`
	CurrentTier         int32  `protobuf:"varint,8,opt,name=current_tier,json=currentTier,proto3" json:"current_tier,omitempty"`
	GameMembershipTier  int32  `protobuf:"varint,9,opt,name=game_membership_tier,json=gameMembershipTier,proto3" json:"game_membership_tier,omitempty"`
}

func (m *UpsertAccountRequest) Reset()                    { *m = UpsertAccountRequest{} }
func (m *UpsertAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*UpsertAccountRequest) ProtoMessage()               {}
func (*UpsertAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{1} }

func (m *UpsertAccountRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpsertAccountRequest) GetPhoneNumberVerified() bool {
	if m != nil {
		return m.PhoneNumberVerified
	}
	return false
}

func (m *UpsertAccountRequest) GetRewardRedeemed() bool {
	if m != nil {
		return m.RewardRedeemed
	}
	return false
}

func (m *UpsertAccountRequest) GetIsKickstarter() bool {
	if m != nil {
		return m.IsKickstarter
	}
	return false
}

func (m *UpsertAccountRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *UpsertAccountRequest) GetEmailNotification() bool {
	if m != nil {
		return m.EmailNotification
	}
	return false
}

func (m *UpsertAccountRequest) GetEloScore() int64 {
	if m != nil {
		return m.EloScore
	}
	return 0
}

func (m *UpsertAccountRequest) GetCurrentTier() int32 {
	if m != nil {
		return m.CurrentTier
	}
	return 0
}

func (m *UpsertAccountRequest) GetGameMembershipTier() int32 {
	if m != nil {
		return m.GameMembershipTier
	}
	return 0
}

type GetAccountRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (m *GetAccountRequest) Reset()                    { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()               {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{2} }

func (m *GetAccountRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetDecksRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (m *GetDecksRequest) Reset()                    { *m = GetDecksRequest{} }
func (m *GetDecksRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDecksRequest) ProtoMessage()               {}
func (*GetDecksRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{3} }

func (m *GetDecksRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type DecksResponse struct {
	UserId string    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Decks  []*ZBDeck `protobuf:"bytes,2,rep,name=decks" json:"decks,omitempty"`
}

func (m *DecksResponse) Reset()                    { *m = DecksResponse{} }
func (m *DecksResponse) String() string            { return proto.CompactTextString(m) }
func (*DecksResponse) ProtoMessage()               {}
func (*DecksResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{4} }

func (m *DecksResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DecksResponse) GetDecks() []*ZBDeck {
	if m != nil {
		return m.Decks
	}
	return nil
}

type ZBDeck struct {
	Name   string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HeroId int64               `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	Cards  []*CardInCollection `protobuf:"bytes,3,rep,name=cards" json:"cards,omitempty"`
}

func (m *ZBDeck) Reset()                    { *m = ZBDeck{} }
func (m *ZBDeck) String() string            { return proto.CompactTextString(m) }
func (*ZBDeck) ProtoMessage()               {}
func (*ZBDeck) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{5} }

func (m *ZBDeck) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ZBDeck) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *ZBDeck) GetCards() []*CardInCollection {
	if m != nil {
		return m.Cards
	}
	return nil
}

type UserDecks struct {
	Decks []*ZBDeck `protobuf:"bytes,1,rep,name=decks" json:"decks,omitempty"`
}

func (m *UserDecks) Reset()                    { *m = UserDecks{} }
func (m *UserDecks) String() string            { return proto.CompactTextString(m) }
func (*UserDecks) ProtoMessage()               {}
func (*UserDecks) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{6} }

func (m *UserDecks) GetDecks() []*ZBDeck {
	if m != nil {
		return m.Decks
	}
	return nil
}

type CardInCollection struct {
	CardId int64 `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *CardInCollection) Reset()                    { *m = CardInCollection{} }
func (m *CardInCollection) String() string            { return proto.CompactTextString(m) }
func (*CardInCollection) ProtoMessage()               {}
func (*CardInCollection) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{7} }

func (m *CardInCollection) GetCardId() int64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *CardInCollection) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type GetDeckRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeckId string `protobuf:"bytes,2,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
}

func (m *GetDeckRequest) Reset()                    { *m = GetDeckRequest{} }
func (m *GetDeckRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeckRequest) ProtoMessage()               {}
func (*GetDeckRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{8} }

func (m *GetDeckRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetDeckRequest) GetDeckId() string {
	if m != nil {
		return m.DeckId
	}
	return ""
}

type AddDeckRequest struct {
	UserId string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Deck   *ZBDeck `protobuf:"bytes,2,opt,name=deck" json:"deck,omitempty"`
}

func (m *AddDeckRequest) Reset()                    { *m = AddDeckRequest{} }
func (m *AddDeckRequest) String() string            { return proto.CompactTextString(m) }
func (*AddDeckRequest) ProtoMessage()               {}
func (*AddDeckRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{9} }

func (m *AddDeckRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddDeckRequest) GetDeck() *ZBDeck {
	if m != nil {
		return m.Deck
	}
	return nil
}

type DeleteDeckRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeckId string `protobuf:"bytes,2,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
}

func (m *DeleteDeckRequest) Reset()                    { *m = DeleteDeckRequest{} }
func (m *DeleteDeckRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeckRequest) ProtoMessage()               {}
func (*DeleteDeckRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{10} }

func (m *DeleteDeckRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeleteDeckRequest) GetDeckId() string {
	if m != nil {
		return m.DeckId
	}
	return ""
}

type GetDecksResponse struct {
	Decks []*ZBDeck `protobuf:"bytes,1,rep,name=decks" json:"decks,omitempty"`
}

func (m *GetDecksResponse) Reset()                    { *m = GetDecksResponse{} }
func (m *GetDecksResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDecksResponse) ProtoMessage()               {}
func (*GetDecksResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{11} }

func (m *GetDecksResponse) GetDecks() []*ZBDeck {
	if m != nil {
		return m.Decks
	}
	return nil
}

type ZBCardCollection struct {
	Cards []*CardInCollection `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
}

func (m *ZBCardCollection) Reset()                    { *m = ZBCardCollection{} }
func (m *ZBCardCollection) String() string            { return proto.CompactTextString(m) }
func (*ZBCardCollection) ProtoMessage()               {}
func (*ZBCardCollection) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{12} }

func (m *ZBCardCollection) GetCards() []*CardInCollection {
	if m != nil {
		return m.Cards
	}
	return nil
}

type InitRequest struct {
	DefaultDecks      []*ZBDeck         `protobuf:"bytes,1,rep,name=default_decks,json=defaultDecks" json:"default_decks,omitempty"`
	DefaultCollection *ZBCardCollection `protobuf:"bytes,2,opt,name=default_collection,json=defaultCollection" json:"default_collection,omitempty"`
	Cards             []*Card           `protobuf:"bytes,3,rep,name=cards" json:"cards,omitempty"`
}

func (m *InitRequest) Reset()                    { *m = InitRequest{} }
func (m *InitRequest) String() string            { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()               {}
func (*InitRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{13} }

func (m *InitRequest) GetDefaultDecks() []*ZBDeck {
	if m != nil {
		return m.DefaultDecks
	}
	return nil
}

func (m *InitRequest) GetDefaultCollection() *ZBCardCollection {
	if m != nil {
		return m.DefaultCollection
	}
	return nil
}

func (m *InitRequest) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Card struct {
	Id      string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Element string    `protobuf:"bytes,3,opt,name=element,proto3" json:"element,omitempty"`
	Rank    string    `protobuf:"bytes,4,opt,name=rank,proto3" json:"rank,omitempty"`
	Type    string    `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Attack  int32     `protobuf:"varint,6,opt,name=attack,proto3" json:"attack,omitempty"`
	Defence int32     `protobuf:"varint,7,opt,name=defence,proto3" json:"defence,omitempty"`
	GooCost int32     `protobuf:"varint,8,opt,name=goo_cost,json=gooCost,proto3" json:"goo_cost,omitempty"`
	Ability string    `protobuf:"bytes,9,opt,name=ability,proto3" json:"ability,omitempty"`
	Effects []*Effect `protobuf:"bytes,10,rep,name=effects" json:"effects,omitempty"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{14} }

func (m *Card) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Card) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Card) GetElement() string {
	if m != nil {
		return m.Element
	}
	return ""
}

func (m *Card) GetRank() string {
	if m != nil {
		return m.Rank
	}
	return ""
}

func (m *Card) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Card) GetAttack() int32 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *Card) GetDefence() int32 {
	if m != nil {
		return m.Defence
	}
	return 0
}

func (m *Card) GetGooCost() int32 {
	if m != nil {
		return m.GooCost
	}
	return 0
}

func (m *Card) GetAbility() string {
	if m != nil {
		return m.Ability
	}
	return ""
}

func (m *Card) GetEffects() []*Effect {
	if m != nil {
		return m.Effects
	}
	return nil
}

type Effect struct {
	Trigger  string `protobuf:"bytes,1,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Effect   string `protobuf:"bytes,2,opt,name=effect,proto3" json:"effect,omitempty"`
	Duration string `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Target   string `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Limit    string `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (m *Effect) Reset()                    { *m = Effect{} }
func (m *Effect) String() string            { return proto.CompactTextString(m) }
func (*Effect) ProtoMessage()               {}
func (*Effect) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{15} }

func (m *Effect) GetTrigger() string {
	if m != nil {
		return m.Trigger
	}
	return ""
}

func (m *Effect) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

func (m *Effect) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Effect) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Effect) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

type CardList struct {
	Cards []*Card `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
}

func (m *CardList) Reset()                    { *m = CardList{} }
func (m *CardList) String() string            { return proto.CompactTextString(m) }
func (*CardList) ProtoMessage()               {}
func (*CardList) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{16} }

func (m *CardList) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

func init() {
	proto.RegisterType((*ZBAccount)(nil), "ZBAccount")
	proto.RegisterType((*UpsertAccountRequest)(nil), "UpsertAccountRequest")
	proto.RegisterType((*GetAccountRequest)(nil), "GetAccountRequest")
	proto.RegisterType((*GetDecksRequest)(nil), "GetDecksRequest")
	proto.RegisterType((*DecksResponse)(nil), "DecksResponse")
	proto.RegisterType((*ZBDeck)(nil), "ZBDeck")
	proto.RegisterType((*UserDecks)(nil), "UserDecks")
	proto.RegisterType((*CardInCollection)(nil), "CardInCollection")
	proto.RegisterType((*GetDeckRequest)(nil), "GetDeckRequest")
	proto.RegisterType((*AddDeckRequest)(nil), "AddDeckRequest")
	proto.RegisterType((*DeleteDeckRequest)(nil), "DeleteDeckRequest")
	proto.RegisterType((*GetDecksResponse)(nil), "GetDecksResponse")
	proto.RegisterType((*ZBCardCollection)(nil), "ZBCardCollection")
	proto.RegisterType((*InitRequest)(nil), "InitRequest")
	proto.RegisterType((*Card)(nil), "Card")
	proto.RegisterType((*Effect)(nil), "Effect")
	proto.RegisterType((*CardList)(nil), "CardList")
}

func init() {
	proto.RegisterFile("github.com/loomnetwork/zombie_battleground/types/zb/zb.proto", fileDescriptorZb)
}

var fileDescriptorZb = []byte{
	// 845 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x55, 0xc1, 0x6f, 0xe3, 0xc4,
	0x17, 0x96, 0x93, 0xda, 0x89, 0x5f, 0xdb, 0xb4, 0x99, 0x5f, 0x7f, 0xac, 0xa1, 0x42, 0xca, 0x5a,
	0x42, 0x1b, 0xad, 0x96, 0x04, 0x76, 0x8f, 0x70, 0x60, 0xd3, 0x5d, 0xaa, 0x88, 0x65, 0x0f, 0x03,
	0xe5, 0xd0, 0x03, 0x96, 0xed, 0x79, 0x71, 0x47, 0xb1, 0x3d, 0x61, 0x66, 0x4c, 0xd5, 0x9e, 0xf9,
	0x2b, 0xf8, 0x13, 0xf8, 0xd3, 0xb8, 0xc3, 0x19, 0xcd, 0x78, 0x9c, 0x86, 0x65, 0x51, 0x57, 0x42,
	0xdc, 0xb8, 0xcd, 0xf7, 0xde, 0x9b, 0xcf, 0xdf, 0x7c, 0xef, 0xe9, 0x19, 0x3e, 0x2f, 0xb8, 0xbe,
	0x6a, 0xb2, 0x59, 0x2e, 0xaa, 0x79, 0x29, 0x44, 0x55, 0xa3, 0xbe, 0x16, 0x72, 0x3d, 0xbf, 0x15,
	0x55, 0xc6, 0x31, 0xc9, 0x52, 0xad, 0x4b, 0x2c, 0xa4, 0x68, 0x6a, 0x36, 0xd7, 0x37, 0x1b, 0x54,
	0xf3, 0xdb, 0x6c, 0x7e, 0x9b, 0xcd, 0x36, 0x52, 0x68, 0x11, 0xff, 0xd6, 0x83, 0xf0, 0x72, 0xf1,
	0x3c, 0xcf, 0x45, 0x53, 0x6b, 0xf2, 0x00, 0x06, 0x8d, 0x42, 0x99, 0x70, 0x16, 0x79, 0x13, 0x6f,
	0x1a, 0xd2, 0xc0, 0xc0, 0x25, 0x23, 0x4f, 0xe1, 0xff, 0x9b, 0x2b, 0x51, 0x63, 0x52, 0x37, 0x55,
	0x86, 0x32, 0xf9, 0x11, 0x25, 0x5f, 0x71, 0x64, 0x51, 0x6f, 0xe2, 0x4d, 0x87, 0xf4, 0x7f, 0x36,
	0xf9, 0xda, 0xe6, 0xbe, 0x73, 0x29, 0xf2, 0x08, 0x8e, 0x24, 0x5e, 0xa7, 0x92, 0x25, 0x12, 0x19,
	0x62, 0x85, 0x2c, 0xea, 0xdb, 0xea, 0x51, 0x1b, 0xa6, 0x2e, 0x4a, 0x3e, 0x82, 0x11, 0x57, 0xc9,
	0x9a, 0xe7, 0x6b, 0xa5, 0x53, 0xa9, 0x51, 0x46, 0x7b, 0xb6, 0xee, 0x90, 0xab, 0xaf, 0xee, 0x82,
	0xe4, 0x04, 0x7c, 0x5e, 0xa5, 0x05, 0x46, 0xbe, 0x95, 0xd6, 0x02, 0xf2, 0x31, 0x10, 0xac, 0x52,
	0x5e, 0x26, 0xb5, 0xd0, 0x7c, 0xc5, 0xf3, 0x54, 0x73, 0x51, 0x47, 0x81, 0x25, 0x18, 0xdb, 0xcc,
	0xeb, 0x9d, 0x04, 0x39, 0x85, 0x10, 0x4b, 0x91, 0xa8, 0x5c, 0x48, 0x8c, 0x06, 0x13, 0x6f, 0xda,
	0xa7, 0x43, 0x2c, 0xc5, 0x37, 0x06, 0x93, 0x87, 0x70, 0x90, 0x37, 0x52, 0x62, 0xad, 0x13, 0xcd,
	0x51, 0x46, 0xc3, 0x89, 0x37, 0xf5, 0xe9, 0xbe, 0x8b, 0x7d, 0xcb, 0x51, 0x92, 0x4f, 0xe0, 0xa4,
	0x48, 0x2b, 0x4c, 0x2a, 0x34, 0x6f, 0x55, 0x57, 0x7c, 0xd3, 0x96, 0x86, 0xb6, 0x94, 0x98, 0xdc,
	0xd7, 0xdb, 0x94, 0xbd, 0x71, 0x02, 0xbe, 0xb8, 0xae, 0x51, 0x46, 0x30, 0xf1, 0xa6, 0x07, 0xb4,
	0x05, 0xf1, 0xaf, 0x3d, 0x38, 0xb9, 0xd8, 0x28, 0x94, 0xda, 0x79, 0x4f, 0xf1, 0x87, 0x06, 0xd5,
	0x7f, 0x2d, 0xf8, 0x17, 0x5a, 0x10, 0x3f, 0x81, 0xf1, 0x39, 0xbe, 0xab, 0xd1, 0xf1, 0x63, 0x38,
	0x3a, 0x47, 0xfd, 0x02, 0xf3, 0xb5, 0xba, 0xb7, 0xf6, 0x1c, 0x0e, 0x5d, 0xa1, 0xda, 0x88, 0x5a,
	0xe1, 0xdf, 0xb7, 0xef, 0x43, 0xf0, 0x99, 0xa9, 0x8c, 0x7a, 0x93, 0xfe, 0x74, 0xff, 0xe9, 0x60,
	0x76, 0xb9, 0x30, 0x37, 0x69, 0x1b, 0x8d, 0xbf, 0x87, 0xa0, 0x0d, 0x10, 0x02, 0x7b, 0x75, 0x5a,
	0xa1, 0xbb, 0x6e, 0xcf, 0x86, 0xf5, 0x0a, 0xa5, 0x30, 0xac, 0x3d, 0x6b, 0x58, 0x60, 0xe0, 0xd2,
	0x34, 0xd8, 0xcf, 0x53, 0xc9, 0x54, 0xd4, 0xb7, 0xac, 0xe3, 0xd9, 0x59, 0x2a, 0xd9, 0xb2, 0x3e,
	0x13, 0x65, 0x89, 0xb9, 0x71, 0x9b, 0xb6, 0xf9, 0xf8, 0x31, 0x84, 0x17, 0x0a, 0xa5, 0x15, 0x7b,
	0xa7, 0xc5, 0x7b, 0xab, 0x96, 0x33, 0x38, 0x7e, 0x93, 0xc6, 0x28, 0x30, 0x44, 0xdd, 0xbb, 0xfa,
	0x34, 0x30, 0x70, 0xc9, 0xc8, 0x7b, 0x10, 0xa4, 0x95, 0xf1, 0xb5, 0x53, 0xd6, 0xa2, 0x78, 0x01,
	0x23, 0xe7, 0xe2, 0xbd, 0x93, 0xfd, 0x00, 0x06, 0xe6, 0xc3, 0xdd, 0xeb, 0x42, 0x1a, 0x18, 0xb8,
	0x64, 0xf1, 0x97, 0x30, 0x7a, 0xce, 0xd8, 0x3b, 0x71, 0x9c, 0xc2, 0x9e, 0xb9, 0x64, 0x09, 0x76,
	0x5e, 0x64, 0x83, 0xf1, 0x4b, 0x18, 0xbf, 0xc0, 0x12, 0x35, 0xfe, 0x33, 0x39, 0x9f, 0xc2, 0xf1,
	0xdd, 0x60, 0xb8, 0x7e, 0xdf, 0x63, 0xe5, 0x67, 0x70, 0x7c, 0xb9, 0x30, 0x66, 0xee, 0x58, 0xb9,
	0xed, 0x99, 0x77, 0x4f, 0xcf, 0x7e, 0xf6, 0x60, 0x7f, 0x59, 0xf3, 0xed, 0xc4, 0x3e, 0x81, 0x43,
	0x86, 0xab, 0xb4, 0x29, 0x75, 0xf2, 0xd6, 0x6f, 0x1e, 0xb8, 0x6c, 0xdb, 0xe4, 0x2f, 0x80, 0x74,
	0xd5, 0xf9, 0x96, 0xda, 0xf9, 0x33, 0x9e, 0xbd, 0xa9, 0x8a, 0x8e, 0x5d, 0xf1, 0x8e, 0xd0, 0xd3,
	0x3f, 0x0f, 0x97, 0x6f, 0x85, 0x76, 0xe2, 0x7e, 0xf7, 0x60, 0xcf, 0x60, 0x32, 0x82, 0xde, 0xd6,
	0xc2, 0x1e, 0x67, 0xdb, 0xf9, 0xed, 0xed, 0xcc, 0x6f, 0x04, 0x03, 0x2c, 0xb1, 0xc2, 0x5a, 0xdb,
	0xfd, 0x13, 0xd2, 0x0e, 0x9a, 0x6a, 0x99, 0xd6, 0x6b, 0xbb, 0x6e, 0x42, 0x6a, 0xcf, 0x26, 0x66,
	0x7e, 0x54, 0x6e, 0xc9, 0xd8, 0xb3, 0x1d, 0x33, 0xad, 0xd3, 0x7c, 0x6d, 0xf7, 0x8a, 0x4f, 0x1d,
	0x32, 0xcc, 0x0c, 0x57, 0x58, 0xe7, 0xed, 0x2a, 0xf1, 0x69, 0x07, 0xc9, 0xfb, 0x30, 0x2c, 0x84,
	0x48, 0x72, 0xa1, 0xb4, 0xdb, 0x22, 0x83, 0x42, 0x88, 0x33, 0xa1, 0xb4, 0xb9, 0x94, 0x66, 0xbc,
	0xe4, 0xfa, 0xc6, 0x2e, 0x8d, 0x90, 0x76, 0x90, 0x3c, 0x84, 0x01, 0xae, 0x56, 0x98, 0x6b, 0x15,
	0x81, 0x33, 0xf7, 0xa5, 0xc5, 0xb4, 0x8b, 0xc7, 0x3f, 0x79, 0x10, 0xb4, 0x31, 0xc3, 0xa3, 0x25,
	0x2f, 0x0a, 0x94, 0xee, 0xfd, 0x1d, 0x34, 0x72, 0xdb, 0xfa, 0x6e, 0x84, 0x5a, 0x44, 0x3e, 0x80,
	0x21, 0x6b, 0x64, 0xbb, 0x20, 0x5b, 0x27, 0xb6, 0xd8, 0xdc, 0xd1, 0xa9, 0x2c, 0x50, 0x3b, 0x33,
	0x1c, 0x32, 0x4b, 0xb7, 0xe4, 0x15, 0xd7, 0xdd, 0xd2, 0xb5, 0x20, 0x7e, 0x04, 0x43, 0x63, 0xff,
	0x2b, 0xae, 0xf4, 0x5d, 0xa3, 0xbc, 0xbf, 0x36, 0x6a, 0x41, 0x7e, 0xe9, 0x1d, 0xbd, 0x12, 0xa2,
	0x9a, 0x5d, 0xd4, 0x5c, 0xdf, 0x3c, 0x63, 0xb3, 0xcb, 0x2c, 0x0b, 0xec, 0xcf, 0xff, 0xd9, 0x1f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x07, 0x1b, 0x26, 0x03, 0x3c, 0x08, 0x00, 0x00,
}
