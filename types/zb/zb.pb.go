// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/zombie_battleground/types/zb/zb.proto

/*
Package zb is a generated protocol buffer package.

It is generated from these files:
	github.com/loomnetwork/zombie_battleground/types/zb/zb.proto

It has these top-level messages:
	Account
	Deck
	Card
	CardViewInfo
	Coordinates
	Effect
	Ability
	CardList
	CardCollection
	CardSet
	CardLibrary
	Hero
	ListHeroesRequest
	ListHeroesResponse
	AddHeroExperienceRequest
	AddHeroExperienceResponse
	GetHeroRequest
	GetHeroResponse
	GetHeroSkillsRequest
	GetHeroSkillsResponse
	Skill
	HeroList
	CardCollectionList
	DeckList
	InitRequest
	UpsertAccountRequest
	GetAccountRequest
	GetDeckRequest
	GetDeckResponse
	CreateDeckRequest
	CreateDeckResponse
	DeleteDeckRequest
	EditDeckRequest
	DecksResponse
	ListDecksRequest
	ListDecksResponse
	ListCardLibraryRequest
	ListCardLibraryResponse
	ListHeroLibraryRequest
	ListHeroLibraryResponse
	GetCollectionRequest
	GetCollectionResponse
	PlayerState
	Match
	PlayerAction
	PlayerActionEvent
	PlayersInMatchmakingList
	PendingMatchList
	MatchList
	MatchCount
	FindMatchRequest
	FindMatchResponse
	AcceptMatchRequest
	AcceptMatchResponse
	RejectMatchRequest
	RejectMatchResponse
	StartMatchRequest
	StartMatchResponse
	LeaveMatchRequest
	LeaveMatchResponse
	GetMatchRequest
	GetMatchResponse
	PlayerActionRequest
	PlayerActionResponse
	GlobalState
	GameState
	AbilityInstance
	CardAbility
	CardInstance
	CardPrototype
	DataIdOwner
	CardDeck
	InstanceIdOwner
	OverlordInstance
	OverlordPrototype
	OverlordSkillInstance
	OverlordSkillPrototype
	PlayerActionCardAttack
	PlayerActionDrawCard
	PlayerActionEndTurn
	PlayerActionMulligan
	PlayerActionOutcome
	PlayerActionUseCardAbility
	PlayerActionUseOverlordSkill
	StartGameAction
	Unit
*/
package zb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type PlayerActionType int32

const (
	PlayerActionType_NoneAction       PlayerActionType = 0
	PlayerActionType_FindMatch        PlayerActionType = 1
	PlayerActionType_AcceptMatch      PlayerActionType = 2
	PlayerActionType_RejectMatch      PlayerActionType = 3
	PlayerActionType_LeaveMatch       PlayerActionType = 4
	PlayerActionType_AllAcceptMatch   PlayerActionType = 5
	PlayerActionType_StartMatch       PlayerActionType = 6
	PlayerActionType_EndTurn          PlayerActionType = 7
	PlayerActionType_Mulligan         PlayerActionType = 8
	PlayerActionType_DrawCardPlayer   PlayerActionType = 9
	PlayerActionType_PlayCard         PlayerActionType = 10
	PlayerActionType_CardAttack       PlayerActionType = 11
	PlayerActionType_UseCardAbility   PlayerActionType = 12
	PlayerActionType_UseOverlordSkill PlayerActionType = 13
)

var PlayerActionType_name = map[int32]string{
	0:  "NoneAction",
	1:  "FindMatch",
	2:  "AcceptMatch",
	3:  "RejectMatch",
	4:  "LeaveMatch",
	5:  "AllAcceptMatch",
	6:  "StartMatch",
	7:  "EndTurn",
	8:  "Mulligan",
	9:  "DrawCardPlayer",
	10: "PlayCard",
	11: "CardAttack",
	12: "UseCardAbility",
	13: "UseOverlordSkill",
}
var PlayerActionType_value = map[string]int32{
	"NoneAction":       0,
	"FindMatch":        1,
	"AcceptMatch":      2,
	"RejectMatch":      3,
	"LeaveMatch":       4,
	"AllAcceptMatch":   5,
	"StartMatch":       6,
	"EndTurn":          7,
	"Mulligan":         8,
	"DrawCardPlayer":   9,
	"PlayCard":         10,
	"CardAttack":       11,
	"UseCardAbility":   12,
	"UseOverlordSkill": 13,
}

func (x PlayerActionType) String() string {
	return proto.EnumName(PlayerActionType_name, int32(x))
}
func (PlayerActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{0} }

type AllowedTarget int32

const (
	AllowedTarget_NoneAllowedTarget AllowedTarget = 0
	AllowedTarget_Player            AllowedTarget = 1
	AllowedTarget_PlayerCard        AllowedTarget = 2
	AllowedTarget_PlayerAllCards    AllowedTarget = 3
	AllowedTarget_Opponent          AllowedTarget = 4
	AllowedTarget_OpponentCard      AllowedTarget = 5
	AllowedTarget_OpponentAllCards  AllowedTarget = 6
	AllowedTarget_AllCards          AllowedTarget = 7
	AllowedTarget_All               AllowedTarget = 8
)

var AllowedTarget_name = map[int32]string{
	0: "NoneAllowedTarget",
	1: "Player",
	2: "PlayerCard",
	3: "PlayerAllCards",
	4: "Opponent",
	5: "OpponentCard",
	6: "OpponentAllCards",
	7: "AllCards",
	8: "All",
}
var AllowedTarget_value = map[string]int32{
	"NoneAllowedTarget": 0,
	"Player":            1,
	"PlayerCard":        2,
	"PlayerAllCards":    3,
	"Opponent":          4,
	"OpponentCard":      5,
	"OpponentAllCards":  6,
	"AllCards":          7,
	"All":               8,
}

func (x AllowedTarget) String() string {
	return proto.EnumName(AllowedTarget_name, int32(x))
}
func (AllowedTarget) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{1} }

type AttackRestriction int32

const (
	AttackRestriction_NoneAttackRestriction               AttackRestriction = 0
	AttackRestriction_OnlyNotAttackedByThisUnitInThisTurn AttackRestriction = 1
)

var AttackRestriction_name = map[int32]string{
	0: "NoneAttackRestriction",
	1: "OnlyNotAttackedByThisUnitInThisTurn",
}
var AttackRestriction_value = map[string]int32{
	"NoneAttackRestriction":               0,
	"OnlyNotAttackedByThisUnitInThisTurn": 1,
}

func (x AttackRestriction) String() string {
	return proto.EnumName(AttackRestriction_name, int32(x))
}
func (AttackRestriction) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{2} }

type CardAbilityActivityType int32

const (
	CardAbilityActivityType_Passive CardAbilityActivityType = 0
	CardAbilityActivityType_Active  CardAbilityActivityType = 1
)

var CardAbilityActivityType_name = map[int32]string{
	0: "Passive",
	1: "Active",
}
var CardAbilityActivityType_value = map[string]int32{
	"Passive": 0,
	"Active":  1,
}

func (x CardAbilityActivityType) String() string {
	return proto.EnumName(CardAbilityActivityType_name, int32(x))
}
func (CardAbilityActivityType) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{3} }

type CardAbilityEffect int32

const (
	CardAbilityEffect_NoneCardAbilityEffect CardAbilityEffect = 0
	CardAbilityEffect_MassiveWaterWave      CardAbilityEffect = 1
	CardAbilityEffect_MassiveFire           CardAbilityEffect = 2
	CardAbilityEffect_MassiveLightning      CardAbilityEffect = 3
	CardAbilityEffect_MassiveToxicAll       CardAbilityEffect = 4
	CardAbilityEffect_TargetRock            CardAbilityEffect = 5
	CardAbilityEffect_TargetFire            CardAbilityEffect = 6
	CardAbilityEffect_TargetLife            CardAbilityEffect = 7
	CardAbilityEffect_TargetToxic           CardAbilityEffect = 8
	CardAbilityEffect_TargetWater           CardAbilityEffect = 9
	CardAbilityEffect_TargetAdjustmentsBomb CardAbilityEffect = 10
	CardAbilityEffect_StunFreezes           CardAbilityEffect = 11
	CardAbilityEffect_StunOrDamageFreezes   CardAbilityEffect = 12
	CardAbilityEffect_TargetAdjustmentsAir  CardAbilityEffect = 13
	CardAbilityEffect_HealDirectly          CardAbilityEffect = 14
	CardAbilityEffect_HealCardAbilityEffect CardAbilityEffect = 15
)

var CardAbilityEffect_name = map[int32]string{
	0:  "NoneCardAbilityEffect",
	1:  "MassiveWaterWave",
	2:  "MassiveFire",
	3:  "MassiveLightning",
	4:  "MassiveToxicAll",
	5:  "TargetRock",
	6:  "TargetFire",
	7:  "TargetLife",
	8:  "TargetToxic",
	9:  "TargetWater",
	10: "TargetAdjustmentsBomb",
	11: "StunFreezes",
	12: "StunOrDamageFreezes",
	13: "TargetAdjustmentsAir",
	14: "HealDirectly",
	15: "HealCardAbilityEffect",
}
var CardAbilityEffect_value = map[string]int32{
	"NoneCardAbilityEffect": 0,
	"MassiveWaterWave":      1,
	"MassiveFire":           2,
	"MassiveLightning":      3,
	"MassiveToxicAll":       4,
	"TargetRock":            5,
	"TargetFire":            6,
	"TargetLife":            7,
	"TargetToxic":           8,
	"TargetWater":           9,
	"TargetAdjustmentsBomb": 10,
	"StunFreezes":           11,
	"StunOrDamageFreezes":   12,
	"TargetAdjustmentsAir":  13,
	"HealDirectly":          14,
	"HealCardAbilityEffect": 15,
}

func (x CardAbilityEffect) String() string {
	return proto.EnumName(CardAbilityEffect_name, int32(x))
}
func (CardAbilityEffect) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{4} }

type CardAbilityTrigger int32

const (
	CardAbilityTrigger_Turn      CardAbilityTrigger = 0
	CardAbilityTrigger_Entry     CardAbilityTrigger = 1
	CardAbilityTrigger_End       CardAbilityTrigger = 2
	CardAbilityTrigger_Attack    CardAbilityTrigger = 3
	CardAbilityTrigger_Death     CardAbilityTrigger = 4
	CardAbilityTrigger_Permanent CardAbilityTrigger = 5
	CardAbilityTrigger_GotDamage CardAbilityTrigger = 6
	CardAbilityTrigger_AtDefence CardAbilityTrigger = 7
	CardAbilityTrigger_InHand    CardAbilityTrigger = 8
)

var CardAbilityTrigger_name = map[int32]string{
	0: "Turn",
	1: "Entry",
	2: "End",
	3: "Attack",
	4: "Death",
	5: "Permanent",
	6: "GotDamage",
	7: "AtDefence",
	8: "InHand",
}
var CardAbilityTrigger_value = map[string]int32{
	"Turn":      0,
	"Entry":     1,
	"End":       2,
	"Attack":    3,
	"Death":     4,
	"Permanent": 5,
	"GotDamage": 6,
	"AtDefence": 7,
	"InHand":    8,
}

func (x CardAbilityTrigger) String() string {
	return proto.EnumName(CardAbilityTrigger_name, int32(x))
}
func (CardAbilityTrigger) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{5} }

type CardAbilityType int32

const (
	CardAbilityType_HealCardAbilityType                     CardAbilityType = 0
	CardAbilityType_ModificatorStats                        CardAbilityType = 1
	CardAbilityType_ChangeStat                              CardAbilityType = 2
	CardAbilityType_Stun                                    CardAbilityType = 3
	CardAbilityType_StunOrDamageAdjustments                 CardAbilityType = 4
	CardAbilityType_Spurt                                   CardAbilityType = 5
	CardAbilityType_AddGooVial                              CardAbilityType = 6
	CardAbilityType_AddGooCarrier                           CardAbilityType = 7
	CardAbilityType_Dot                                     CardAbilityType = 8
	CardAbilityType_Summon                                  CardAbilityType = 9
	CardAbilityType_SpellAttack                             CardAbilityType = 10
	CardAbilityType_MassiveDamage                           CardAbilityType = 11
	CardAbilityType_DamageTargetAdjustments                 CardAbilityType = 12
	CardAbilityType_DamageTarget                            CardAbilityType = 13
	CardAbilityType_CardReturn                              CardAbilityType = 14
	CardAbilityType_Weapon                                  CardAbilityType = 15
	CardAbilityType_ChangeStatOfCreaturesByType             CardAbilityType = 16
	CardAbilityType_AttackNumberOfTimesPerTurn              CardAbilityType = 17
	CardAbilityType_DrawCardCardAbilityType                 CardAbilityType = 18
	CardAbilityType_DevourZombiesAndCombineStats            CardAbilityType = 19
	CardAbilityType_DestroyUnitByType                       CardAbilityType = 20
	CardAbilityType_LowerCostOfCardInHand                   CardAbilityType = 21
	CardAbilityType_OverflowGoo                             CardAbilityType = 22
	CardAbilityType_LoseGoo                                 CardAbilityType = 23
	CardAbilityType_DisableNextTurnGoo                      CardAbilityType = 24
	CardAbilityType_Rage                                    CardAbilityType = 25
	CardAbilityType_FreezeUnits                             CardAbilityType = 26
	CardAbilityType_TakeDamageRandomEnemy                   CardAbilityType = 27
	CardAbilityType_TakeControlEnemyUnit                    CardAbilityType = 28
	CardAbilityType_Guard                                   CardAbilityType = 29
	CardAbilityType_DestroyFrozenUnit                       CardAbilityType = 30
	CardAbilityType_UseAllGooToIncreaseStats                CardAbilityType = 31
	CardAbilityType_FirstUnitInPlay                         CardAbilityType = 32
	CardAbilityType_AllyUnitsOfTypeInPlayGetStats           CardAbilityType = 33
	CardAbilityType_DamageEnemyUnitsAndFreezeThem           CardAbilityType = 34
	CardAbilityType_ReturnUnitsOnBoardToOwnersDecks         CardAbilityType = 35
	CardAbilityType_TakeUnitTypeToAdjacentAllyUnits         CardAbilityType = 36
	CardAbilityType_EnemyThatAttacksBecomeFrozen            CardAbilityType = 37
	CardAbilityType_TakeUnitTypeToAllyUnit                  CardAbilityType = 38
	CardAbilityType_ReviveDiedUnitsOfTypeFromMatch          CardAbilityType = 39
	CardAbilityType_ChangeStatUntillEndOfTurn               CardAbilityType = 40
	CardAbilityType_AttackOverlord                          CardAbilityType = 41
	CardAbilityType_AdjacentUnitsGetHeavy                   CardAbilityType = 42
	CardAbilityType_FreezeNumberOfRandomAlly                CardAbilityType = 43
	CardAbilityType_AddCardByNameToHand                     CardAbilityType = 44
	CardAbilityType_DealDamageToThisAndAdjacentUnits        CardAbilityType = 45
	CardAbilityType_Swing                                   CardAbilityType = 46
	CardAbilityType_TakeDefenceIfOverlordHasLessDefenceThan CardAbilityType = 47
	CardAbilityType_GainNumberOfLifeForEachDamageThisDeals  CardAbilityType = 48
	CardAbilityType_AdditionalDamageToHeavyInAttack         CardAbilityType = 49
	CardAbilityType_UnitWeapon                              CardAbilityType = 50
	CardAbilityType_TakeDamageAtEndOfTurnToThis             CardAbilityType = 51
	CardAbilityType_DelayedLoseHeavyGainAttack              CardAbilityType = 52
	CardAbilityType_DelayedGainAttack                       CardAbilityType = 53
	CardAbilityType_ReanimateUnit                           CardAbilityType = 54
	CardAbilityType_PriorityAttack                          CardAbilityType = 55
	CardAbilityType_DestroyTargetUnitAfterAttack            CardAbilityType = 56
	CardAbilityType_CostsLessIfCardTypeInHand               CardAbilityType = 57
	CardAbilityType_ReturnUnitsOnBoardToOwnersHands         CardAbilityType = 58
)

var CardAbilityType_name = map[int32]string{
	0:  "HealCardAbilityType",
	1:  "ModificatorStats",
	2:  "ChangeStat",
	3:  "Stun",
	4:  "StunOrDamageAdjustments",
	5:  "Spurt",
	6:  "AddGooVial",
	7:  "AddGooCarrier",
	8:  "Dot",
	9:  "Summon",
	10: "SpellAttack",
	11: "MassiveDamage",
	12: "DamageTargetAdjustments",
	13: "DamageTarget",
	14: "CardReturn",
	15: "Weapon",
	16: "ChangeStatOfCreaturesByType",
	17: "AttackNumberOfTimesPerTurn",
	18: "DrawCardCardAbilityType",
	19: "DevourZombiesAndCombineStats",
	20: "DestroyUnitByType",
	21: "LowerCostOfCardInHand",
	22: "OverflowGoo",
	23: "LoseGoo",
	24: "DisableNextTurnGoo",
	25: "Rage",
	26: "FreezeUnits",
	27: "TakeDamageRandomEnemy",
	28: "TakeControlEnemyUnit",
	29: "Guard",
	30: "DestroyFrozenUnit",
	31: "UseAllGooToIncreaseStats",
	32: "FirstUnitInPlay",
	33: "AllyUnitsOfTypeInPlayGetStats",
	34: "DamageEnemyUnitsAndFreezeThem",
	35: "ReturnUnitsOnBoardToOwnersDecks",
	36: "TakeUnitTypeToAdjacentAllyUnits",
	37: "EnemyThatAttacksBecomeFrozen",
	38: "TakeUnitTypeToAllyUnit",
	39: "ReviveDiedUnitsOfTypeFromMatch",
	40: "ChangeStatUntillEndOfTurn",
	41: "AttackOverlord",
	42: "AdjacentUnitsGetHeavy",
	43: "FreezeNumberOfRandomAlly",
	44: "AddCardByNameToHand",
	45: "DealDamageToThisAndAdjacentUnits",
	46: "Swing",
	47: "TakeDefenceIfOverlordHasLessDefenceThan",
	48: "GainNumberOfLifeForEachDamageThisDeals",
	49: "AdditionalDamageToHeavyInAttack",
	50: "UnitWeapon",
	51: "TakeDamageAtEndOfTurnToThis",
	52: "DelayedLoseHeavyGainAttack",
	53: "DelayedGainAttack",
	54: "ReanimateUnit",
	55: "PriorityAttack",
	56: "DestroyTargetUnitAfterAttack",
	57: "CostsLessIfCardTypeInHand",
	58: "ReturnUnitsOnBoardToOwnersHands",
}
var CardAbilityType_value = map[string]int32{
	"HealCardAbilityType": 0,
	"ModificatorStats":    1,
	"ChangeStat":          2,
	"Stun":                3,
	"StunOrDamageAdjustments":          4,
	"Spurt":                            5,
	"AddGooVial":                       6,
	"AddGooCarrier":                    7,
	"Dot":                              8,
	"Summon":                           9,
	"SpellAttack":                      10,
	"MassiveDamage":                    11,
	"DamageTargetAdjustments":          12,
	"DamageTarget":                     13,
	"CardReturn":                       14,
	"Weapon":                           15,
	"ChangeStatOfCreaturesByType":      16,
	"AttackNumberOfTimesPerTurn":       17,
	"DrawCardCardAbilityType":          18,
	"DevourZombiesAndCombineStats":     19,
	"DestroyUnitByType":                20,
	"LowerCostOfCardInHand":            21,
	"OverflowGoo":                      22,
	"LoseGoo":                          23,
	"DisableNextTurnGoo":               24,
	"Rage":                             25,
	"FreezeUnits":                      26,
	"TakeDamageRandomEnemy":            27,
	"TakeControlEnemyUnit":             28,
	"Guard":                            29,
	"DestroyFrozenUnit":                30,
	"UseAllGooToIncreaseStats":         31,
	"FirstUnitInPlay":                  32,
	"AllyUnitsOfTypeInPlayGetStats":    33,
	"DamageEnemyUnitsAndFreezeThem":    34,
	"ReturnUnitsOnBoardToOwnersDecks":  35,
	"TakeUnitTypeToAdjacentAllyUnits":  36,
	"EnemyThatAttacksBecomeFrozen":     37,
	"TakeUnitTypeToAllyUnit":           38,
	"ReviveDiedUnitsOfTypeFromMatch":   39,
	"ChangeStatUntillEndOfTurn":        40,
	"AttackOverlord":                   41,
	"AdjacentUnitsGetHeavy":            42,
	"FreezeNumberOfRandomAlly":         43,
	"AddCardByNameToHand":              44,
	"DealDamageToThisAndAdjacentUnits": 45,
	"Swing": 46,
	"TakeDefenceIfOverlordHasLessDefenceThan": 47,
	"GainNumberOfLifeForEachDamageThisDeals":  48,
	"AdditionalDamageToHeavyInAttack":         49,
	"UnitWeapon":                              50,
	"TakeDamageAtEndOfTurnToThis":             51,
	"DelayedLoseHeavyGainAttack":              52,
	"DelayedGainAttack":                       53,
	"ReanimateUnit":                           54,
	"PriorityAttack":                          55,
	"DestroyTargetUnitAfterAttack":            56,
	"CostsLessIfCardTypeInHand":               57,
	"ReturnUnitsOnBoardToOwnersHands":         58,
}

func (x CardAbilityType) String() string {
	return proto.EnumName(CardAbilityType_name, int32(x))
}
func (CardAbilityType) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{6} }

type CardType int32

const (
	CardType_Creature CardType = 0
	CardType_Spell    CardType = 1
)

var CardType_name = map[int32]string{
	0: "Creature",
	1: "Spell",
}
var CardType_value = map[string]int32{
	"Creature": 0,
	"Spell":    1,
}

func (x CardType) String() string {
	return proto.EnumName(CardType_name, int32(x))
}
func (CardType) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{7} }

type CreatureRank int32

const (
	CreatureRank_Minion    CreatureRank = 0
	CreatureRank_Officer   CreatureRank = 1
	CreatureRank_Commander CreatureRank = 2
	CreatureRank_General   CreatureRank = 3
)

var CreatureRank_name = map[int32]string{
	0: "Minion",
	1: "Officer",
	2: "Commander",
	3: "General",
}
var CreatureRank_value = map[string]int32{
	"Minion":    0,
	"Officer":   1,
	"Commander": 2,
	"General":   3,
}

func (x CreatureRank) String() string {
	return proto.EnumName(CreatureRank_name, int32(x))
}
func (CreatureRank) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{8} }

type CreatureType int32

const (
	CreatureType_Normal CreatureType = 0
	CreatureType_Walker CreatureType = 1
	CreatureType_Feral  CreatureType = 2
	CreatureType_Heavy  CreatureType = 3
)

var CreatureType_name = map[int32]string{
	0: "Normal",
	1: "Walker",
	2: "Feral",
	3: "Heavy",
}
var CreatureType_value = map[string]int32{
	"Normal": 0,
	"Walker": 1,
	"Feral":  2,
	"Heavy":  3,
}

func (x CreatureType) String() string {
	return proto.EnumName(CreatureType_name, int32(x))
}
func (CreatureType) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{9} }

type ElementKind int32

const (
	ElementKind_Fire            ElementKind = 0
	ElementKind_Water           ElementKind = 1
	ElementKind_Earth           ElementKind = 2
	ElementKind_Air             ElementKind = 3
	ElementKind_Life            ElementKind = 4
	ElementKind_Toxic           ElementKind = 5
	ElementKind_Item            ElementKind = 6
	ElementKind_Others          ElementKind = 7
	ElementKind_NoneElementKind ElementKind = 8
)

var ElementKind_name = map[int32]string{
	0: "Fire",
	1: "Water",
	2: "Earth",
	3: "Air",
	4: "Life",
	5: "Toxic",
	6: "Item",
	7: "Others",
	8: "NoneElementKind",
}
var ElementKind_value = map[string]int32{
	"Fire":            0,
	"Water":           1,
	"Earth":           2,
	"Air":             3,
	"Life":            4,
	"Toxic":           5,
	"Item":            6,
	"Others":          7,
	"NoneElementKind": 8,
}

func (x ElementKind) String() string {
	return proto.EnumName(ElementKind_name, int32(x))
}
func (ElementKind) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{10} }

type OverlordSkillKind int32

const (
	OverlordSkillKind_NoneOverlordSkillKind OverlordSkillKind = 0
	// AIR
	OverlordSkillKind_Push       OverlordSkillKind = 1
	OverlordSkillKind_Draw       OverlordSkillKind = 2
	OverlordSkillKind_WindShield OverlordSkillKind = 3
	OverlordSkillKind_WindWall   OverlordSkillKind = 4
	OverlordSkillKind_Retreat    OverlordSkillKind = 5
	// EARTH
	OverlordSkillKind_Harden    OverlordSkillKind = 6
	OverlordSkillKind_StoneSkin OverlordSkillKind = 7
	OverlordSkillKind_Fortify   OverlordSkillKind = 8
	OverlordSkillKind_Phalanx   OverlordSkillKind = 9
	OverlordSkillKind_Fortress  OverlordSkillKind = 10
	// FIRE
	OverlordSkillKind_FireBolt     OverlordSkillKind = 11
	OverlordSkillKind_Rabies       OverlordSkillKind = 12
	OverlordSkillKind_Fireball     OverlordSkillKind = 13
	OverlordSkillKind_MassRabies   OverlordSkillKind = 14
	OverlordSkillKind_MeteorShower OverlordSkillKind = 15
	// LIFE
	OverlordSkillKind_HealingTouch OverlordSkillKind = 16
	OverlordSkillKind_Mend         OverlordSkillKind = 17
	OverlordSkillKind_Ressurect    OverlordSkillKind = 18
	OverlordSkillKind_Enhance      OverlordSkillKind = 19
	OverlordSkillKind_Reanimate    OverlordSkillKind = 20
	// TOXIC
	OverlordSkillKind_PoisonDart OverlordSkillKind = 21
	OverlordSkillKind_ToxicPower OverlordSkillKind = 22
	OverlordSkillKind_Breakout   OverlordSkillKind = 23
	OverlordSkillKind_Infect     OverlordSkillKind = 24
	OverlordSkillKind_Epidemic   OverlordSkillKind = 25
	// WATER
	OverlordSkillKind_Freeze   OverlordSkillKind = 26
	OverlordSkillKind_IceBolt  OverlordSkillKind = 27
	OverlordSkillKind_IceWall  OverlordSkillKind = 28
	OverlordSkillKind_Shatter  OverlordSkillKind = 29
	OverlordSkillKind_Blizzard OverlordSkillKind = 30
)

var OverlordSkillKind_name = map[int32]string{
	0:  "NoneOverlordSkillKind",
	1:  "Push",
	2:  "Draw",
	3:  "WindShield",
	4:  "WindWall",
	5:  "Retreat",
	6:  "Harden",
	7:  "StoneSkin",
	8:  "Fortify",
	9:  "Phalanx",
	10: "Fortress",
	11: "FireBolt",
	12: "Rabies",
	13: "Fireball",
	14: "MassRabies",
	15: "MeteorShower",
	16: "HealingTouch",
	17: "Mend",
	18: "Ressurect",
	19: "Enhance",
	20: "Reanimate",
	21: "PoisonDart",
	22: "ToxicPower",
	23: "Breakout",
	24: "Infect",
	25: "Epidemic",
	26: "Freeze",
	27: "IceBolt",
	28: "IceWall",
	29: "Shatter",
	30: "Blizzard",
}
var OverlordSkillKind_value = map[string]int32{
	"NoneOverlordSkillKind": 0,
	"Push":                  1,
	"Draw":                  2,
	"WindShield":            3,
	"WindWall":              4,
	"Retreat":               5,
	"Harden":                6,
	"StoneSkin":             7,
	"Fortify":               8,
	"Phalanx":               9,
	"Fortress":              10,
	"FireBolt":              11,
	"Rabies":                12,
	"Fireball":              13,
	"MassRabies":            14,
	"MeteorShower":          15,
	"HealingTouch":          16,
	"Mend":                  17,
	"Ressurect":             18,
	"Enhance":               19,
	"Reanimate":             20,
	"PoisonDart":            21,
	"ToxicPower":            22,
	"Breakout":              23,
	"Infect":                24,
	"Epidemic":              25,
	"Freeze":                26,
	"IceBolt":               27,
	"IceWall":               28,
	"Shatter":               29,
	"Blizzard":              30,
}

func (x OverlordSkillKind) String() string {
	return proto.EnumName(OverlordSkillKind_name, int32(x))
}
func (OverlordSkillKind) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{11} }

type OverlordSkillSelectionType int32

const (
	OverlordSkillSelectionType_Primary   OverlordSkillSelectionType = 0
	OverlordSkillSelectionType_Secondary OverlordSkillSelectionType = 1
)

var OverlordSkillSelectionType_name = map[int32]string{
	0: "Primary",
	1: "Secondary",
}
var OverlordSkillSelectionType_value = map[string]int32{
	"Primary":   0,
	"Secondary": 1,
}

func (x OverlordSkillSelectionType) String() string {
	return proto.EnumName(OverlordSkillSelectionType_name, int32(x))
}
func (OverlordSkillSelectionType) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{12} }

type StatType int32

const (
	StatType_NoneStatType StatType = 0
	StatType_Health       StatType = 1
	StatType_Damage       StatType = 2
)

var StatType_name = map[int32]string{
	0: "NoneStatType",
	1: "Health",
	2: "Damage",
}
var StatType_value = map[string]int32{
	"NoneStatType": 0,
	"Health":       1,
	"Damage":       2,
}

func (x StatType) String() string {
	return proto.EnumName(StatType_name, int32(x))
}
func (StatType) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{13} }

type UnitSpecialStatus int32

const (
	UnitSpecialStatus_NoneUnitSpecialStatus UnitSpecialStatus = 0
	UnitSpecialStatus_Frozen                UnitSpecialStatus = 1
)

var UnitSpecialStatus_name = map[int32]string{
	0: "NoneUnitSpecialStatus",
	1: "Frozen",
}
var UnitSpecialStatus_value = map[string]int32{
	"NoneUnitSpecialStatus": 0,
	"Frozen":                1,
}

func (x UnitSpecialStatus) String() string {
	return proto.EnumName(UnitSpecialStatus_name, int32(x))
}
func (UnitSpecialStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{14} }

type Skill_SkillTargetType int32

const (
	Skill_NONE               Skill_SkillTargetType = 0
	Skill_PLAYER             Skill_SkillTargetType = 1
	Skill_PLAYER_CARD        Skill_SkillTargetType = 2
	Skill_PLAYER_ALL_CARDS   Skill_SkillTargetType = 3
	Skill_OPPONENT           Skill_SkillTargetType = 4
	Skill_OPPONENT_CARD      Skill_SkillTargetType = 5
	Skill_OPPONENT_ALL_CARDS Skill_SkillTargetType = 6
	Skill_ALL_CARDS          Skill_SkillTargetType = 7
)

var Skill_SkillTargetType_name = map[int32]string{
	0: "NONE",
	1: "PLAYER",
	2: "PLAYER_CARD",
	3: "PLAYER_ALL_CARDS",
	4: "OPPONENT",
	5: "OPPONENT_CARD",
	6: "OPPONENT_ALL_CARDS",
	7: "ALL_CARDS",
}
var Skill_SkillTargetType_value = map[string]int32{
	"NONE":               0,
	"PLAYER":             1,
	"PLAYER_CARD":        2,
	"PLAYER_ALL_CARDS":   3,
	"OPPONENT":           4,
	"OPPONENT_CARD":      5,
	"OPPONENT_ALL_CARDS": 6,
	"ALL_CARDS":          7,
}

func (x Skill_SkillTargetType) String() string {
	return proto.EnumName(Skill_SkillTargetType_name, int32(x))
}
func (Skill_SkillTargetType) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{20, 0} }

type Match_Status int32

const (
	Match_Created    Match_Status = 0
	Match_Matching   Match_Status = 1
	Match_Started    Match_Status = 2
	Match_PlayerLeft Match_Status = 3
	Match_Ended      Match_Status = 4
)

var Match_Status_name = map[int32]string{
	0: "Created",
	1: "Matching",
	2: "Started",
	3: "PlayerLeft",
	4: "Ended",
}
var Match_Status_value = map[string]int32{
	"Created":    0,
	"Matching":   1,
	"Started":    2,
	"PlayerLeft": 3,
	"Ended":      4,
}

func (x Match_Status) String() string {
	return proto.EnumName(Match_Status_name, int32(x))
}
func (Match_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptorZb, []int{43, 0} }

type Account struct {
	UserId              string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PhoneNumberVerified bool   `protobuf:"varint,2,opt,name=phone_number_verified,json=phoneNumberVerified,proto3" json:"phone_number_verified,omitempty"`
	RewardRedeemed      bool   `protobuf:"varint,3,opt,name=reward_redeemed,json=rewardRedeemed,proto3" json:"reward_redeemed,omitempty"`
	IsKickstarter       bool   `protobuf:"varint,4,opt,name=is_kickstarter,json=isKickstarter,proto3" json:"is_kickstarter,omitempty"`
	Image               string `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	EmailNotification   bool   `protobuf:"varint,6,opt,name=email_notification,json=emailNotification,proto3" json:"email_notification,omitempty"`
	EloScore            int64  `protobuf:"varint,7,opt,name=elo_score,json=eloScore,proto3" json:"elo_score,omitempty"`
	CurrentTier         int32  `protobuf:"varint,8,opt,name=current_tier,json=currentTier,proto3" json:"current_tier,omitempty"`
	GameMembershipTier  int32  `protobuf:"varint,9,opt,name=game_membership_tier,json=gameMembershipTier,proto3" json:"game_membership_tier,omitempty"`
	Owner               []byte `protobuf:"bytes,10,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{0} }

func (m *Account) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Account) GetPhoneNumberVerified() bool {
	if m != nil {
		return m.PhoneNumberVerified
	}
	return false
}

func (m *Account) GetRewardRedeemed() bool {
	if m != nil {
		return m.RewardRedeemed
	}
	return false
}

func (m *Account) GetIsKickstarter() bool {
	if m != nil {
		return m.IsKickstarter
	}
	return false
}

func (m *Account) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Account) GetEmailNotification() bool {
	if m != nil {
		return m.EmailNotification
	}
	return false
}

func (m *Account) GetEloScore() int64 {
	if m != nil {
		return m.EloScore
	}
	return 0
}

func (m *Account) GetCurrentTier() int32 {
	if m != nil {
		return m.CurrentTier
	}
	return 0
}

func (m *Account) GetGameMembershipTier() int32 {
	if m != nil {
		return m.GameMembershipTier
	}
	return 0
}

func (m *Account) GetOwner() []byte {
	if m != nil {
		return m.Owner
	}
	return nil
}

type Deck struct {
	Id     int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	HeroId int64             `protobuf:"varint,3,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	Cards  []*CardCollection `protobuf:"bytes,4,rep,name=cards" json:"cards,omitempty"`
}

func (m *Deck) Reset()                    { *m = Deck{} }
func (m *Deck) String() string            { return proto.CompactTextString(m) }
func (*Deck) ProtoMessage()               {}
func (*Deck) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{1} }

func (m *Deck) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Deck) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Deck) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Deck) GetCards() []*CardCollection {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Card struct {
	Id           int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind         string        `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Set          string        `protobuf:"bytes,3,opt,name=set,proto3" json:"set,omitempty"`
	Name         string        `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description  string        `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	FlavorText   string        `protobuf:"bytes,6,opt,name=flavor_text,json=flavorText,proto3" json:"flavor_text,omitempty"`
	Picture      string        `protobuf:"bytes,7,opt,name=picture,proto3" json:"picture,omitempty"`
	Rank         string        `protobuf:"bytes,8,opt,name=rank,proto3" json:"rank,omitempty"`
	Type         string        `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Rarity       string        `protobuf:"bytes,10,opt,name=rarity,proto3" json:"rarity,omitempty"`
	Frame        string        `protobuf:"bytes,11,opt,name=frame,proto3" json:"frame,omitempty"`
	Damage       int32         `protobuf:"varint,12,opt,name=damage,proto3" json:"damage,omitempty"`
	Health       int32         `protobuf:"varint,13,opt,name=health,proto3" json:"health,omitempty"`
	Cost         int32         `protobuf:"varint,14,opt,name=cost,proto3" json:"cost,omitempty"`
	Ability      string        `protobuf:"bytes,15,opt,name=ability,proto3" json:"ability,omitempty"`
	CardViewInfo *CardViewInfo `protobuf:"bytes,16,opt,name=card_view_info,json=cardViewInfo" json:"card_view_info,omitempty"`
	Effects      []*Effect     `protobuf:"bytes,17,rep,name=effects" json:"effects,omitempty"`
	Abilities    []*Ability    `protobuf:"bytes,18,rep,name=abilities" json:"abilities,omitempty"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{2} }

func (m *Card) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Card) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Card) GetSet() string {
	if m != nil {
		return m.Set
	}
	return ""
}

func (m *Card) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Card) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Card) GetFlavorText() string {
	if m != nil {
		return m.FlavorText
	}
	return ""
}

func (m *Card) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *Card) GetRank() string {
	if m != nil {
		return m.Rank
	}
	return ""
}

func (m *Card) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Card) GetRarity() string {
	if m != nil {
		return m.Rarity
	}
	return ""
}

func (m *Card) GetFrame() string {
	if m != nil {
		return m.Frame
	}
	return ""
}

func (m *Card) GetDamage() int32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

func (m *Card) GetHealth() int32 {
	if m != nil {
		return m.Health
	}
	return 0
}

func (m *Card) GetCost() int32 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *Card) GetAbility() string {
	if m != nil {
		return m.Ability
	}
	return ""
}

func (m *Card) GetCardViewInfo() *CardViewInfo {
	if m != nil {
		return m.CardViewInfo
	}
	return nil
}

func (m *Card) GetEffects() []*Effect {
	if m != nil {
		return m.Effects
	}
	return nil
}

func (m *Card) GetAbilities() []*Ability {
	if m != nil {
		return m.Abilities
	}
	return nil
}

type CardViewInfo struct {
	Position *Coordinates `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Scale    *Coordinates `protobuf:"bytes,2,opt,name=scale" json:"scale,omitempty"`
}

func (m *CardViewInfo) Reset()                    { *m = CardViewInfo{} }
func (m *CardViewInfo) String() string            { return proto.CompactTextString(m) }
func (*CardViewInfo) ProtoMessage()               {}
func (*CardViewInfo) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{3} }

func (m *CardViewInfo) GetPosition() *Coordinates {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CardViewInfo) GetScale() *Coordinates {
	if m != nil {
		return m.Scale
	}
	return nil
}

type Coordinates struct {
	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (m *Coordinates) Reset()                    { *m = Coordinates{} }
func (m *Coordinates) String() string            { return proto.CompactTextString(m) }
func (*Coordinates) ProtoMessage()               {}
func (*Coordinates) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{4} }

func (m *Coordinates) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Coordinates) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Coordinates) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

type Effect struct {
	Trigger  string `protobuf:"bytes,1,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Effect   string `protobuf:"bytes,2,opt,name=effect,proto3" json:"effect,omitempty"`
	Duration string `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Target   string `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Limit    string `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (m *Effect) Reset()                    { *m = Effect{} }
func (m *Effect) String() string            { return proto.CompactTextString(m) }
func (*Effect) ProtoMessage()               {}
func (*Effect) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{5} }

func (m *Effect) GetTrigger() string {
	if m != nil {
		return m.Trigger
	}
	return ""
}

func (m *Effect) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

func (m *Effect) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Effect) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Effect) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

type Ability struct {
	Type         string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ActivityType string `protobuf:"bytes,2,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	CallType     string `protobuf:"bytes,3,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	TargetType   string `protobuf:"bytes,4,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`
	StatType     string `protobuf:"bytes,5,opt,name=stat_type,json=statType,proto3" json:"stat_type,omitempty"`
	SetType      string `protobuf:"bytes,6,opt,name=set_type,json=setType,proto3" json:"set_type,omitempty"`
	Value        int32  `protobuf:"varint,7,opt,name=value,proto3" json:"value,omitempty"`
	BuffType     string `protobuf:"bytes,8,opt,name=buff_type,json=buffType,proto3" json:"buff_type,omitempty"`
	EffectType   string `protobuf:"bytes,9,opt,name=effect_type,json=effectType,proto3" json:"effect_type,omitempty"`
	UnitType     string `protobuf:"bytes,10,opt,name=unit_type,json=unitType,proto3" json:"unit_type,omitempty"`
	Count        int32  `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`
	Name         string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	Turns        int32  `protobuf:"varint,13,opt,name=turns,proto3" json:"turns,omitempty"`
	Delay        int32  `protobuf:"varint,14,opt,name=delay,proto3" json:"delay,omitempty"`
	UnitStatus   string `protobuf:"bytes,15,opt,name=unit_status,json=unitStatus,proto3" json:"unit_status,omitempty"`
	CardType     string `protobuf:"bytes,16,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	Health       int32  `protobuf:"varint,17,opt,name=health,proto3" json:"health,omitempty"`
	Damage       int32  `protobuf:"varint,18,opt,name=damage,proto3" json:"damage,omitempty"`
	AttackInfo   string `protobuf:"bytes,19,opt,name=attack_info,json=attackInfo,proto3" json:"attack_info,omitempty"`
}

func (m *Ability) Reset()                    { *m = Ability{} }
func (m *Ability) String() string            { return proto.CompactTextString(m) }
func (*Ability) ProtoMessage()               {}
func (*Ability) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{6} }

func (m *Ability) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Ability) GetActivityType() string {
	if m != nil {
		return m.ActivityType
	}
	return ""
}

func (m *Ability) GetCallType() string {
	if m != nil {
		return m.CallType
	}
	return ""
}

func (m *Ability) GetTargetType() string {
	if m != nil {
		return m.TargetType
	}
	return ""
}

func (m *Ability) GetStatType() string {
	if m != nil {
		return m.StatType
	}
	return ""
}

func (m *Ability) GetSetType() string {
	if m != nil {
		return m.SetType
	}
	return ""
}

func (m *Ability) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Ability) GetBuffType() string {
	if m != nil {
		return m.BuffType
	}
	return ""
}

func (m *Ability) GetEffectType() string {
	if m != nil {
		return m.EffectType
	}
	return ""
}

func (m *Ability) GetUnitType() string {
	if m != nil {
		return m.UnitType
	}
	return ""
}

func (m *Ability) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Ability) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Ability) GetTurns() int32 {
	if m != nil {
		return m.Turns
	}
	return 0
}

func (m *Ability) GetDelay() int32 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *Ability) GetUnitStatus() string {
	if m != nil {
		return m.UnitStatus
	}
	return ""
}

func (m *Ability) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *Ability) GetHealth() int32 {
	if m != nil {
		return m.Health
	}
	return 0
}

func (m *Ability) GetDamage() int32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

func (m *Ability) GetAttackInfo() string {
	if m != nil {
		return m.AttackInfo
	}
	return ""
}

type CardList struct {
	Cards []*Card `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
}

func (m *CardList) Reset()                    { *m = CardList{} }
func (m *CardList) String() string            { return proto.CompactTextString(m) }
func (*CardList) ProtoMessage()               {}
func (*CardList) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{7} }

func (m *CardList) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type CardCollection struct {
	CardName string `protobuf:"bytes,1,opt,name=card_name,json=cardName,proto3" json:"card_name,omitempty"`
	Amount   int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *CardCollection) Reset()                    { *m = CardCollection{} }
func (m *CardCollection) String() string            { return proto.CompactTextString(m) }
func (*CardCollection) ProtoMessage()               {}
func (*CardCollection) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{8} }

func (m *CardCollection) GetCardName() string {
	if m != nil {
		return m.CardName
	}
	return ""
}

func (m *CardCollection) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type CardSet struct {
	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cards []*Card `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
}

func (m *CardSet) Reset()                    { *m = CardSet{} }
func (m *CardSet) String() string            { return proto.CompactTextString(m) }
func (*CardSet) ProtoMessage()               {}
func (*CardSet) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{9} }

func (m *CardSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CardSet) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type CardLibrary struct {
	Sets []*CardSet `protobuf:"bytes,1,rep,name=sets" json:"sets,omitempty"`
}

func (m *CardLibrary) Reset()                    { *m = CardLibrary{} }
func (m *CardLibrary) String() string            { return proto.CompactTextString(m) }
func (*CardLibrary) ProtoMessage()               {}
func (*CardLibrary) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{10} }

func (m *CardLibrary) GetSets() []*CardSet {
	if m != nil {
		return m.Sets
	}
	return nil
}

type Hero struct {
	HeroId           int64    `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	Icon             string   `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Name             string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ShortDescription string   `protobuf:"bytes,4,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	LongDescription  string   `protobuf:"bytes,5,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
	Element          string   `protobuf:"bytes,6,opt,name=element,proto3" json:"element,omitempty"`
	Experience       int64    `protobuf:"varint,7,opt,name=experience,proto3" json:"experience,omitempty"`
	Level            int64    `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`
	Skills           []*Skill `protobuf:"bytes,9,rep,name=skills" json:"skills,omitempty"`
	PrimarySkill     int32    `protobuf:"varint,10,opt,name=primary_skill,json=primarySkill,proto3" json:"primary_skill,omitempty"`
	SecondarySkill   int32    `protobuf:"varint,11,opt,name=secondary_skill,json=secondarySkill,proto3" json:"secondary_skill,omitempty"`
}

func (m *Hero) Reset()                    { *m = Hero{} }
func (m *Hero) String() string            { return proto.CompactTextString(m) }
func (*Hero) ProtoMessage()               {}
func (*Hero) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{11} }

func (m *Hero) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Hero) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Hero) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Hero) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *Hero) GetLongDescription() string {
	if m != nil {
		return m.LongDescription
	}
	return ""
}

func (m *Hero) GetElement() string {
	if m != nil {
		return m.Element
	}
	return ""
}

func (m *Hero) GetExperience() int64 {
	if m != nil {
		return m.Experience
	}
	return 0
}

func (m *Hero) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Hero) GetSkills() []*Skill {
	if m != nil {
		return m.Skills
	}
	return nil
}

func (m *Hero) GetPrimarySkill() int32 {
	if m != nil {
		return m.PrimarySkill
	}
	return 0
}

func (m *Hero) GetSecondarySkill() int32 {
	if m != nil {
		return m.SecondarySkill
	}
	return 0
}

type ListHeroesRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (m *ListHeroesRequest) Reset()                    { *m = ListHeroesRequest{} }
func (m *ListHeroesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListHeroesRequest) ProtoMessage()               {}
func (*ListHeroesRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{12} }

func (m *ListHeroesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ListHeroesResponse struct {
	Heroes []*Hero `protobuf:"bytes,1,rep,name=heroes" json:"heroes,omitempty"`
}

func (m *ListHeroesResponse) Reset()                    { *m = ListHeroesResponse{} }
func (m *ListHeroesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListHeroesResponse) ProtoMessage()               {}
func (*ListHeroesResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{13} }

func (m *ListHeroesResponse) GetHeroes() []*Hero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

type AddHeroExperienceRequest struct {
	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HeroId     int64  `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	Experience int64  `protobuf:"varint,3,opt,name=experience,proto3" json:"experience,omitempty"`
}

func (m *AddHeroExperienceRequest) Reset()                    { *m = AddHeroExperienceRequest{} }
func (m *AddHeroExperienceRequest) String() string            { return proto.CompactTextString(m) }
func (*AddHeroExperienceRequest) ProtoMessage()               {}
func (*AddHeroExperienceRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{14} }

func (m *AddHeroExperienceRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddHeroExperienceRequest) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *AddHeroExperienceRequest) GetExperience() int64 {
	if m != nil {
		return m.Experience
	}
	return 0
}

type AddHeroExperienceResponse struct {
	HeroId     int64 `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	Experience int64 `protobuf:"varint,2,opt,name=experience,proto3" json:"experience,omitempty"`
}

func (m *AddHeroExperienceResponse) Reset()                    { *m = AddHeroExperienceResponse{} }
func (m *AddHeroExperienceResponse) String() string            { return proto.CompactTextString(m) }
func (*AddHeroExperienceResponse) ProtoMessage()               {}
func (*AddHeroExperienceResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{15} }

func (m *AddHeroExperienceResponse) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *AddHeroExperienceResponse) GetExperience() int64 {
	if m != nil {
		return m.Experience
	}
	return 0
}

type GetHeroRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HeroId int64  `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
}

func (m *GetHeroRequest) Reset()                    { *m = GetHeroRequest{} }
func (m *GetHeroRequest) String() string            { return proto.CompactTextString(m) }
func (*GetHeroRequest) ProtoMessage()               {}
func (*GetHeroRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{16} }

func (m *GetHeroRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetHeroRequest) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

type GetHeroResponse struct {
	Hero *Hero `protobuf:"bytes,1,opt,name=hero" json:"hero,omitempty"`
}

func (m *GetHeroResponse) Reset()                    { *m = GetHeroResponse{} }
func (m *GetHeroResponse) String() string            { return proto.CompactTextString(m) }
func (*GetHeroResponse) ProtoMessage()               {}
func (*GetHeroResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{17} }

func (m *GetHeroResponse) GetHero() *Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

type GetHeroSkillsRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HeroId int64  `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
}

func (m *GetHeroSkillsRequest) Reset()                    { *m = GetHeroSkillsRequest{} }
func (m *GetHeroSkillsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetHeroSkillsRequest) ProtoMessage()               {}
func (*GetHeroSkillsRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{18} }

func (m *GetHeroSkillsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetHeroSkillsRequest) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

type GetHeroSkillsResponse struct {
	HeroId int64    `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	Skills []*Skill `protobuf:"bytes,2,rep,name=skills" json:"skills,omitempty"`
}

func (m *GetHeroSkillsResponse) Reset()                    { *m = GetHeroSkillsResponse{} }
func (m *GetHeroSkillsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetHeroSkillsResponse) ProtoMessage()               {}
func (*GetHeroSkillsResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{19} }

func (m *GetHeroSkillsResponse) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *GetHeroSkillsResponse) GetSkills() []*Skill {
	if m != nil {
		return m.Skills
	}
	return nil
}

type Skill struct {
	Title           string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Skill           string `protobuf:"bytes,2,opt,name=skill,proto3" json:"skill,omitempty"`
	IconPath        string `protobuf:"bytes,3,opt,name=icon_path,json=iconPath,proto3" json:"icon_path,omitempty"`
	Description     string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	SkillTargets    string `protobuf:"bytes,5,opt,name=skill_targets,json=skillTargets,proto3" json:"skill_targets,omitempty"`
	ElementTargets  string `protobuf:"bytes,6,opt,name=element_targets,json=elementTargets,proto3" json:"element_targets,omitempty"`
	Value           int32  `protobuf:"varint,7,opt,name=value,proto3" json:"value,omitempty"`
	Cooldown        int32  `protobuf:"varint,8,opt,name=cooldown,proto3" json:"cooldown,omitempty"`
	InitialCooldown int32  `protobuf:"varint,9,opt,name=initial_cooldown,json=initialCooldown,proto3" json:"initial_cooldown,omitempty"`
	Attack          int32  `protobuf:"varint,10,opt,name=attack,proto3" json:"attack,omitempty"`
	Health          int32  `protobuf:"varint,11,opt,name=health,proto3" json:"health,omitempty"`
}

func (m *Skill) Reset()                    { *m = Skill{} }
func (m *Skill) String() string            { return proto.CompactTextString(m) }
func (*Skill) ProtoMessage()               {}
func (*Skill) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{20} }

func (m *Skill) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Skill) GetSkill() string {
	if m != nil {
		return m.Skill
	}
	return ""
}

func (m *Skill) GetIconPath() string {
	if m != nil {
		return m.IconPath
	}
	return ""
}

func (m *Skill) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Skill) GetSkillTargets() string {
	if m != nil {
		return m.SkillTargets
	}
	return ""
}

func (m *Skill) GetElementTargets() string {
	if m != nil {
		return m.ElementTargets
	}
	return ""
}

func (m *Skill) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Skill) GetCooldown() int32 {
	if m != nil {
		return m.Cooldown
	}
	return 0
}

func (m *Skill) GetInitialCooldown() int32 {
	if m != nil {
		return m.InitialCooldown
	}
	return 0
}

func (m *Skill) GetAttack() int32 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *Skill) GetHealth() int32 {
	if m != nil {
		return m.Health
	}
	return 0
}

type HeroList struct {
	Heroes []*Hero `protobuf:"bytes,1,rep,name=heroes" json:"heroes,omitempty"`
}

func (m *HeroList) Reset()                    { *m = HeroList{} }
func (m *HeroList) String() string            { return proto.CompactTextString(m) }
func (*HeroList) ProtoMessage()               {}
func (*HeroList) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{21} }

func (m *HeroList) GetHeroes() []*Hero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

type CardCollectionList struct {
	Cards []*CardCollection `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
}

func (m *CardCollectionList) Reset()                    { *m = CardCollectionList{} }
func (m *CardCollectionList) String() string            { return proto.CompactTextString(m) }
func (*CardCollectionList) ProtoMessage()               {}
func (*CardCollectionList) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{22} }

func (m *CardCollectionList) GetCards() []*CardCollection {
	if m != nil {
		return m.Cards
	}
	return nil
}

type DeckList struct {
	Decks                     []*Deck `protobuf:"bytes,1,rep,name=decks" json:"decks,omitempty"`
	LastModificationTimestamp int64   `protobuf:"varint,2,opt,name=last_modification_timestamp,json=lastModificationTimestamp,proto3" json:"last_modification_timestamp,omitempty"`
}

func (m *DeckList) Reset()                    { *m = DeckList{} }
func (m *DeckList) String() string            { return proto.CompactTextString(m) }
func (*DeckList) ProtoMessage()               {}
func (*DeckList) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{23} }

func (m *DeckList) GetDecks() []*Deck {
	if m != nil {
		return m.Decks
	}
	return nil
}

func (m *DeckList) GetLastModificationTimestamp() int64 {
	if m != nil {
		return m.LastModificationTimestamp
	}
	return 0
}

type InitRequest struct {
	DefaultDecks      []*Deck           `protobuf:"bytes,1,rep,name=default_decks,json=defaultDecks" json:"default_decks,omitempty"`
	DefaultCollection []*CardCollection `protobuf:"bytes,2,rep,name=default_collection,json=defaultCollection" json:"default_collection,omitempty"`
	Cards             []*Card           `protobuf:"bytes,3,rep,name=cards" json:"cards,omitempty"`
	Heroes            []*Hero           `protobuf:"bytes,4,rep,name=heroes" json:"heroes,omitempty"`
}

func (m *InitRequest) Reset()                    { *m = InitRequest{} }
func (m *InitRequest) String() string            { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()               {}
func (*InitRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{24} }

func (m *InitRequest) GetDefaultDecks() []*Deck {
	if m != nil {
		return m.DefaultDecks
	}
	return nil
}

func (m *InitRequest) GetDefaultCollection() []*CardCollection {
	if m != nil {
		return m.DefaultCollection
	}
	return nil
}

func (m *InitRequest) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *InitRequest) GetHeroes() []*Hero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

type UpsertAccountRequest struct {
	UserId              string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PhoneNumberVerified bool   `protobuf:"varint,2,opt,name=phone_number_verified,json=phoneNumberVerified,proto3" json:"phone_number_verified,omitempty"`
	RewardRedeemed      bool   `protobuf:"varint,3,opt,name=reward_redeemed,json=rewardRedeemed,proto3" json:"reward_redeemed,omitempty"`
	IsKickstarter       bool   `protobuf:"varint,4,opt,name=is_kickstarter,json=isKickstarter,proto3" json:"is_kickstarter,omitempty"`
	Image               string `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	EmailNotification   bool   `protobuf:"varint,6,opt,name=email_notification,json=emailNotification,proto3" json:"email_notification,omitempty"`
	EloScore            int64  `protobuf:"varint,7,opt,name=elo_score,json=eloScore,proto3" json:"elo_score,omitempty"`
	CurrentTier         int32  `protobuf:"varint,8,opt,name=current_tier,json=currentTier,proto3" json:"current_tier,omitempty"`
	GameMembershipTier  int32  `protobuf:"varint,9,opt,name=game_membership_tier,json=gameMembershipTier,proto3" json:"game_membership_tier,omitempty"`
}

func (m *UpsertAccountRequest) Reset()                    { *m = UpsertAccountRequest{} }
func (m *UpsertAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*UpsertAccountRequest) ProtoMessage()               {}
func (*UpsertAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{25} }

func (m *UpsertAccountRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpsertAccountRequest) GetPhoneNumberVerified() bool {
	if m != nil {
		return m.PhoneNumberVerified
	}
	return false
}

func (m *UpsertAccountRequest) GetRewardRedeemed() bool {
	if m != nil {
		return m.RewardRedeemed
	}
	return false
}

func (m *UpsertAccountRequest) GetIsKickstarter() bool {
	if m != nil {
		return m.IsKickstarter
	}
	return false
}

func (m *UpsertAccountRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *UpsertAccountRequest) GetEmailNotification() bool {
	if m != nil {
		return m.EmailNotification
	}
	return false
}

func (m *UpsertAccountRequest) GetEloScore() int64 {
	if m != nil {
		return m.EloScore
	}
	return 0
}

func (m *UpsertAccountRequest) GetCurrentTier() int32 {
	if m != nil {
		return m.CurrentTier
	}
	return 0
}

func (m *UpsertAccountRequest) GetGameMembershipTier() int32 {
	if m != nil {
		return m.GameMembershipTier
	}
	return 0
}

type GetAccountRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (m *GetAccountRequest) Reset()                    { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()               {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{26} }

func (m *GetAccountRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetDeckRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeckId int64  `protobuf:"varint,2,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
}

func (m *GetDeckRequest) Reset()                    { *m = GetDeckRequest{} }
func (m *GetDeckRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeckRequest) ProtoMessage()               {}
func (*GetDeckRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{27} }

func (m *GetDeckRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetDeckRequest) GetDeckId() int64 {
	if m != nil {
		return m.DeckId
	}
	return 0
}

type GetDeckResponse struct {
	Deck *Deck `protobuf:"bytes,2,opt,name=deck" json:"deck,omitempty"`
}

func (m *GetDeckResponse) Reset()                    { *m = GetDeckResponse{} }
func (m *GetDeckResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDeckResponse) ProtoMessage()               {}
func (*GetDeckResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{28} }

func (m *GetDeckResponse) GetDeck() *Deck {
	if m != nil {
		return m.Deck
	}
	return nil
}

type CreateDeckRequest struct {
	UserId                    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Deck                      *Deck  `protobuf:"bytes,2,opt,name=deck" json:"deck,omitempty"`
	LastModificationTimestamp int64  `protobuf:"varint,3,opt,name=last_modification_timestamp,json=lastModificationTimestamp,proto3" json:"last_modification_timestamp,omitempty"`
}

func (m *CreateDeckRequest) Reset()                    { *m = CreateDeckRequest{} }
func (m *CreateDeckRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeckRequest) ProtoMessage()               {}
func (*CreateDeckRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{29} }

func (m *CreateDeckRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateDeckRequest) GetDeck() *Deck {
	if m != nil {
		return m.Deck
	}
	return nil
}

func (m *CreateDeckRequest) GetLastModificationTimestamp() int64 {
	if m != nil {
		return m.LastModificationTimestamp
	}
	return 0
}

type CreateDeckResponse struct {
	DeckId int64 `protobuf:"varint,1,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
}

func (m *CreateDeckResponse) Reset()                    { *m = CreateDeckResponse{} }
func (m *CreateDeckResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDeckResponse) ProtoMessage()               {}
func (*CreateDeckResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{30} }

func (m *CreateDeckResponse) GetDeckId() int64 {
	if m != nil {
		return m.DeckId
	}
	return 0
}

type DeleteDeckRequest struct {
	UserId                    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeckId                    int64  `protobuf:"varint,2,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
	LastModificationTimestamp int64  `protobuf:"varint,3,opt,name=last_modification_timestamp,json=lastModificationTimestamp,proto3" json:"last_modification_timestamp,omitempty"`
}

func (m *DeleteDeckRequest) Reset()                    { *m = DeleteDeckRequest{} }
func (m *DeleteDeckRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeckRequest) ProtoMessage()               {}
func (*DeleteDeckRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{31} }

func (m *DeleteDeckRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeleteDeckRequest) GetDeckId() int64 {
	if m != nil {
		return m.DeckId
	}
	return 0
}

func (m *DeleteDeckRequest) GetLastModificationTimestamp() int64 {
	if m != nil {
		return m.LastModificationTimestamp
	}
	return 0
}

type EditDeckRequest struct {
	UserId                    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Deck                      *Deck  `protobuf:"bytes,2,opt,name=deck" json:"deck,omitempty"`
	LastModificationTimestamp int64  `protobuf:"varint,3,opt,name=last_modification_timestamp,json=lastModificationTimestamp,proto3" json:"last_modification_timestamp,omitempty"`
}

func (m *EditDeckRequest) Reset()                    { *m = EditDeckRequest{} }
func (m *EditDeckRequest) String() string            { return proto.CompactTextString(m) }
func (*EditDeckRequest) ProtoMessage()               {}
func (*EditDeckRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{32} }

func (m *EditDeckRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *EditDeckRequest) GetDeck() *Deck {
	if m != nil {
		return m.Deck
	}
	return nil
}

func (m *EditDeckRequest) GetLastModificationTimestamp() int64 {
	if m != nil {
		return m.LastModificationTimestamp
	}
	return 0
}

type DecksResponse struct {
	UserId string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Decks  []*Deck `protobuf:"bytes,2,rep,name=decks" json:"decks,omitempty"`
}

func (m *DecksResponse) Reset()                    { *m = DecksResponse{} }
func (m *DecksResponse) String() string            { return proto.CompactTextString(m) }
func (*DecksResponse) ProtoMessage()               {}
func (*DecksResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{33} }

func (m *DecksResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DecksResponse) GetDecks() []*Deck {
	if m != nil {
		return m.Decks
	}
	return nil
}

type ListDecksRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (m *ListDecksRequest) Reset()                    { *m = ListDecksRequest{} }
func (m *ListDecksRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDecksRequest) ProtoMessage()               {}
func (*ListDecksRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{34} }

func (m *ListDecksRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ListDecksResponse struct {
	Decks                     []*Deck `protobuf:"bytes,1,rep,name=decks" json:"decks,omitempty"`
	LastModificationTimestamp int64   `protobuf:"varint,3,opt,name=last_modification_timestamp,json=lastModificationTimestamp,proto3" json:"last_modification_timestamp,omitempty"`
}

func (m *ListDecksResponse) Reset()                    { *m = ListDecksResponse{} }
func (m *ListDecksResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDecksResponse) ProtoMessage()               {}
func (*ListDecksResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{35} }

func (m *ListDecksResponse) GetDecks() []*Deck {
	if m != nil {
		return m.Decks
	}
	return nil
}

func (m *ListDecksResponse) GetLastModificationTimestamp() int64 {
	if m != nil {
		return m.LastModificationTimestamp
	}
	return 0
}

type ListCardLibraryRequest struct {
}

func (m *ListCardLibraryRequest) Reset()                    { *m = ListCardLibraryRequest{} }
func (m *ListCardLibraryRequest) String() string            { return proto.CompactTextString(m) }
func (*ListCardLibraryRequest) ProtoMessage()               {}
func (*ListCardLibraryRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{36} }

type ListCardLibraryResponse struct {
	Sets []*CardSet `protobuf:"bytes,1,rep,name=sets" json:"sets,omitempty"`
}

func (m *ListCardLibraryResponse) Reset()                    { *m = ListCardLibraryResponse{} }
func (m *ListCardLibraryResponse) String() string            { return proto.CompactTextString(m) }
func (*ListCardLibraryResponse) ProtoMessage()               {}
func (*ListCardLibraryResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{37} }

func (m *ListCardLibraryResponse) GetSets() []*CardSet {
	if m != nil {
		return m.Sets
	}
	return nil
}

type ListHeroLibraryRequest struct {
}

func (m *ListHeroLibraryRequest) Reset()                    { *m = ListHeroLibraryRequest{} }
func (m *ListHeroLibraryRequest) String() string            { return proto.CompactTextString(m) }
func (*ListHeroLibraryRequest) ProtoMessage()               {}
func (*ListHeroLibraryRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{38} }

type ListHeroLibraryResponse struct {
	Heroes []*Hero `protobuf:"bytes,1,rep,name=heroes" json:"heroes,omitempty"`
}

func (m *ListHeroLibraryResponse) Reset()                    { *m = ListHeroLibraryResponse{} }
func (m *ListHeroLibraryResponse) String() string            { return proto.CompactTextString(m) }
func (*ListHeroLibraryResponse) ProtoMessage()               {}
func (*ListHeroLibraryResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{39} }

func (m *ListHeroLibraryResponse) GetHeroes() []*Hero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

type GetCollectionRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (m *GetCollectionRequest) Reset()                    { *m = GetCollectionRequest{} }
func (m *GetCollectionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCollectionRequest) ProtoMessage()               {}
func (*GetCollectionRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{40} }

func (m *GetCollectionRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetCollectionResponse struct {
	Cards []*CardCollection `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
}

func (m *GetCollectionResponse) Reset()                    { *m = GetCollectionResponse{} }
func (m *GetCollectionResponse) String() string            { return proto.CompactTextString(m) }
func (*GetCollectionResponse) ProtoMessage()               {}
func (*GetCollectionResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{41} }

func (m *GetCollectionResponse) GetCards() []*CardCollection {
	if m != nil {
		return m.Cards
	}
	return nil
}

type PlayerState struct {
	Id            string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CurrentAction PlayerActionType `protobuf:"varint,2,opt,name=currentAction,proto3,enum=PlayerActionType" json:"currentAction,omitempty"`
}

func (m *PlayerState) Reset()                    { *m = PlayerState{} }
func (m *PlayerState) String() string            { return proto.CompactTextString(m) }
func (*PlayerState) ProtoMessage()               {}
func (*PlayerState) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{42} }

func (m *PlayerState) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PlayerState) GetCurrentAction() PlayerActionType {
	if m != nil {
		return m.CurrentAction
	}
	return PlayerActionType_NoneAction
}

type Match struct {
	Id           int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Topics       []string       `protobuf:"bytes,2,rep,name=topics" json:"topics,omitempty"`
	PlayerStates []*PlayerState `protobuf:"bytes,3,rep,name=playerStates" json:"playerStates,omitempty"`
	Status       Match_Status   `protobuf:"varint,4,opt,name=status,proto3,enum=Match_Status" json:"status,omitempty"`
}

func (m *Match) Reset()                    { *m = Match{} }
func (m *Match) String() string            { return proto.CompactTextString(m) }
func (*Match) ProtoMessage()               {}
func (*Match) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{43} }

func (m *Match) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Match) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *Match) GetPlayerStates() []*PlayerState {
	if m != nil {
		return m.PlayerStates
	}
	return nil
}

func (m *Match) GetStatus() Match_Status {
	if m != nil {
		return m.Status
	}
	return Match_Created
}

type PlayerAction struct {
	ActionType PlayerActionType `protobuf:"varint,1,opt,name=actionType,proto3,enum=PlayerActionType" json:"actionType,omitempty"`
	PlayerId   string           `protobuf:"bytes,6,opt,name=playerId,proto3" json:"playerId,omitempty"`
	// Types that are valid to be assigned to Action:
	//	*PlayerAction_CardAttack
	//	*PlayerAction_DrawCard
	//	*PlayerAction_EndTurn
	//	*PlayerAction_Mulligan
	Action isPlayerAction_Action `protobuf_oneof:"action"`
}

func (m *PlayerAction) Reset()                    { *m = PlayerAction{} }
func (m *PlayerAction) String() string            { return proto.CompactTextString(m) }
func (*PlayerAction) ProtoMessage()               {}
func (*PlayerAction) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{44} }

type isPlayerAction_Action interface {
	isPlayerAction_Action()
}

type PlayerAction_CardAttack struct {
	CardAttack *PlayerActionCardAttack `protobuf:"bytes,2,opt,name=cardAttack,oneof"`
}
type PlayerAction_DrawCard struct {
	DrawCard *PlayerActionDrawCard `protobuf:"bytes,3,opt,name=drawCard,oneof"`
}
type PlayerAction_EndTurn struct {
	EndTurn *PlayerActionEndTurn `protobuf:"bytes,4,opt,name=endTurn,oneof"`
}
type PlayerAction_Mulligan struct {
	Mulligan *PlayerActionMulligan `protobuf:"bytes,5,opt,name=mulligan,oneof"`
}

func (*PlayerAction_CardAttack) isPlayerAction_Action() {}
func (*PlayerAction_DrawCard) isPlayerAction_Action()   {}
func (*PlayerAction_EndTurn) isPlayerAction_Action()    {}
func (*PlayerAction_Mulligan) isPlayerAction_Action()   {}

func (m *PlayerAction) GetAction() isPlayerAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *PlayerAction) GetActionType() PlayerActionType {
	if m != nil {
		return m.ActionType
	}
	return PlayerActionType_NoneAction
}

func (m *PlayerAction) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerAction) GetCardAttack() *PlayerActionCardAttack {
	if x, ok := m.GetAction().(*PlayerAction_CardAttack); ok {
		return x.CardAttack
	}
	return nil
}

func (m *PlayerAction) GetDrawCard() *PlayerActionDrawCard {
	if x, ok := m.GetAction().(*PlayerAction_DrawCard); ok {
		return x.DrawCard
	}
	return nil
}

func (m *PlayerAction) GetEndTurn() *PlayerActionEndTurn {
	if x, ok := m.GetAction().(*PlayerAction_EndTurn); ok {
		return x.EndTurn
	}
	return nil
}

func (m *PlayerAction) GetMulligan() *PlayerActionMulligan {
	if x, ok := m.GetAction().(*PlayerAction_Mulligan); ok {
		return x.Mulligan
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PlayerAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PlayerAction_OneofMarshaler, _PlayerAction_OneofUnmarshaler, _PlayerAction_OneofSizer, []interface{}{
		(*PlayerAction_CardAttack)(nil),
		(*PlayerAction_DrawCard)(nil),
		(*PlayerAction_EndTurn)(nil),
		(*PlayerAction_Mulligan)(nil),
	}
}

func _PlayerAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PlayerAction)
	// action
	switch x := m.Action.(type) {
	case *PlayerAction_CardAttack:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CardAttack); err != nil {
			return err
		}
	case *PlayerAction_DrawCard:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DrawCard); err != nil {
			return err
		}
	case *PlayerAction_EndTurn:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EndTurn); err != nil {
			return err
		}
	case *PlayerAction_Mulligan:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mulligan); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PlayerAction.Action has unexpected type %T", x)
	}
	return nil
}

func _PlayerAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PlayerAction)
	switch tag {
	case 2: // action.cardAttack
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlayerActionCardAttack)
		err := b.DecodeMessage(msg)
		m.Action = &PlayerAction_CardAttack{msg}
		return true, err
	case 3: // action.drawCard
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlayerActionDrawCard)
		err := b.DecodeMessage(msg)
		m.Action = &PlayerAction_DrawCard{msg}
		return true, err
	case 4: // action.endTurn
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlayerActionEndTurn)
		err := b.DecodeMessage(msg)
		m.Action = &PlayerAction_EndTurn{msg}
		return true, err
	case 5: // action.mulligan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlayerActionMulligan)
		err := b.DecodeMessage(msg)
		m.Action = &PlayerAction_Mulligan{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PlayerAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PlayerAction)
	// action
	switch x := m.Action.(type) {
	case *PlayerAction_CardAttack:
		s := proto.Size(x.CardAttack)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlayerAction_DrawCard:
		s := proto.Size(x.DrawCard)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlayerAction_EndTurn:
		s := proto.Size(x.EndTurn)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlayerAction_Mulligan:
		s := proto.Size(x.Mulligan)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PlayerActionEvent struct {
	PlayerActionType PlayerActionType `protobuf:"varint,1,opt,name=playerActionType,proto3,enum=PlayerActionType" json:"playerActionType,omitempty"`
	UserId           string           `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Message          string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Match            *Match           `protobuf:"bytes,4,opt,name=match" json:"match,omitempty"`
	PlayerAction     *PlayerAction    `protobuf:"bytes,5,opt,name=playerAction" json:"playerAction,omitempty"`
}

func (m *PlayerActionEvent) Reset()                    { *m = PlayerActionEvent{} }
func (m *PlayerActionEvent) String() string            { return proto.CompactTextString(m) }
func (*PlayerActionEvent) ProtoMessage()               {}
func (*PlayerActionEvent) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{45} }

func (m *PlayerActionEvent) GetPlayerActionType() PlayerActionType {
	if m != nil {
		return m.PlayerActionType
	}
	return PlayerActionType_NoneAction
}

func (m *PlayerActionEvent) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PlayerActionEvent) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PlayerActionEvent) GetMatch() *Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *PlayerActionEvent) GetPlayerAction() *PlayerAction {
	if m != nil {
		return m.PlayerAction
	}
	return nil
}

type PlayersInMatchmakingList struct {
	UserIDs []string `protobuf:"bytes,1,rep,name=userIDs" json:"userIDs,omitempty"`
}

func (m *PlayersInMatchmakingList) Reset()                    { *m = PlayersInMatchmakingList{} }
func (m *PlayersInMatchmakingList) String() string            { return proto.CompactTextString(m) }
func (*PlayersInMatchmakingList) ProtoMessage()               {}
func (*PlayersInMatchmakingList) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{46} }

func (m *PlayersInMatchmakingList) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

type PendingMatchList struct {
	Matches []*Match `protobuf:"bytes,1,rep,name=matches" json:"matches,omitempty"`
}

func (m *PendingMatchList) Reset()                    { *m = PendingMatchList{} }
func (m *PendingMatchList) String() string            { return proto.CompactTextString(m) }
func (*PendingMatchList) ProtoMessage()               {}
func (*PendingMatchList) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{47} }

func (m *PendingMatchList) GetMatches() []*Match {
	if m != nil {
		return m.Matches
	}
	return nil
}

type MatchList struct {
	Matches []*Match `protobuf:"bytes,1,rep,name=matches" json:"matches,omitempty"`
}

func (m *MatchList) Reset()                    { *m = MatchList{} }
func (m *MatchList) String() string            { return proto.CompactTextString(m) }
func (*MatchList) ProtoMessage()               {}
func (*MatchList) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{48} }

func (m *MatchList) GetMatches() []*Match {
	if m != nil {
		return m.Matches
	}
	return nil
}

type MatchCount struct {
	CurrentId int64 `protobuf:"varint,1,opt,name=currentId,proto3" json:"currentId,omitempty"`
}

func (m *MatchCount) Reset()                    { *m = MatchCount{} }
func (m *MatchCount) String() string            { return proto.CompactTextString(m) }
func (*MatchCount) ProtoMessage()               {}
func (*MatchCount) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{49} }

func (m *MatchCount) GetCurrentId() int64 {
	if m != nil {
		return m.CurrentId
	}
	return 0
}

type FindMatchRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (m *FindMatchRequest) Reset()                    { *m = FindMatchRequest{} }
func (m *FindMatchRequest) String() string            { return proto.CompactTextString(m) }
func (*FindMatchRequest) ProtoMessage()               {}
func (*FindMatchRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{50} }

func (m *FindMatchRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type FindMatchResponse struct {
	Match *Match `protobuf:"bytes,1,opt,name=match" json:"match,omitempty"`
}

func (m *FindMatchResponse) Reset()                    { *m = FindMatchResponse{} }
func (m *FindMatchResponse) String() string            { return proto.CompactTextString(m) }
func (*FindMatchResponse) ProtoMessage()               {}
func (*FindMatchResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{51} }

func (m *FindMatchResponse) GetMatch() *Match {
	if m != nil {
		return m.Match
	}
	return nil
}

type AcceptMatchRequest struct {
	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MatchId int64  `protobuf:"varint,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
}

func (m *AcceptMatchRequest) Reset()                    { *m = AcceptMatchRequest{} }
func (m *AcceptMatchRequest) String() string            { return proto.CompactTextString(m) }
func (*AcceptMatchRequest) ProtoMessage()               {}
func (*AcceptMatchRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{52} }

func (m *AcceptMatchRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AcceptMatchRequest) GetMatchId() int64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

type AcceptMatchResponse struct {
}

func (m *AcceptMatchResponse) Reset()                    { *m = AcceptMatchResponse{} }
func (m *AcceptMatchResponse) String() string            { return proto.CompactTextString(m) }
func (*AcceptMatchResponse) ProtoMessage()               {}
func (*AcceptMatchResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{53} }

type RejectMatchRequest struct {
	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MatchId int64  `protobuf:"varint,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
}

func (m *RejectMatchRequest) Reset()                    { *m = RejectMatchRequest{} }
func (m *RejectMatchRequest) String() string            { return proto.CompactTextString(m) }
func (*RejectMatchRequest) ProtoMessage()               {}
func (*RejectMatchRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{54} }

func (m *RejectMatchRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *RejectMatchRequest) GetMatchId() int64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

type RejectMatchResponse struct {
}

func (m *RejectMatchResponse) Reset()                    { *m = RejectMatchResponse{} }
func (m *RejectMatchResponse) String() string            { return proto.CompactTextString(m) }
func (*RejectMatchResponse) ProtoMessage()               {}
func (*RejectMatchResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{55} }

type StartMatchRequest struct {
	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MatchId int64  `protobuf:"varint,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
}

func (m *StartMatchRequest) Reset()                    { *m = StartMatchRequest{} }
func (m *StartMatchRequest) String() string            { return proto.CompactTextString(m) }
func (*StartMatchRequest) ProtoMessage()               {}
func (*StartMatchRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{56} }

func (m *StartMatchRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *StartMatchRequest) GetMatchId() int64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

type StartMatchResponse struct {
}

func (m *StartMatchResponse) Reset()                    { *m = StartMatchResponse{} }
func (m *StartMatchResponse) String() string            { return proto.CompactTextString(m) }
func (*StartMatchResponse) ProtoMessage()               {}
func (*StartMatchResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{57} }

type LeaveMatchRequest struct {
	UserId  string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MatchId int64  `protobuf:"varint,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
}

func (m *LeaveMatchRequest) Reset()                    { *m = LeaveMatchRequest{} }
func (m *LeaveMatchRequest) String() string            { return proto.CompactTextString(m) }
func (*LeaveMatchRequest) ProtoMessage()               {}
func (*LeaveMatchRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{58} }

func (m *LeaveMatchRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LeaveMatchRequest) GetMatchId() int64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

type LeaveMatchResponse struct {
}

func (m *LeaveMatchResponse) Reset()                    { *m = LeaveMatchResponse{} }
func (m *LeaveMatchResponse) String() string            { return proto.CompactTextString(m) }
func (*LeaveMatchResponse) ProtoMessage()               {}
func (*LeaveMatchResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{59} }

type GetMatchRequest struct {
	MatchId int64 `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"`
}

func (m *GetMatchRequest) Reset()                    { *m = GetMatchRequest{} }
func (m *GetMatchRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMatchRequest) ProtoMessage()               {}
func (*GetMatchRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{60} }

func (m *GetMatchRequest) GetMatchId() int64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

type GetMatchResponse struct {
	Match     *Match     `protobuf:"bytes,1,opt,name=match" json:"match,omitempty"`
	GameState *GameState `protobuf:"bytes,2,opt,name=gameState" json:"gameState,omitempty"`
}

func (m *GetMatchResponse) Reset()                    { *m = GetMatchResponse{} }
func (m *GetMatchResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMatchResponse) ProtoMessage()               {}
func (*GetMatchResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{61} }

func (m *GetMatchResponse) GetMatch() *Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *GetMatchResponse) GetGameState() *GameState {
	if m != nil {
		return m.GameState
	}
	return nil
}

type PlayerActionRequest struct {
	MatchId      int64         `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"`
	PlayerAction *PlayerAction `protobuf:"bytes,2,opt,name=playerAction" json:"playerAction,omitempty"`
}

func (m *PlayerActionRequest) Reset()                    { *m = PlayerActionRequest{} }
func (m *PlayerActionRequest) String() string            { return proto.CompactTextString(m) }
func (*PlayerActionRequest) ProtoMessage()               {}
func (*PlayerActionRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{62} }

func (m *PlayerActionRequest) GetMatchId() int64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

func (m *PlayerActionRequest) GetPlayerAction() *PlayerAction {
	if m != nil {
		return m.PlayerAction
	}
	return nil
}

type PlayerActionResponse struct {
}

func (m *PlayerActionResponse) Reset()                    { *m = PlayerActionResponse{} }
func (m *PlayerActionResponse) String() string            { return proto.CompactTextString(m) }
func (*PlayerActionResponse) ProtoMessage()               {}
func (*PlayerActionResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{63} }

type GlobalState struct {
	CurrentGameId int64 `protobuf:"varint,1,opt,name=current_game_id,json=currentGameId,proto3" json:"current_game_id,omitempty"`
}

func (m *GlobalState) Reset()                    { *m = GlobalState{} }
func (m *GlobalState) String() string            { return proto.CompactTextString(m) }
func (*GlobalState) ProtoMessage()               {}
func (*GlobalState) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{64} }

func (m *GlobalState) GetCurrentGameId() int64 {
	if m != nil {
		return m.CurrentGameId
	}
	return 0
}

type GameState struct {
	Id                 int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsEnded            bool            `protobuf:"varint,2,opt,name=isEnded,proto3" json:"isEnded,omitempty"`
	CurrentPlayerIndex int32           `protobuf:"varint,3,opt,name=currentPlayerIndex,proto3" json:"currentPlayerIndex,omitempty"`
	PlayerStates       []*PlayerState  `protobuf:"bytes,4,rep,name=playerStates" json:"playerStates,omitempty"`
	CurrentActionIndex int64           `protobuf:"varint,5,opt,name=currentActionIndex,proto3" json:"currentActionIndex,omitempty"`
	PlayerActions      []*PlayerAction `protobuf:"bytes,6,rep,name=playerActions" json:"playerActions,omitempty"`
}

func (m *GameState) Reset()                    { *m = GameState{} }
func (m *GameState) String() string            { return proto.CompactTextString(m) }
func (*GameState) ProtoMessage()               {}
func (*GameState) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{65} }

func (m *GameState) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GameState) GetIsEnded() bool {
	if m != nil {
		return m.IsEnded
	}
	return false
}

func (m *GameState) GetCurrentPlayerIndex() int32 {
	if m != nil {
		return m.CurrentPlayerIndex
	}
	return 0
}

func (m *GameState) GetPlayerStates() []*PlayerState {
	if m != nil {
		return m.PlayerStates
	}
	return nil
}

func (m *GameState) GetCurrentActionIndex() int64 {
	if m != nil {
		return m.CurrentActionIndex
	}
	return 0
}

func (m *GameState) GetPlayerActions() []*PlayerAction {
	if m != nil {
		return m.PlayerActions
	}
	return nil
}

type AbilityInstance struct {
}

func (m *AbilityInstance) Reset()                    { *m = AbilityInstance{} }
func (m *AbilityInstance) String() string            { return proto.CompactTextString(m) }
func (*AbilityInstance) ProtoMessage()               {}
func (*AbilityInstance) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{66} }

type CardAbility struct {
	AbilityType                 CardAbilityType         `protobuf:"varint,1,opt,name=abilityType,proto3,enum=CardAbilityType" json:"abilityType,omitempty"`
	AbilityActivityType         CardAbilityActivityType `protobuf:"varint,2,opt,name=abilityActivityType,proto3,enum=CardAbilityActivityType" json:"abilityActivityType,omitempty"`
	CardAbilityTrigger          CardAbilityTrigger      `protobuf:"varint,3,opt,name=cardAbilityTrigger,proto3,enum=CardAbilityTrigger" json:"cardAbilityTrigger,omitempty"`
	AllowedTargets              []AllowedTarget         `protobuf:"varint,4,rep,packed,name=allowedTargets,enum=AllowedTarget" json:"allowedTargets,omitempty"`
	AbilityStatType             StatType                `protobuf:"varint,5,opt,name=abilityStatType,proto3,enum=StatType" json:"abilityStatType,omitempty"`
	AbilitySetType              ElementKind             `protobuf:"varint,6,opt,name=abilitySetType,proto3,enum=ElementKind" json:"abilitySetType,omitempty"`
	CardAbilityEffect           CardAbilityEffect       `protobuf:"varint,7,opt,name=cardAbilityEffect,proto3,enum=CardAbilityEffect" json:"cardAbilityEffect,omitempty"`
	AttackRestriction           AttackRestriction       `protobuf:"varint,8,opt,name=attackRestriction,proto3,enum=AttackRestriction" json:"attackRestriction,omitempty"`
	TargetCardType              CardType                `protobuf:"varint,9,opt,name=targetCardType,proto3,enum=CardType" json:"targetCardType,omitempty"`
	TargetUnitSpecialStatusType UnitSpecialStatus       `protobuf:"varint,10,opt,name=targetUnitSpecialStatusType,proto3,enum=UnitSpecialStatus" json:"targetUnitSpecialStatusType,omitempty"`
	TargetUnitType              CardType                `protobuf:"varint,11,opt,name=targetUnitType,proto3,enum=CardType" json:"targetUnitType,omitempty"`
	Value                       int32                   `protobuf:"varint,12,opt,name=value,proto3" json:"value,omitempty"`
	Damage                      int32                   `protobuf:"varint,13,opt,name=damage,proto3" json:"damage,omitempty"`
	Health                      int32                   `protobuf:"varint,14,opt,name=health,proto3" json:"health,omitempty"`
	AttackInfo                  string                  `protobuf:"bytes,15,opt,name=attackInfo,proto3" json:"attackInfo,omitempty"`
	Name                        string                  `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	Turns                       int32                   `protobuf:"varint,17,opt,name=turns,proto3" json:"turns,omitempty"`
	Count                       int32                   `protobuf:"varint,18,opt,name=count,proto3" json:"count,omitempty"`
	Delay                       int32                   `protobuf:"varint,19,opt,name=delay,proto3" json:"delay,omitempty"`
}

func (m *CardAbility) Reset()                    { *m = CardAbility{} }
func (m *CardAbility) String() string            { return proto.CompactTextString(m) }
func (*CardAbility) ProtoMessage()               {}
func (*CardAbility) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{67} }

func (m *CardAbility) GetAbilityType() CardAbilityType {
	if m != nil {
		return m.AbilityType
	}
	return CardAbilityType_HealCardAbilityType
}

func (m *CardAbility) GetAbilityActivityType() CardAbilityActivityType {
	if m != nil {
		return m.AbilityActivityType
	}
	return CardAbilityActivityType_Passive
}

func (m *CardAbility) GetCardAbilityTrigger() CardAbilityTrigger {
	if m != nil {
		return m.CardAbilityTrigger
	}
	return CardAbilityTrigger_Turn
}

func (m *CardAbility) GetAllowedTargets() []AllowedTarget {
	if m != nil {
		return m.AllowedTargets
	}
	return nil
}

func (m *CardAbility) GetAbilityStatType() StatType {
	if m != nil {
		return m.AbilityStatType
	}
	return StatType_NoneStatType
}

func (m *CardAbility) GetAbilitySetType() ElementKind {
	if m != nil {
		return m.AbilitySetType
	}
	return ElementKind_Fire
}

func (m *CardAbility) GetCardAbilityEffect() CardAbilityEffect {
	if m != nil {
		return m.CardAbilityEffect
	}
	return CardAbilityEffect_NoneCardAbilityEffect
}

func (m *CardAbility) GetAttackRestriction() AttackRestriction {
	if m != nil {
		return m.AttackRestriction
	}
	return AttackRestriction_NoneAttackRestriction
}

func (m *CardAbility) GetTargetCardType() CardType {
	if m != nil {
		return m.TargetCardType
	}
	return CardType_Creature
}

func (m *CardAbility) GetTargetUnitSpecialStatusType() UnitSpecialStatus {
	if m != nil {
		return m.TargetUnitSpecialStatusType
	}
	return UnitSpecialStatus_NoneUnitSpecialStatus
}

func (m *CardAbility) GetTargetUnitType() CardType {
	if m != nil {
		return m.TargetUnitType
	}
	return CardType_Creature
}

func (m *CardAbility) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *CardAbility) GetDamage() int32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

func (m *CardAbility) GetHealth() int32 {
	if m != nil {
		return m.Health
	}
	return 0
}

func (m *CardAbility) GetAttackInfo() string {
	if m != nil {
		return m.AttackInfo
	}
	return ""
}

func (m *CardAbility) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CardAbility) GetTurns() int32 {
	if m != nil {
		return m.Turns
	}
	return 0
}

func (m *CardAbility) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CardAbility) GetDelay() int32 {
	if m != nil {
		return m.Delay
	}
	return 0
}

type CardInstance struct {
	InstanceId int32          `protobuf:"varint,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Prototype  *CardPrototype `protobuf:"bytes,2,opt,name=prototype" json:"prototype,omitempty"`
	Defence    int32          `protobuf:"varint,3,opt,name=defence,proto3" json:"defence,omitempty"`
	Attack     int32          `protobuf:"varint,4,opt,name=attack,proto3" json:"attack,omitempty"`
}

func (m *CardInstance) Reset()                    { *m = CardInstance{} }
func (m *CardInstance) String() string            { return proto.CompactTextString(m) }
func (*CardInstance) ProtoMessage()               {}
func (*CardInstance) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{68} }

func (m *CardInstance) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *CardInstance) GetPrototype() *CardPrototype {
	if m != nil {
		return m.Prototype
	}
	return nil
}

func (m *CardInstance) GetDefence() int32 {
	if m != nil {
		return m.Defence
	}
	return 0
}

func (m *CardInstance) GetAttack() int32 {
	if m != nil {
		return m.Attack
	}
	return 0
}

type CardPrototype struct {
	DataId         int32          `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`
	CardSetType    ElementKind    `protobuf:"varint,2,opt,name=cardSetType,proto3,enum=ElementKind" json:"cardSetType,omitempty"`
	Name           string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	GooCost        int32          `protobuf:"varint,4,opt,name=gooCost,proto3" json:"gooCost,omitempty"`
	Description    string         `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	FlavorText     string         `protobuf:"bytes,6,opt,name=flavorText,proto3" json:"flavorText,omitempty"`
	Picture        string         `protobuf:"bytes,7,opt,name=picture,proto3" json:"picture,omitempty"`
	Frame          string         `protobuf:"bytes,8,opt,name=frame,proto3" json:"frame,omitempty"`
	InitialDamage  int32          `protobuf:"varint,9,opt,name=initialDamage,proto3" json:"initialDamage,omitempty"`
	InitialDefence int32          `protobuf:"varint,10,opt,name=initialDefence,proto3" json:"initialDefence,omitempty"`
	Rank           string         `protobuf:"bytes,11,opt,name=rank,proto3" json:"rank,omitempty"`
	Type           string         `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	Abilities      []*CardAbility `protobuf:"bytes,13,rep,name=abilities" json:"abilities,omitempty"`
	CardViewInfo   *CardViewInfo  `protobuf:"bytes,14,opt,name=cardViewInfo" json:"cardViewInfo,omitempty"`
	CreatureRank   CreatureRank   `protobuf:"varint,15,opt,name=creatureRank,proto3,enum=CreatureRank" json:"creatureRank,omitempty"`
	CreatureType   CreatureType   `protobuf:"varint,16,opt,name=creatureType,proto3,enum=CreatureType" json:"creatureType,omitempty"`
	CardType       CardType       `protobuf:"varint,17,opt,name=cardType,proto3,enum=CardType" json:"cardType,omitempty"`
}

func (m *CardPrototype) Reset()                    { *m = CardPrototype{} }
func (m *CardPrototype) String() string            { return proto.CompactTextString(m) }
func (*CardPrototype) ProtoMessage()               {}
func (*CardPrototype) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{69} }

func (m *CardPrototype) GetDataId() int32 {
	if m != nil {
		return m.DataId
	}
	return 0
}

func (m *CardPrototype) GetCardSetType() ElementKind {
	if m != nil {
		return m.CardSetType
	}
	return ElementKind_Fire
}

func (m *CardPrototype) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CardPrototype) GetGooCost() int32 {
	if m != nil {
		return m.GooCost
	}
	return 0
}

func (m *CardPrototype) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CardPrototype) GetFlavorText() string {
	if m != nil {
		return m.FlavorText
	}
	return ""
}

func (m *CardPrototype) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *CardPrototype) GetFrame() string {
	if m != nil {
		return m.Frame
	}
	return ""
}

func (m *CardPrototype) GetInitialDamage() int32 {
	if m != nil {
		return m.InitialDamage
	}
	return 0
}

func (m *CardPrototype) GetInitialDefence() int32 {
	if m != nil {
		return m.InitialDefence
	}
	return 0
}

func (m *CardPrototype) GetRank() string {
	if m != nil {
		return m.Rank
	}
	return ""
}

func (m *CardPrototype) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CardPrototype) GetAbilities() []*CardAbility {
	if m != nil {
		return m.Abilities
	}
	return nil
}

func (m *CardPrototype) GetCardViewInfo() *CardViewInfo {
	if m != nil {
		return m.CardViewInfo
	}
	return nil
}

func (m *CardPrototype) GetCreatureRank() CreatureRank {
	if m != nil {
		return m.CreatureRank
	}
	return CreatureRank_Minion
}

func (m *CardPrototype) GetCreatureType() CreatureType {
	if m != nil {
		return m.CreatureType
	}
	return CreatureType_Normal
}

func (m *CardPrototype) GetCardType() CardType {
	if m != nil {
		return m.CardType
	}
	return CardType_Creature
}

type DataIdOwner struct {
	DataId int32 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`
}

func (m *DataIdOwner) Reset()                    { *m = DataIdOwner{} }
func (m *DataIdOwner) String() string            { return proto.CompactTextString(m) }
func (*DataIdOwner) ProtoMessage()               {}
func (*DataIdOwner) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{70} }

func (m *DataIdOwner) GetDataId() int32 {
	if m != nil {
		return m.DataId
	}
	return 0
}

// (interface IDeck)
type CardDeck struct {
	Cards []*CardPrototype `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
}

func (m *CardDeck) Reset()                    { *m = CardDeck{} }
func (m *CardDeck) String() string            { return proto.CompactTextString(m) }
func (*CardDeck) ProtoMessage()               {}
func (*CardDeck) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{71} }

func (m *CardDeck) GetCards() []*CardPrototype {
	if m != nil {
		return m.Cards
	}
	return nil
}

type InstanceIdOwner struct {
	InstanceId int32 `protobuf:"varint,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
}

func (m *InstanceIdOwner) Reset()                    { *m = InstanceIdOwner{} }
func (m *InstanceIdOwner) String() string            { return proto.CompactTextString(m) }
func (*InstanceIdOwner) ProtoMessage()               {}
func (*InstanceIdOwner) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{72} }

func (m *InstanceIdOwner) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

type OverlordInstance struct {
	InstanceId  int32                  `protobuf:"varint,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Prototype   *OverlordPrototype     `protobuf:"bytes,2,opt,name=prototype" json:"prototype,omitempty"`
	FirstSkill  *OverlordSkillInstance `protobuf:"bytes,3,opt,name=firstSkill" json:"firstSkill,omitempty"`
	SecondSkill *OverlordSkillInstance `protobuf:"bytes,4,opt,name=secondSkill" json:"secondSkill,omitempty"`
	Defence     int32                  `protobuf:"varint,5,opt,name=defence,proto3" json:"defence,omitempty"`
	Goo         int32                  `protobuf:"varint,6,opt,name=goo,proto3" json:"goo,omitempty"`
	MaxGoo      int32                  `protobuf:"varint,7,opt,name=maxGoo,proto3" json:"maxGoo,omitempty"`
}

func (m *OverlordInstance) Reset()                    { *m = OverlordInstance{} }
func (m *OverlordInstance) String() string            { return proto.CompactTextString(m) }
func (*OverlordInstance) ProtoMessage()               {}
func (*OverlordInstance) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{73} }

func (m *OverlordInstance) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *OverlordInstance) GetPrototype() *OverlordPrototype {
	if m != nil {
		return m.Prototype
	}
	return nil
}

func (m *OverlordInstance) GetFirstSkill() *OverlordSkillInstance {
	if m != nil {
		return m.FirstSkill
	}
	return nil
}

func (m *OverlordInstance) GetSecondSkill() *OverlordSkillInstance {
	if m != nil {
		return m.SecondSkill
	}
	return nil
}

func (m *OverlordInstance) GetDefence() int32 {
	if m != nil {
		return m.Defence
	}
	return 0
}

func (m *OverlordInstance) GetGoo() int32 {
	if m != nil {
		return m.Goo
	}
	return 0
}

func (m *OverlordInstance) GetMaxGoo() int32 {
	if m != nil {
		return m.MaxGoo
	}
	return 0
}

type OverlordPrototype struct {
	HeroId           int32                     `protobuf:"varint,1,opt,name=heroId,proto3" json:"heroId,omitempty"`
	Icon             string                    `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Name             string                    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ShortDescription string                    `protobuf:"bytes,4,opt,name=shortDescription,proto3" json:"shortDescription,omitempty"`
	LongDescription  string                    `protobuf:"bytes,5,opt,name=longDescription,proto3" json:"longDescription,omitempty"`
	Experience       int32                     `protobuf:"varint,6,opt,name=experience,proto3" json:"experience,omitempty"`
	Level            int32                     `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
	Element          ElementKind               `protobuf:"varint,8,opt,name=element,proto3,enum=ElementKind" json:"element,omitempty"`
	Skills           []*OverlordSkillPrototype `protobuf:"bytes,9,rep,name=skills" json:"skills,omitempty"`
}

func (m *OverlordPrototype) Reset()                    { *m = OverlordPrototype{} }
func (m *OverlordPrototype) String() string            { return proto.CompactTextString(m) }
func (*OverlordPrototype) ProtoMessage()               {}
func (*OverlordPrototype) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{74} }

func (m *OverlordPrototype) GetHeroId() int32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *OverlordPrototype) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *OverlordPrototype) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OverlordPrototype) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *OverlordPrototype) GetLongDescription() string {
	if m != nil {
		return m.LongDescription
	}
	return ""
}

func (m *OverlordPrototype) GetExperience() int32 {
	if m != nil {
		return m.Experience
	}
	return 0
}

func (m *OverlordPrototype) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *OverlordPrototype) GetElement() ElementKind {
	if m != nil {
		return m.Element
	}
	return ElementKind_Fire
}

func (m *OverlordPrototype) GetSkills() []*OverlordSkillPrototype {
	if m != nil {
		return m.Skills
	}
	return nil
}

type OverlordSkillInstance struct {
	Prototype *OverlordSkillPrototype `protobuf:"bytes,1,opt,name=prototype" json:"prototype,omitempty"`
	Cooldown  int32                   `protobuf:"varint,2,opt,name=cooldown,proto3" json:"cooldown,omitempty"`
}

func (m *OverlordSkillInstance) Reset()                    { *m = OverlordSkillInstance{} }
func (m *OverlordSkillInstance) String() string            { return proto.CompactTextString(m) }
func (*OverlordSkillInstance) ProtoMessage()               {}
func (*OverlordSkillInstance) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{75} }

func (m *OverlordSkillInstance) GetPrototype() *OverlordSkillPrototype {
	if m != nil {
		return m.Prototype
	}
	return nil
}

func (m *OverlordSkillInstance) GetCooldown() int32 {
	if m != nil {
		return m.Cooldown
	}
	return 0
}

type OverlordSkillPrototype struct {
	Title              string            `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Skill              string            `protobuf:"bytes,2,opt,name=skill,proto3" json:"skill,omitempty"`
	IconPath           string            `protobuf:"bytes,3,opt,name=iconPath,proto3" json:"iconPath,omitempty"`
	Description        string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Cooldown           int32             `protobuf:"varint,5,opt,name=cooldown,proto3" json:"cooldown,omitempty"`
	InitialCooldown    int32             `protobuf:"varint,6,opt,name=initialCooldown,proto3" json:"initialCooldown,omitempty"`
	Parameter          int32             `protobuf:"varint,7,opt,name=parameter,proto3" json:"parameter,omitempty"`
	Attack             int32             `protobuf:"varint,8,opt,name=attack,proto3" json:"attack,omitempty"`
	OverlordSkillKind  OverlordSkillKind `protobuf:"varint,9,opt,name=overlordSkillKind,proto3,enum=OverlordSkillKind" json:"overlordSkillKind,omitempty"`
	SkillTargetTypes   []AllowedTarget   `protobuf:"varint,10,rep,packed,name=skillTargetTypes,enum=AllowedTarget" json:"skillTargetTypes,omitempty"`
	ElementTargetTypes []ElementKind     `protobuf:"varint,11,rep,packed,name=elementTargetTypes,enum=ElementKind" json:"elementTargetTypes,omitempty"`
}

func (m *OverlordSkillPrototype) Reset()                    { *m = OverlordSkillPrototype{} }
func (m *OverlordSkillPrototype) String() string            { return proto.CompactTextString(m) }
func (*OverlordSkillPrototype) ProtoMessage()               {}
func (*OverlordSkillPrototype) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{76} }

func (m *OverlordSkillPrototype) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *OverlordSkillPrototype) GetSkill() string {
	if m != nil {
		return m.Skill
	}
	return ""
}

func (m *OverlordSkillPrototype) GetIconPath() string {
	if m != nil {
		return m.IconPath
	}
	return ""
}

func (m *OverlordSkillPrototype) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *OverlordSkillPrototype) GetCooldown() int32 {
	if m != nil {
		return m.Cooldown
	}
	return 0
}

func (m *OverlordSkillPrototype) GetInitialCooldown() int32 {
	if m != nil {
		return m.InitialCooldown
	}
	return 0
}

func (m *OverlordSkillPrototype) GetParameter() int32 {
	if m != nil {
		return m.Parameter
	}
	return 0
}

func (m *OverlordSkillPrototype) GetAttack() int32 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *OverlordSkillPrototype) GetOverlordSkillKind() OverlordSkillKind {
	if m != nil {
		return m.OverlordSkillKind
	}
	return OverlordSkillKind_NoneOverlordSkillKind
}

func (m *OverlordSkillPrototype) GetSkillTargetTypes() []AllowedTarget {
	if m != nil {
		return m.SkillTargetTypes
	}
	return nil
}

func (m *OverlordSkillPrototype) GetElementTargetTypes() []ElementKind {
	if m != nil {
		return m.ElementTargetTypes
	}
	return nil
}

type PlayerActionCardAttack struct {
	PlayerId string        `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Attacker *CardInstance `protobuf:"bytes,2,opt,name=attacker" json:"attacker,omitempty"`
	Target   *CardInstance `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
}

func (m *PlayerActionCardAttack) Reset()                    { *m = PlayerActionCardAttack{} }
func (m *PlayerActionCardAttack) String() string            { return proto.CompactTextString(m) }
func (*PlayerActionCardAttack) ProtoMessage()               {}
func (*PlayerActionCardAttack) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{77} }

func (m *PlayerActionCardAttack) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerActionCardAttack) GetAttacker() *CardInstance {
	if m != nil {
		return m.Attacker
	}
	return nil
}

func (m *PlayerActionCardAttack) GetTarget() *CardInstance {
	if m != nil {
		return m.Target
	}
	return nil
}

type PlayerActionDrawCard struct {
	PlayerId     string        `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	CardInstance *CardInstance `protobuf:"bytes,2,opt,name=cardInstance" json:"cardInstance,omitempty"`
}

func (m *PlayerActionDrawCard) Reset()                    { *m = PlayerActionDrawCard{} }
func (m *PlayerActionDrawCard) String() string            { return proto.CompactTextString(m) }
func (*PlayerActionDrawCard) ProtoMessage()               {}
func (*PlayerActionDrawCard) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{78} }

func (m *PlayerActionDrawCard) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerActionDrawCard) GetCardInstance() *CardInstance {
	if m != nil {
		return m.CardInstance
	}
	return nil
}

type PlayerActionEndTurn struct {
	PlayerId string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *PlayerActionEndTurn) Reset()                    { *m = PlayerActionEndTurn{} }
func (m *PlayerActionEndTurn) String() string            { return proto.CompactTextString(m) }
func (*PlayerActionEndTurn) ProtoMessage()               {}
func (*PlayerActionEndTurn) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{79} }

func (m *PlayerActionEndTurn) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

type PlayerActionMulligan struct {
	PlayerId        string          `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	MulliganedCards []*CardInstance `protobuf:"bytes,2,rep,name=mulliganedCards" json:"mulliganedCards,omitempty"`
}

func (m *PlayerActionMulligan) Reset()                    { *m = PlayerActionMulligan{} }
func (m *PlayerActionMulligan) String() string            { return proto.CompactTextString(m) }
func (*PlayerActionMulligan) ProtoMessage()               {}
func (*PlayerActionMulligan) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{80} }

func (m *PlayerActionMulligan) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerActionMulligan) GetMulliganedCards() []*CardInstance {
	if m != nil {
		return m.MulliganedCards
	}
	return nil
}

type PlayerActionOutcome struct {
	PlayerId  string     `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	GameState *GameState `protobuf:"bytes,2,opt,name=gameState" json:"gameState,omitempty"`
}

func (m *PlayerActionOutcome) Reset()                    { *m = PlayerActionOutcome{} }
func (m *PlayerActionOutcome) String() string            { return proto.CompactTextString(m) }
func (*PlayerActionOutcome) ProtoMessage()               {}
func (*PlayerActionOutcome) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{81} }

func (m *PlayerActionOutcome) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerActionOutcome) GetGameState() *GameState {
	if m != nil {
		return m.GameState
	}
	return nil
}

type PlayerActionUseCardAbility struct {
	PlayerId string        `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Card     *CardInstance `protobuf:"bytes,2,opt,name=card" json:"card,omitempty"`
	Target   *Unit         `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
}

func (m *PlayerActionUseCardAbility) Reset()                    { *m = PlayerActionUseCardAbility{} }
func (m *PlayerActionUseCardAbility) String() string            { return proto.CompactTextString(m) }
func (*PlayerActionUseCardAbility) ProtoMessage()               {}
func (*PlayerActionUseCardAbility) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{82} }

func (m *PlayerActionUseCardAbility) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerActionUseCardAbility) GetCard() *CardInstance {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *PlayerActionUseCardAbility) GetTarget() *Unit {
	if m != nil {
		return m.Target
	}
	return nil
}

type PlayerActionUseOverlordSkill struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (m *PlayerActionUseOverlordSkill) Reset()                    { *m = PlayerActionUseOverlordSkill{} }
func (m *PlayerActionUseOverlordSkill) String() string            { return proto.CompactTextString(m) }
func (*PlayerActionUseOverlordSkill) ProtoMessage()               {}
func (*PlayerActionUseOverlordSkill) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{83} }

func (m *PlayerActionUseOverlordSkill) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type StartGameAction struct {
	PlayerStates []*PlayerState `protobuf:"bytes,1,rep,name=playerStates" json:"playerStates,omitempty"`
}

func (m *StartGameAction) Reset()                    { *m = StartGameAction{} }
func (m *StartGameAction) String() string            { return proto.CompactTextString(m) }
func (*StartGameAction) ProtoMessage()               {}
func (*StartGameAction) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{84} }

func (m *StartGameAction) GetPlayerStates() []*PlayerState {
	if m != nil {
		return m.PlayerStates
	}
	return nil
}

type Unit struct {
	InstanceId int32 `protobuf:"varint,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
}

func (m *Unit) Reset()                    { *m = Unit{} }
func (m *Unit) String() string            { return proto.CompactTextString(m) }
func (*Unit) ProtoMessage()               {}
func (*Unit) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{85} }

func (m *Unit) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func init() {
	proto.RegisterType((*Account)(nil), "Account")
	proto.RegisterType((*Deck)(nil), "Deck")
	proto.RegisterType((*Card)(nil), "Card")
	proto.RegisterType((*CardViewInfo)(nil), "CardViewInfo")
	proto.RegisterType((*Coordinates)(nil), "Coordinates")
	proto.RegisterType((*Effect)(nil), "Effect")
	proto.RegisterType((*Ability)(nil), "Ability")
	proto.RegisterType((*CardList)(nil), "CardList")
	proto.RegisterType((*CardCollection)(nil), "CardCollection")
	proto.RegisterType((*CardSet)(nil), "CardSet")
	proto.RegisterType((*CardLibrary)(nil), "CardLibrary")
	proto.RegisterType((*Hero)(nil), "Hero")
	proto.RegisterType((*ListHeroesRequest)(nil), "ListHeroesRequest")
	proto.RegisterType((*ListHeroesResponse)(nil), "ListHeroesResponse")
	proto.RegisterType((*AddHeroExperienceRequest)(nil), "AddHeroExperienceRequest")
	proto.RegisterType((*AddHeroExperienceResponse)(nil), "AddHeroExperienceResponse")
	proto.RegisterType((*GetHeroRequest)(nil), "GetHeroRequest")
	proto.RegisterType((*GetHeroResponse)(nil), "GetHeroResponse")
	proto.RegisterType((*GetHeroSkillsRequest)(nil), "GetHeroSkillsRequest")
	proto.RegisterType((*GetHeroSkillsResponse)(nil), "GetHeroSkillsResponse")
	proto.RegisterType((*Skill)(nil), "Skill")
	proto.RegisterType((*HeroList)(nil), "HeroList")
	proto.RegisterType((*CardCollectionList)(nil), "CardCollectionList")
	proto.RegisterType((*DeckList)(nil), "DeckList")
	proto.RegisterType((*InitRequest)(nil), "InitRequest")
	proto.RegisterType((*UpsertAccountRequest)(nil), "UpsertAccountRequest")
	proto.RegisterType((*GetAccountRequest)(nil), "GetAccountRequest")
	proto.RegisterType((*GetDeckRequest)(nil), "GetDeckRequest")
	proto.RegisterType((*GetDeckResponse)(nil), "GetDeckResponse")
	proto.RegisterType((*CreateDeckRequest)(nil), "CreateDeckRequest")
	proto.RegisterType((*CreateDeckResponse)(nil), "CreateDeckResponse")
	proto.RegisterType((*DeleteDeckRequest)(nil), "DeleteDeckRequest")
	proto.RegisterType((*EditDeckRequest)(nil), "EditDeckRequest")
	proto.RegisterType((*DecksResponse)(nil), "DecksResponse")
	proto.RegisterType((*ListDecksRequest)(nil), "ListDecksRequest")
	proto.RegisterType((*ListDecksResponse)(nil), "ListDecksResponse")
	proto.RegisterType((*ListCardLibraryRequest)(nil), "ListCardLibraryRequest")
	proto.RegisterType((*ListCardLibraryResponse)(nil), "ListCardLibraryResponse")
	proto.RegisterType((*ListHeroLibraryRequest)(nil), "ListHeroLibraryRequest")
	proto.RegisterType((*ListHeroLibraryResponse)(nil), "ListHeroLibraryResponse")
	proto.RegisterType((*GetCollectionRequest)(nil), "GetCollectionRequest")
	proto.RegisterType((*GetCollectionResponse)(nil), "GetCollectionResponse")
	proto.RegisterType((*PlayerState)(nil), "PlayerState")
	proto.RegisterType((*Match)(nil), "Match")
	proto.RegisterType((*PlayerAction)(nil), "PlayerAction")
	proto.RegisterType((*PlayerActionEvent)(nil), "PlayerActionEvent")
	proto.RegisterType((*PlayersInMatchmakingList)(nil), "PlayersInMatchmakingList")
	proto.RegisterType((*PendingMatchList)(nil), "PendingMatchList")
	proto.RegisterType((*MatchList)(nil), "MatchList")
	proto.RegisterType((*MatchCount)(nil), "MatchCount")
	proto.RegisterType((*FindMatchRequest)(nil), "FindMatchRequest")
	proto.RegisterType((*FindMatchResponse)(nil), "FindMatchResponse")
	proto.RegisterType((*AcceptMatchRequest)(nil), "AcceptMatchRequest")
	proto.RegisterType((*AcceptMatchResponse)(nil), "AcceptMatchResponse")
	proto.RegisterType((*RejectMatchRequest)(nil), "RejectMatchRequest")
	proto.RegisterType((*RejectMatchResponse)(nil), "RejectMatchResponse")
	proto.RegisterType((*StartMatchRequest)(nil), "StartMatchRequest")
	proto.RegisterType((*StartMatchResponse)(nil), "StartMatchResponse")
	proto.RegisterType((*LeaveMatchRequest)(nil), "LeaveMatchRequest")
	proto.RegisterType((*LeaveMatchResponse)(nil), "LeaveMatchResponse")
	proto.RegisterType((*GetMatchRequest)(nil), "GetMatchRequest")
	proto.RegisterType((*GetMatchResponse)(nil), "GetMatchResponse")
	proto.RegisterType((*PlayerActionRequest)(nil), "PlayerActionRequest")
	proto.RegisterType((*PlayerActionResponse)(nil), "PlayerActionResponse")
	proto.RegisterType((*GlobalState)(nil), "GlobalState")
	proto.RegisterType((*GameState)(nil), "GameState")
	proto.RegisterType((*AbilityInstance)(nil), "AbilityInstance")
	proto.RegisterType((*CardAbility)(nil), "CardAbility")
	proto.RegisterType((*CardInstance)(nil), "CardInstance")
	proto.RegisterType((*CardPrototype)(nil), "CardPrototype")
	proto.RegisterType((*DataIdOwner)(nil), "DataIdOwner")
	proto.RegisterType((*CardDeck)(nil), "CardDeck")
	proto.RegisterType((*InstanceIdOwner)(nil), "InstanceIdOwner")
	proto.RegisterType((*OverlordInstance)(nil), "OverlordInstance")
	proto.RegisterType((*OverlordPrototype)(nil), "OverlordPrototype")
	proto.RegisterType((*OverlordSkillInstance)(nil), "OverlordSkillInstance")
	proto.RegisterType((*OverlordSkillPrototype)(nil), "OverlordSkillPrototype")
	proto.RegisterType((*PlayerActionCardAttack)(nil), "PlayerActionCardAttack")
	proto.RegisterType((*PlayerActionDrawCard)(nil), "PlayerActionDrawCard")
	proto.RegisterType((*PlayerActionEndTurn)(nil), "PlayerActionEndTurn")
	proto.RegisterType((*PlayerActionMulligan)(nil), "PlayerActionMulligan")
	proto.RegisterType((*PlayerActionOutcome)(nil), "PlayerActionOutcome")
	proto.RegisterType((*PlayerActionUseCardAbility)(nil), "PlayerActionUseCardAbility")
	proto.RegisterType((*PlayerActionUseOverlordSkill)(nil), "PlayerActionUseOverlordSkill")
	proto.RegisterType((*StartGameAction)(nil), "StartGameAction")
	proto.RegisterType((*Unit)(nil), "Unit")
	proto.RegisterEnum("PlayerActionType", PlayerActionType_name, PlayerActionType_value)
	proto.RegisterEnum("AllowedTarget", AllowedTarget_name, AllowedTarget_value)
	proto.RegisterEnum("AttackRestriction", AttackRestriction_name, AttackRestriction_value)
	proto.RegisterEnum("CardAbilityActivityType", CardAbilityActivityType_name, CardAbilityActivityType_value)
	proto.RegisterEnum("CardAbilityEffect", CardAbilityEffect_name, CardAbilityEffect_value)
	proto.RegisterEnum("CardAbilityTrigger", CardAbilityTrigger_name, CardAbilityTrigger_value)
	proto.RegisterEnum("CardAbilityType", CardAbilityType_name, CardAbilityType_value)
	proto.RegisterEnum("CardType", CardType_name, CardType_value)
	proto.RegisterEnum("CreatureRank", CreatureRank_name, CreatureRank_value)
	proto.RegisterEnum("CreatureType", CreatureType_name, CreatureType_value)
	proto.RegisterEnum("ElementKind", ElementKind_name, ElementKind_value)
	proto.RegisterEnum("OverlordSkillKind", OverlordSkillKind_name, OverlordSkillKind_value)
	proto.RegisterEnum("OverlordSkillSelectionType", OverlordSkillSelectionType_name, OverlordSkillSelectionType_value)
	proto.RegisterEnum("StatType", StatType_name, StatType_value)
	proto.RegisterEnum("UnitSpecialStatus", UnitSpecialStatus_name, UnitSpecialStatus_value)
	proto.RegisterEnum("Skill_SkillTargetType", Skill_SkillTargetType_name, Skill_SkillTargetType_value)
	proto.RegisterEnum("Match_Status", Match_Status_name, Match_Status_value)
}

func init() {
	proto.RegisterFile("github.com/loomnetwork/zombie_battleground/types/zb/zb.proto", fileDescriptorZb)
}

var fileDescriptorZb = []byte{
	// 5165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x3b, 0x3d, 0x73, 0x1b, 0xc9,
	0x72, 0xc2, 0x17, 0x01, 0x34, 0x3e, 0x38, 0x18, 0x51, 0x12, 0xf4, 0x71, 0x3a, 0xde, 0xea, 0xa4,
	0xe3, 0xf1, 0xee, 0x28, 0x89, 0xba, 0xf7, 0xee, 0xde, 0xf9, 0xf9, 0xd5, 0x83, 0x48, 0x8a, 0xa2,
	0x1f, 0x45, 0xb2, 0x96, 0xd4, 0xa9, 0xfc, 0xec, 0x2a, 0xd4, 0x12, 0x3b, 0x20, 0xf6, 0xb8, 0xd8,
	0x81, 0x77, 0x17, 0xa4, 0xa8, 0xd0, 0xe5, 0x67, 0x67, 0x2f, 0x74, 0xe0, 0xd4, 0x99, 0x73, 0x57,
	0xb9, 0x1c, 0xf8, 0x07, 0x38, 0x73, 0xe0, 0xc0, 0x81, 0x5d, 0xe5, 0xc4, 0x81, 0x33, 0x97, 0x53,
	0x97, 0xcb, 0xd5, 0x3d, 0xb3, 0x8b, 0x59, 0x00, 0x12, 0x75, 0x77, 0xae, 0x72, 0xe2, 0x6c, 0xa7,
	0xbb, 0xa7, 0xbb, 0xa7, 0xa7, 0x3f, 0x66, 0xa6, 0x01, 0xf8, 0xf9, 0x89, 0x17, 0x0f, 0xc6, 0xc7,
	0x6b, 0x3d, 0x39, 0x7c, 0xe8, 0x4b, 0x39, 0x0c, 0x44, 0x7c, 0x2e, 0xc3, 0xd3, 0x87, 0x6f, 0xe4,
	0xf0, 0xd8, 0x13, 0xdd, 0x63, 0x27, 0x8e, 0x7d, 0x71, 0x12, 0xca, 0x71, 0xe0, 0x3e, 0x8c, 0x2f,
	0x46, 0x22, 0x7a, 0xf8, 0xe6, 0xf8, 0xe1, 0x9b, 0xe3, 0xb5, 0x51, 0x28, 0x63, 0x69, 0xfd, 0x67,
	0x1e, 0xca, 0x9d, 0x5e, 0x4f, 0x8e, 0x83, 0x98, 0xdf, 0x80, 0xf2, 0x38, 0x12, 0x61, 0xd7, 0x73,
	0xdb, 0xb9, 0xe5, 0xdc, 0x4a, 0xd5, 0x5e, 0xc0, 0xe1, 0x8e, 0xcb, 0xd7, 0xe1, 0xda, 0x68, 0x20,
	0x03, 0xd1, 0x0d, 0xc6, 0xc3, 0x63, 0x11, 0x76, 0xcf, 0x44, 0xe8, 0xf5, 0x3d, 0xe1, 0xb6, 0xf3,
	0xcb, 0xb9, 0x95, 0x8a, 0x7d, 0x95, 0x90, 0x7b, 0x84, 0xfb, 0x56, 0xa3, 0xf8, 0x27, 0xb0, 0x18,
	0x8a, 0x73, 0x27, 0x74, 0xbb, 0xa1, 0x70, 0x85, 0x18, 0x0a, 0xb7, 0x5d, 0x20, 0xea, 0xa6, 0x02,
	0xdb, 0x1a, 0xca, 0xef, 0x43, 0xd3, 0x8b, 0xba, 0xa7, 0x5e, 0xef, 0x34, 0x8a, 0x9d, 0x30, 0x16,
	0x61, 0xbb, 0x48, 0x74, 0x0d, 0x2f, 0xfa, 0xd5, 0x04, 0xc8, 0x97, 0xa0, 0xe4, 0x0d, 0x9d, 0x13,
	0xd1, 0x2e, 0x91, 0x6a, 0x6a, 0xc0, 0xbf, 0x00, 0x2e, 0x86, 0x8e, 0xe7, 0x77, 0x03, 0x19, 0x7b,
	0x7d, 0xaf, 0xe7, 0xc4, 0x9e, 0x0c, 0xda, 0x0b, 0xc4, 0xa0, 0x45, 0x98, 0x3d, 0x03, 0xc1, 0x6f,
	0x43, 0x55, 0xf8, 0xb2, 0x1b, 0xf5, 0x64, 0x28, 0xda, 0xe5, 0xe5, 0xdc, 0x4a, 0xc1, 0xae, 0x08,
	0x5f, 0x1e, 0xe2, 0x98, 0x7f, 0x04, 0xf5, 0xde, 0x38, 0x0c, 0x45, 0x10, 0x77, 0x63, 0x4f, 0x84,
	0xed, 0xca, 0x72, 0x6e, 0xa5, 0x64, 0xd7, 0x34, 0xec, 0xc8, 0x13, 0x21, 0x7f, 0x04, 0x4b, 0x27,
	0xce, 0x50, 0x74, 0x87, 0x02, 0xd7, 0x1a, 0x0d, 0xbc, 0x91, 0x22, 0xad, 0x12, 0x29, 0x47, 0xdc,
	0x8b, 0x14, 0x45, 0x33, 0x96, 0xa0, 0x24, 0xcf, 0x03, 0x11, 0xb6, 0x61, 0x39, 0xb7, 0x52, 0xb7,
	0xd5, 0xc0, 0xfa, 0x0e, 0x8a, 0x9b, 0xa2, 0x77, 0xca, 0x9b, 0x90, 0xd7, 0xc6, 0x2e, 0xd8, 0x79,
	0xcf, 0xe5, 0x1c, 0x8a, 0x81, 0x33, 0x14, 0x64, 0xd7, 0xaa, 0x4d, 0xdf, 0xb8, 0x2b, 0x03, 0x11,
	0x4a, 0xdc, 0x95, 0x02, 0x11, 0x2e, 0xe0, 0x70, 0x07, 0x0d, 0x57, 0xea, 0x39, 0xa1, 0x1b, 0xb5,
	0x8b, 0xcb, 0x85, 0x95, 0xda, 0xfa, 0xe2, 0xda, 0x86, 0x13, 0xba, 0x1b, 0xd2, 0xf7, 0x45, 0x0f,
	0x17, 0x6b, 0x2b, 0xac, 0xf5, 0xaf, 0x05, 0x28, 0x22, 0x66, 0x9e, 0xb0, 0x53, 0x2f, 0x70, 0x13,
	0x61, 0xf8, 0xcd, 0x19, 0x14, 0x22, 0x11, 0x93, 0xa0, 0xaa, 0x8d, 0x9f, 0xa9, 0x4a, 0x45, 0x43,
	0xa5, 0x65, 0xa8, 0xb9, 0x22, 0xea, 0x85, 0xde, 0x88, 0xcc, 0xad, 0x76, 0xc4, 0x04, 0xf1, 0x0f,
	0xa1, 0xd6, 0xf7, 0x9d, 0x33, 0x19, 0x76, 0x63, 0xf1, 0x3a, 0xa6, 0x0d, 0xa9, 0xda, 0xa0, 0x40,
	0x47, 0xe2, 0x75, 0xcc, 0xdb, 0x50, 0x1e, 0x79, 0xbd, 0x78, 0xac, 0xf7, 0xa1, 0x6a, 0x27, 0x43,
	0x14, 0x18, 0x3a, 0xc1, 0x29, 0x99, 0xbf, 0x6a, 0xd3, 0x37, 0xc2, 0xd0, 0x75, 0xc9, 0xce, 0x55,
	0x9b, 0xbe, 0xf9, 0x75, 0x58, 0x08, 0x9d, 0xd0, 0x8b, 0x2f, 0xc8, 0xb4, 0x55, 0x5b, 0x8f, 0xd0,
	0xe2, 0xfd, 0x10, 0x35, 0xae, 0x29, 0x47, 0xa1, 0x01, 0x52, 0xbb, 0x0e, 0xf9, 0x4f, 0x9d, 0xf6,
	0x4a, 0x8f, 0x10, 0x3e, 0x10, 0x8e, 0x1f, 0x0f, 0xda, 0x0d, 0x05, 0x57, 0x23, 0x94, 0xd8, 0x93,
	0x51, 0xdc, 0x6e, 0x12, 0x94, 0xbe, 0x51, 0x67, 0xe7, 0xd8, 0xf3, 0x51, 0xe4, 0xa2, 0xd2, 0x59,
	0x0f, 0xf9, 0x13, 0x68, 0xa2, 0xb1, 0xbb, 0x67, 0x9e, 0x38, 0xef, 0x7a, 0x41, 0x5f, 0xb6, 0xd9,
	0x72, 0x6e, 0xa5, 0xb6, 0xde, 0xa0, 0x3d, 0xf9, 0xd6, 0x13, 0xe7, 0x3b, 0x41, 0x5f, 0xda, 0xf5,
	0x9e, 0x31, 0xe2, 0x1f, 0x41, 0x59, 0xf4, 0xfb, 0xa2, 0x17, 0x47, 0xed, 0x16, 0xed, 0x60, 0x79,
	0x6d, 0x8b, 0xc6, 0x76, 0x02, 0xe7, 0x0f, 0xa0, 0xaa, 0x44, 0x78, 0x22, 0x6a, 0x73, 0x22, 0xaa,
	0xac, 0x75, 0x94, 0x50, 0x7b, 0x82, 0xb2, 0xfe, 0x10, 0xea, 0xa6, 0x20, 0xbe, 0x02, 0x95, 0x91,
	0x8c, 0x3c, 0xda, 0x9d, 0x1c, 0x69, 0x52, 0x5f, 0xdb, 0x90, 0x32, 0x74, 0xbd, 0xc0, 0x89, 0x45,
	0x64, 0xa7, 0x58, 0x6e, 0x41, 0x29, 0xea, 0x39, 0xbe, 0x72, 0xb9, 0x69, 0x32, 0x85, 0xb2, 0xbe,
	0x82, 0x9a, 0x01, 0xe5, 0x75, 0xc8, 0xbd, 0x26, 0xae, 0x79, 0x3b, 0xf7, 0x1a, 0x47, 0x17, 0x34,
	0x39, 0x6f, 0xe7, 0x2e, 0x70, 0xf4, 0x86, 0xbc, 0x27, 0x6f, 0xe7, 0xde, 0x58, 0x7f, 0x92, 0x83,
	0x05, 0xb5, 0x24, 0xb4, 0x5d, 0x1c, 0x7a, 0x27, 0x27, 0x22, 0xd4, 0xb9, 0x25, 0x19, 0xe2, 0x0e,
	0xa8, 0xe5, 0x6a, 0x47, 0xd4, 0x23, 0x7e, 0x0b, 0x2a, 0xee, 0x38, 0x54, 0x01, 0xad, 0xfc, 0x31,
	0x1d, 0xe3, 0x9c, 0xd8, 0x09, 0x4f, 0x44, 0xac, 0xdd, 0x52, 0x8f, 0x70, 0xef, 0x7d, 0x6f, 0xe8,
	0xc5, 0x49, 0x92, 0xa0, 0x81, 0xf5, 0xdb, 0x22, 0x94, 0xb5, 0xd1, 0x52, 0x4f, 0xca, 0x19, 0x9e,
	0x74, 0x0f, 0x1a, 0x4e, 0x2f, 0xf6, 0xce, 0xbc, 0xf8, 0xa2, 0x4b, 0x48, 0xa5, 0x48, 0x3d, 0x01,
	0x1e, 0x21, 0xd1, 0x6d, 0xa8, 0xf6, 0x1c, 0xdf, 0x57, 0x04, 0x5a, 0x1f, 0x04, 0x10, 0xf2, 0x43,
	0xa8, 0x29, 0x0d, 0x14, 0x5a, 0x29, 0x05, 0x0a, 0x94, 0xcc, 0x8e, 0x62, 0x47, 0xa3, 0x95, 0x72,
	0x15, 0x04, 0x10, 0xf2, 0x26, 0x54, 0xa2, 0x64, 0xaa, 0x8a, 0x94, 0x72, 0xa4, 0xe7, 0x2d, 0x41,
	0xe9, 0xcc, 0xf1, 0xc7, 0x2a, 0x48, 0x4a, 0xb6, 0x1a, 0x20, 0xb7, 0xe3, 0x71, 0xbf, 0xaf, 0x66,
	0xa8, 0x38, 0xa9, 0x20, 0x20, 0xd1, 0x45, 0x59, 0xb0, 0x6b, 0x84, 0x0c, 0x28, 0x50, 0xa2, 0xcb,
	0x38, 0xf0, 0x34, 0x5a, 0xc5, 0x4e, 0x05, 0x01, 0x89, 0x40, 0x2a, 0x06, 0x14, 0x3d, 0x25, 0x5b,
	0x0d, 0xd2, 0x24, 0x50, 0x37, 0x92, 0xc0, 0x12, 0x94, 0xe2, 0x71, 0x18, 0x44, 0x3a, 0x70, 0xd4,
	0x00, 0xa1, 0xae, 0xf0, 0x9d, 0x0b, 0x1d, 0x38, 0x6a, 0x80, 0x3a, 0x91, 0x48, 0x5c, 0xf2, 0x38,
	0xd2, 0xd1, 0x03, 0x08, 0x3a, 0x24, 0x88, 0xb2, 0x6e, 0xe8, 0x2a, 0x9d, 0x58, 0x62, 0xdd, 0xd0,
	0x3d, 0xd2, 0x91, 0xae, 0x63, 0xb4, 0x95, 0x89, 0xd1, 0x49, 0x4c, 0xf3, 0x4c, 0x4c, 0x7f, 0x08,
	0x35, 0x27, 0x8e, 0x9d, 0xde, 0xa9, 0x0a, 0xc5, 0xab, 0x4a, 0x9a, 0x02, 0x61, 0x78, 0x58, 0x9f,
	0x40, 0x05, 0xc3, 0x65, 0xd7, 0x8b, 0x62, 0x7e, 0x3b, 0xc9, 0xa2, 0x39, 0x0a, 0xaf, 0x12, 0x45,
	0x6c, 0x92, 0x3b, 0xb7, 0xa0, 0x99, 0x4d, 0xaa, 0xa9, 0xa2, 0x64, 0x8e, 0xdc, 0x44, 0xd1, 0x3d,
	0x9d, 0x64, 0x9c, 0x21, 0x59, 0x2f, 0xaf, 0x32, 0xb5, 0x1a, 0x59, 0xdf, 0x40, 0x19, 0xd9, 0x1c,
	0x1a, 0xe9, 0x34, 0x67, 0x58, 0x32, 0x55, 0x21, 0x3f, 0x47, 0x85, 0xcf, 0xa0, 0xa6, 0x74, 0x3d,
	0x0e, 0x9d, 0xf0, 0x82, 0xdf, 0x81, 0x62, 0x24, 0xe2, 0x44, 0xdb, 0xca, 0x9a, 0xe6, 0x6b, 0x13,
	0xd4, 0xfa, 0xe7, 0x3c, 0x14, 0x9f, 0x8b, 0x50, 0x9a, 0x45, 0x23, 0x97, 0x29, 0x1a, 0x1c, 0x8a,
	0x5e, 0x4f, 0x06, 0x49, 0xd2, 0xc7, 0xef, 0x54, 0xa7, 0x82, 0xa1, 0xd3, 0x67, 0xd0, 0x8a, 0x06,
	0x32, 0x8c, 0xbb, 0x66, 0xa2, 0x57, 0x7e, 0xcd, 0x08, 0xb1, 0x69, 0x64, 0xfb, 0x4f, 0x81, 0xf9,
	0x32, 0x38, 0xe9, 0xce, 0x16, 0x85, 0x45, 0x84, 0x9b, 0xa4, 0x6d, 0x28, 0x0b, 0x5f, 0x0c, 0x45,
	0x90, 0x14, 0x85, 0x64, 0xc8, 0xef, 0x02, 0x88, 0xd7, 0x23, 0x11, 0x7a, 0x22, 0xe8, 0x25, 0xc5,
	0xd9, 0x80, 0x50, 0x6c, 0x8b, 0x33, 0xe1, 0x93, 0xc3, 0x17, 0x6c, 0x35, 0xe0, 0x77, 0x61, 0x21,
	0x3a, 0xf5, 0x7c, 0x3f, 0x6a, 0x57, 0xc9, 0x22, 0x0b, 0x6b, 0x87, 0x38, 0xb4, 0x35, 0x14, 0x63,
	0x7b, 0x14, 0x7a, 0x43, 0x27, 0xbc, 0xe8, 0x12, 0x84, 0x1c, 0xbe, 0x64, 0xd7, 0x35, 0x90, 0x88,
	0xf1, 0xac, 0x12, 0x89, 0x9e, 0x0c, 0xdc, 0x09, 0x99, 0x72, 0xff, 0x66, 0x0a, 0x26, 0x42, 0xeb,
	0x73, 0x68, 0xa1, 0xd3, 0xa0, 0x89, 0x45, 0x64, 0x8b, 0x3f, 0x1a, 0x8b, 0xe8, 0xed, 0xc7, 0x26,
	0xeb, 0x09, 0x70, 0x93, 0x3a, 0x1a, 0xc9, 0x20, 0x12, 0xfc, 0x03, 0xa0, 0xbd, 0x10, 0x13, 0x8f,
	0x43, 0x02, 0x5b, 0x03, 0x2d, 0x1f, 0xda, 0x1d, 0xd7, 0x45, 0xd0, 0x56, 0xba, 0xf6, 0xcb, 0x24,
	0x99, 0xdb, 0x9d, 0xcf, 0x6c, 0x77, 0xd6, 0xa8, 0x85, 0x69, 0xa3, 0x5a, 0x47, 0x70, 0x73, 0x8e,
	0x34, 0xad, 0xe9, 0x5b, 0x9d, 0x28, 0xcb, 0x35, 0x3f, 0xc3, 0xf5, 0x29, 0x34, 0xb7, 0x05, 0xad,
	0xfb, 0x07, 0x6b, 0x6e, 0x7d, 0x0e, 0x8b, 0x29, 0x0f, 0xad, 0xcf, 0x4d, 0x28, 0x22, 0x52, 0x57,
	0x34, 0x6d, 0x37, 0x02, 0x59, 0xcf, 0x61, 0x49, 0x53, 0xd3, 0x46, 0x45, 0x3f, 0x5c, 0xee, 0x01,
	0x5c, 0x9b, 0xe2, 0x74, 0xb9, 0x35, 0x12, 0x17, 0xcc, 0xcf, 0x73, 0x41, 0xeb, 0xdf, 0x0a, 0x50,
	0x52, 0x7e, 0x86, 0x29, 0xd3, 0x8b, 0xfd, 0x24, 0xfa, 0xd5, 0x00, 0xa1, 0xca, 0xe7, 0x54, 0x4c,
	0xaa, 0x01, 0x26, 0x1a, 0x0c, 0xce, 0xee, 0xc8, 0x89, 0x07, 0x49, 0xbd, 0x41, 0xc0, 0x81, 0x13,
	0x0f, 0xa6, 0x0f, 0x60, 0xc5, 0xd9, 0x03, 0xd8, 0x3d, 0x68, 0x10, 0x9f, 0xae, 0x2a, 0x42, 0x91,
	0x8e, 0xc7, 0x3a, 0x01, 0x8f, 0x14, 0x0c, 0xfd, 0x5e, 0x47, 0x5f, 0x4a, 0xa6, 0x82, 0xb2, 0xa9,
	0xc1, 0x09, 0xe1, 0xfc, 0x32, 0x74, 0x0b, 0x2a, 0x3d, 0x29, 0x7d, 0x57, 0x9e, 0x07, 0xfa, 0xb0,
	0x9c, 0x8e, 0x31, 0x25, 0x78, 0x81, 0x17, 0x7b, 0x8e, 0xdf, 0x4d, 0x69, 0xd4, 0x29, 0x79, 0x51,
	0xc3, 0x37, 0x12, 0x52, 0xcc, 0x9a, 0x94, 0x9b, 0x75, 0x6c, 0xea, 0x91, 0x91, 0xf6, 0x6b, 0x66,
	0xda, 0xb7, 0xfe, 0x3c, 0x07, 0x8b, 0x87, 0x93, 0x65, 0x50, 0x89, 0xa8, 0x40, 0x71, 0x6f, 0x7f,
	0x6f, 0x8b, 0x5d, 0xe1, 0x00, 0x0b, 0x07, 0xbb, 0x9d, 0xdf, 0xdf, 0xb2, 0x59, 0x8e, 0x2f, 0x42,
	0x4d, 0x7d, 0x77, 0x37, 0x3a, 0xf6, 0x26, 0xcb, 0xf3, 0x25, 0x60, 0x1a, 0xd0, 0xd9, 0xdd, 0x25,
	0xe0, 0x21, 0x2b, 0xf0, 0x3a, 0x54, 0xf6, 0x0f, 0x0e, 0xf6, 0xf7, 0xb6, 0xf6, 0x8e, 0x58, 0x91,
	0xb7, 0xa0, 0x91, 0x8c, 0xd4, 0xb4, 0x12, 0xbf, 0x0e, 0x3c, 0x05, 0x4d, 0x26, 0x2e, 0xf0, 0x06,
	0x54, 0x27, 0xc3, 0xb2, 0xf5, 0x29, 0x54, 0xd0, 0x6f, 0xa8, 0xac, 0x5c, 0x12, 0xe5, 0xbf, 0x03,
	0x3c, 0x5b, 0x58, 0x68, 0xd2, 0xfd, 0x6c, 0x2d, 0x7a, 0xdb, 0x89, 0xfe, 0x04, 0x2a, 0x78, 0x7b,
	0x48, 0xca, 0x97, 0x2b, 0x7a, 0xa7, 0x13, 0x31, 0x88, 0xb1, 0x15, 0x8c, 0xff, 0x02, 0x6e, 0xfb,
	0x4e, 0x14, 0x77, 0x87, 0xd2, 0x4d, 0xef, 0x40, 0xdd, 0xd8, 0x1b, 0x8a, 0x28, 0x76, 0x86, 0x23,
	0xed, 0xf8, 0x37, 0x91, 0xe4, 0x85, 0x41, 0x71, 0x94, 0x10, 0x58, 0x7f, 0x9d, 0x83, 0xda, 0x4e,
	0xe0, 0xc5, 0x49, 0x34, 0xad, 0x42, 0xc3, 0x15, 0x7d, 0x67, 0xec, 0x63, 0x59, 0x98, 0x11, 0x5a,
	0xd7, 0xb8, 0x4d, 0x2d, 0x9b, 0x27, 0xb4, 0xbd, 0x74, 0x05, 0x3a, 0x42, 0x66, 0x16, 0xd6, 0xd2,
	0xa4, 0x99, 0x42, 0xab, 0x6d, 0x51, 0x98, 0x2d, 0x8a, 0x86, 0x75, 0x8b, 0xf3, 0xac, 0xfb, 0xef,
	0x79, 0x58, 0x7a, 0x39, 0x8a, 0x44, 0x18, 0xeb, 0xab, 0xed, 0xa5, 0xe9, 0xe0, 0xff, 0x6f, 0xb8,
	0x3f, 0xf4, 0x86, 0x8b, 0x35, 0x71, 0x5b, 0xbc, 0xaf, 0xa1, 0x75, 0x69, 0x20, 0x7f, 0x79, 0x8f,
	0x14, 0x8d, 0x5e, 0x66, 0xa4, 0x68, 0x1c, 0xa6, 0xa5, 0x41, 0xf1, 0x98, 0x94, 0x06, 0x44, 0xea,
	0x5b, 0x8c, 0x76, 0x48, 0x02, 0x59, 0x7f, 0x96, 0x83, 0xd6, 0x46, 0x28, 0x9c, 0x58, 0xbc, 0x97,
	0xd4, 0xb7, 0x73, 0xba, 0x2c, 0x9c, 0x0a, 0x97, 0x85, 0xd3, 0x17, 0xc0, 0x4d, 0x45, 0x26, 0x75,
	0x25, 0x59, 0x66, 0x2e, 0xb3, 0xcc, 0xdf, 0xe4, 0xa0, 0xb5, 0x29, 0x7c, 0xf1, 0x9e, 0x8a, 0xbf,
	0xcd, 0x5c, 0x3f, 0x5a, 0xed, 0xdf, 0xe4, 0x60, 0x71, 0xcb, 0xf5, 0xe2, 0xff, 0x6b, 0xf3, 0x6d,
	0x41, 0x83, 0x52, 0x8b, 0x69, 0xb9, 0xf9, 0x4a, 0xa4, 0x49, 0x31, 0x3f, 0x9b, 0x14, 0xad, 0xcf,
	0x80, 0x61, 0xe6, 0xd4, 0xac, 0x2e, 0x71, 0xd7, 0x91, 0x3a, 0xf0, 0x65, 0xe5, 0xfe, 0x98, 0x9c,
	0x7b, 0xe9, 0x2a, 0xdb, 0x70, 0x1d, 0x25, 0x1a, 0x67, 0x7e, 0xad, 0xa4, 0xf5, 0x15, 0xdc, 0x98,
	0xc1, 0x68, 0x8d, 0xde, 0x7d, 0x2b, 0xd0, 0x2c, 0x55, 0x6d, 0xca, 0xb0, 0xfc, 0x5a, 0xb1, 0xcc,
	0x60, 0xde, 0xef, 0x98, 0xfa, 0x90, 0x0e, 0x5c, 0x46, 0x0a, 0xbf, 0xcc, 0x92, 0xbf, 0xa0, 0x73,
	0x95, 0x39, 0x41, 0x0b, 0x7a, 0xcf, 0xa2, 0xf7, 0x2d, 0xd4, 0x0e, 0x7c, 0xe7, 0x42, 0x84, 0x78,
	0x63, 0x14, 0xc6, 0x63, 0x56, 0x95, 0x1e, 0xb3, 0xbe, 0x82, 0x86, 0x4e, 0x63, 0x9d, 0xa4, 0xd2,
	0xe4, 0x56, 0x9a, 0xeb, 0xad, 0x35, 0x35, 0x49, 0x01, 0xf1, 0xa8, 0x60, 0x67, 0xe9, 0xac, 0x7f,
	0xcc, 0x41, 0xe9, 0x85, 0x13, 0xf7, 0x06, 0x33, 0xef, 0x63, 0xd7, 0x61, 0x21, 0x96, 0x23, 0xaf,
	0xa7, 0xdc, 0xa8, 0x6a, 0xeb, 0x11, 0x7f, 0x04, 0xf5, 0xd1, 0x44, 0x93, 0xa4, 0x40, 0xd5, 0xd7,
	0x0c, 0xf5, 0xec, 0x0c, 0x05, 0xbf, 0x0f, 0x0b, 0xfa, 0xe6, 0x5b, 0x24, 0xad, 0x1a, 0x6b, 0x24,
	0x71, 0x4d, 0x5d, 0x7e, 0x6d, 0x8d, 0xb4, 0x7e, 0x05, 0x0b, 0xfa, 0x3a, 0x5c, 0x83, 0xb2, 0xca,
	0x14, 0x2e, 0xbb, 0x82, 0xc7, 0x13, 0x22, 0xf7, 0x82, 0x13, 0x96, 0x43, 0xd4, 0x21, 0x15, 0x0c,
	0x97, 0xe5, 0x79, 0x13, 0x40, 0x49, 0xdd, 0x15, 0xfd, 0x98, 0x15, 0x78, 0x15, 0x4a, 0x5b, 0x81,
	0x2b, 0x5c, 0x56, 0xb4, 0xfe, 0x2e, 0x0f, 0x75, 0x73, 0xed, 0xfc, 0x31, 0x80, 0x93, 0x5a, 0x81,
	0x96, 0x39, 0xd7, 0x3c, 0x06, 0x11, 0x1e, 0xf0, 0xd4, 0x3a, 0x76, 0x5c, 0x7d, 0x30, 0x4c, 0xc7,
	0xfc, 0x67, 0x00, 0xb8, 0x31, 0x1d, 0x75, 0x72, 0x53, 0xe1, 0x7e, 0x23, 0xc3, 0x6e, 0x23, 0x45,
	0x3f, 0xbf, 0x62, 0x1b, 0xc4, 0xfc, 0x09, 0x54, 0xdc, 0xd0, 0x39, 0x47, 0x3c, 0xc5, 0x43, 0x6d,
	0xfd, 0x5a, 0x66, 0xe2, 0xa6, 0x46, 0x3e, 0xbf, 0x62, 0xa7, 0x84, 0xfc, 0x11, 0x94, 0x45, 0xe0,
	0x1e, 0x8d, 0x43, 0x75, 0xdc, 0xad, 0xad, 0x2f, 0x65, 0xe6, 0x6c, 0x29, 0xdc, 0xf3, 0x2b, 0x76,
	0x42, 0x86, 0x62, 0x86, 0x63, 0xdf, 0xf7, 0x4e, 0x1c, 0x75, 0x1b, 0x9d, 0x16, 0xf3, 0x42, 0x23,
	0x51, 0x4c, 0x42, 0xf8, 0xb4, 0x02, 0x0b, 0x4e, 0xea, 0x18, 0xad, 0x8c, 0x84, 0x33, 0xbc, 0xa5,
	0xfe, 0x2e, 0xb0, 0xd1, 0x94, 0xc9, 0xde, 0x6e, 0xcb, 0x19, 0x52, 0xf4, 0x29, 0x15, 0x0f, 0xc9,
	0x63, 0x97, 0xce, 0x58, 0x6d, 0x28, 0x0f, 0x45, 0x14, 0x61, 0xf5, 0x57, 0x67, 0xfd, 0x64, 0xc8,
	0xef, 0x40, 0x69, 0x88, 0xbb, 0xaf, 0x57, 0xbd, 0xa0, 0x5c, 0xc7, 0x56, 0x40, 0xfe, 0x38, 0xf1,
	0x45, 0xed, 0xf5, 0x25, 0xfd, 0xec, 0x68, 0xaa, 0x62, 0x67, 0x48, 0xac, 0x2f, 0xa1, 0xad, 0xb0,
	0xd1, 0x4e, 0x40, 0xbc, 0x86, 0xce, 0xa9, 0x17, 0x9c, 0xd0, 0x69, 0xb2, 0xad, 0xa2, 0x77, 0x67,
	0x53, 0x45, 0x63, 0xd5, 0x4e, 0x86, 0xd6, 0x97, 0xc0, 0x0e, 0x44, 0xe0, 0x7a, 0xc1, 0x09, 0xcd,
	0x21, 0xea, 0x65, 0x28, 0x93, 0x16, 0x69, 0x8e, 0x48, 0x94, 0x4b, 0xc0, 0xd6, 0x17, 0x50, 0xfd,
	0x3e, 0xe4, 0xab, 0x00, 0x04, 0xd9, 0xa0, 0x47, 0xa7, 0x3b, 0x50, 0xd5, 0xa1, 0xba, 0x93, 0x84,
	0xe5, 0x04, 0x60, 0xad, 0x02, 0x7b, 0xe6, 0x05, 0xae, 0xe2, 0xa0, 0x93, 0xcf, 0xc4, 0xba, 0xd9,
	0xdc, 0xf3, 0x18, 0x5a, 0x06, 0x6d, 0x9a, 0x33, 0xb5, 0x61, 0x73, 0x73, 0x0c, 0x6b, 0x3d, 0x03,
	0xde, 0xe9, 0xf5, 0xc4, 0x28, 0x7e, 0x1f, 0x01, 0xb4, 0x7d, 0x48, 0xb7, 0x93, 0xd4, 0xde, 0x64,
	0x68, 0x5d, 0x83, 0xab, 0x19, 0x3e, 0x4a, 0x38, 0xb2, 0xb7, 0xc5, 0x77, 0xa2, 0xf7, 0xbf, 0xc0,
	0x3e, 0xc3, 0x47, 0xb3, 0xdf, 0x82, 0x16, 0x25, 0x89, 0x1f, 0xc9, 0x7d, 0x09, 0xb8, 0xc9, 0x66,
	0xc2, 0x7c, 0x57, 0x38, 0x67, 0xe2, 0xc7, 0x33, 0x37, 0xd9, 0x68, 0xe6, 0x9f, 0xd1, 0xd9, 0x2e,
	0xc3, 0xda, 0x60, 0x91, 0xcb, 0xb2, 0xf8, 0x35, 0xb0, 0x09, 0xf1, 0xfb, 0x6c, 0x2b, 0x5f, 0x81,
	0x2a, 0x1e, 0x61, 0x29, 0x2f, 0xeb, 0xa4, 0x05, 0x6b, 0xdb, 0x09, 0xc4, 0x9e, 0x20, 0xad, 0x63,
	0xb8, 0x9a, 0x09, 0xa2, 0xcb, 0x94, 0x99, 0x09, 0xc5, 0xfc, 0xe5, 0xa1, 0x78, 0x1d, 0x96, 0xb2,
	0x32, 0xb4, 0x11, 0x7e, 0x02, 0xb5, 0x6d, 0x5f, 0x1e, 0x3b, 0xbe, 0xaa, 0x75, 0x0f, 0x60, 0x31,
	0x39, 0xb6, 0xd3, 0xd9, 0x3c, 0xad, 0x52, 0x49, 0x29, 0xc3, 0x05, 0xec, 0xb8, 0xd6, 0x7f, 0xe5,
	0xa0, 0x9a, 0xae, 0x65, 0xa6, 0x9c, 0xb5, 0xa1, 0xec, 0x45, 0x54, 0x1d, 0xf4, 0xa5, 0x26, 0x19,
	0xf2, 0x35, 0xe0, 0x9a, 0x91, 0xd2, 0x66, 0x27, 0x70, 0xc5, 0x6b, 0xca, 0x43, 0x25, 0x7b, 0x0e,
	0x66, 0xa6, 0x00, 0x16, 0x2f, 0x2d, 0x80, 0x13, 0x09, 0x6a, 0xa5, 0x4a, 0x42, 0x89, 0x74, 0x9b,
	0x83, 0xe1, 0x4f, 0xa0, 0x61, 0x1a, 0x2a, 0x6a, 0x2f, 0x90, 0x88, 0x29, 0x63, 0x66, 0x69, 0xac,
	0x16, 0x2c, 0xea, 0x57, 0xfe, 0x9d, 0x20, 0x8a, 0x9d, 0xa0, 0x27, 0xac, 0xff, 0x58, 0x50, 0xaf,
	0xa7, 0xc9, 0xeb, 0xff, 0x3a, 0xd4, 0x74, 0xcb, 0xc6, 0x48, 0xdc, 0x6c, 0xcd, 0x20, 0xa1, 0xbc,
	0x6d, 0x12, 0xf1, 0xdf, 0x83, 0xab, 0x7a, 0xd8, 0x31, 0xfa, 0x01, 0xfa, 0x7c, 0xd1, 0x36, 0xe7,
	0x9a, 0x78, 0x7b, 0xde, 0x24, 0xbe, 0x01, 0xbc, 0x67, 0xc8, 0xd2, 0x0d, 0x91, 0x02, 0xb1, 0xba,
	0x9a, 0x51, 0x43, 0xa1, 0xec, 0x39, 0xe4, 0xfc, 0xa7, 0xd0, 0x74, 0x7c, 0x5f, 0x9e, 0x0b, 0x57,
	0x3f, 0xcf, 0xd0, 0x06, 0x34, 0xd7, 0x9b, 0x6b, 0x1d, 0x13, 0x6c, 0x4f, 0x51, 0xf1, 0x27, 0xb0,
	0xa8, 0x75, 0x3a, 0xd4, 0x9d, 0x07, 0xda, 0x81, 0xe6, 0x7a, 0x75, 0x2d, 0x01, 0xd8, 0xd3, 0x14,
	0xfc, 0x4b, 0x68, 0x26, 0x20, 0xf5, 0xd4, 0x42, 0x07, 0x81, 0xe6, 0x7a, 0x7d, 0x6d, 0x4b, 0x3d,
	0x11, 0xfd, 0xca, 0x0b, 0x5c, 0x7b, 0x8a, 0x86, 0xff, 0x12, 0x5a, 0x86, 0xe2, 0xaa, 0x05, 0x44,
	0xb7, 0xd1, 0xe6, 0x3a, 0x37, 0x97, 0xa9, 0xfb, 0x5d, 0xb3, 0xc4, 0xc8, 0x41, 0x3d, 0x03, 0xd9,
	0x22, 0x8a, 0x43, 0x4f, 0x85, 0x54, 0x45, 0x73, 0xe8, 0x4c, 0x63, 0xec, 0x59, 0x62, 0xfe, 0x18,
	0x9a, 0xea, 0x51, 0x6b, 0x43, 0xf7, 0x11, 0xe8, 0x0e, 0x8b, 0xab, 0x4d, 0x00, 0xf6, 0x14, 0x01,
	0x3f, 0x82, 0xdb, 0x0a, 0xf2, 0x32, 0xf0, 0xe2, 0xc3, 0x91, 0xe8, 0x79, 0x2a, 0x04, 0xc7, 0xd1,
	0x51, 0xd2, 0x2b, 0x41, 0xf1, 0x33, 0x58, 0xfb, 0x5d, 0xd3, 0x26, 0x8a, 0xbc, 0xd4, 0x4d, 0x16,
	0x7a, 0xcf, 0x9a, 0xa7, 0xc8, 0x4b, 0xa3, 0x0b, 0xa3, 0xde, 0xdb, 0xea, 0xe6, 0x7b, 0xdb, 0xa4,
	0xdf, 0xd1, 0x78, 0x4b, 0x0f, 0xb3, 0x99, 0xe9, 0x8f, 0xdc, 0x05, 0xa3, 0xe9, 0x91, 0x34, 0x5d,
	0x26, 0x90, 0xf4, 0xdd, 0x9f, 0xcd, 0xeb, 0xea, 0xb4, 0xa6, 0xba, 0x3a, 0xaa, 0x2b, 0xc4, 0xcd,
	0xae, 0x50, 0xda, 0xeb, 0xb9, 0x6a, 0xf4, 0x7a, 0xac, 0xdf, 0xe6, 0x54, 0x33, 0x32, 0x09, 0x42,
	0x54, 0xc3, 0xd3, 0xdf, 0x3a, 0x6b, 0x96, 0x6c, 0x03, 0xc2, 0x3f, 0x87, 0x2a, 0xfd, 0x16, 0x21,
	0x6d, 0xbd, 0xd5, 0xd6, 0x9b, 0x64, 0x9a, 0x83, 0x04, 0x6a, 0x4f, 0x08, 0x30, 0x8d, 0xb9, 0xa2,
	0x9f, 0x3e, 0x67, 0x97, 0xec, 0x64, 0x68, 0xbc, 0x23, 0x16, 0xcd, 0x77, 0x44, 0xeb, 0x9f, 0x8a,
	0xd0, 0xc8, 0xb0, 0x53, 0x86, 0x8c, 0x9d, 0x54, 0x1b, 0x3d, 0xe2, 0x6b, 0x50, 0xeb, 0xa9, 0x9b,
	0x93, 0x11, 0xe2, 0x59, 0x4f, 0x37, 0x09, 0xe6, 0x36, 0x4e, 0xda, 0x50, 0x3e, 0x91, 0x72, 0x43,
	0x46, 0xb1, 0x56, 0x23, 0x19, 0xbe, 0x47, 0xd7, 0xfc, 0x2e, 0x18, 0x2d, 0xf2, 0xef, 0xd5, 0x34,
	0x4f, 0x9b, 0xde, 0x15, 0xb3, 0xe9, 0xfd, 0x31, 0x34, 0xf4, 0x63, 0xeb, 0xa6, 0xf2, 0x1b, 0xf5,
	0x8a, 0x93, 0x05, 0xf2, 0x07, 0xd0, 0x4c, 0x00, 0xda, 0xb0, 0xea, 0x1d, 0x76, 0x0a, 0x9a, 0x36,
	0xe6, 0x6b, 0x73, 0x1a, 0xf3, 0x75, 0xa3, 0x9d, 0xba, 0x6a, 0x36, 0xad, 0x1b, 0xba, 0x36, 0x18,
	0x41, 0x6f, 0x34, 0xae, 0xb1, 0x68, 0x9a, 0x3d, 0x71, 0x72, 0xe0, 0x4b, 0xda, 0xe6, 0x38, 0x05,
	0xef, 0x46, 0xe3, 0x50, 0xd8, 0xa8, 0xce, 0xa2, 0xbe, 0x52, 0x6d, 0x18, 0x40, 0x3b, 0x43, 0x62,
	0x4e, 0x39, 0x4a, 0x1a, 0x8c, 0xe6, 0x14, 0x8a, 0xc1, 0x0c, 0x09, 0xbf, 0x0f, 0x69, 0xff, 0x91,
	0x42, 0x21, 0x13, 0xae, 0x29, 0xca, 0xba, 0x0f, 0xb5, 0x4d, 0xf2, 0x9d, 0xfd, 0xf3, 0x40, 0xf5,
	0xb2, 0xe7, 0x39, 0x96, 0xf5, 0x48, 0x35, 0x1c, 0xe9, 0x37, 0x1f, 0x1f, 0x67, 0xef, 0xbb, 0xd3,
	0xae, 0xae, 0xaf, 0xbb, 0x8f, 0x61, 0x71, 0x27, 0x0d, 0x11, 0xc5, 0xfc, 0x92, 0x38, 0xb2, 0xfe,
	0x22, 0x0f, 0x6c, 0xff, 0x4c, 0x84, 0xbe, 0xfc, 0x1e, 0xc1, 0xf7, 0x68, 0x36, 0xf8, 0xf8, 0x5a,
	0xc2, 0x65, 0x6e, 0x00, 0xfe, 0x14, 0xa0, 0xef, 0x85, 0x51, 0x4c, 0x4f, 0xf0, 0xfa, 0xfe, 0x76,
	0x3d, 0x9d, 0x42, 0xd0, 0x44, 0xba, 0x6d, 0x50, 0xf2, 0xaf, 0xa1, 0xa6, 0xba, 0x69, 0x6a, 0x62,
	0xf1, 0x9d, 0x13, 0x4d, 0x52, 0x33, 0xe4, 0x4b, 0xd9, 0x90, 0x67, 0x50, 0x38, 0x91, 0x92, 0x22,
	0xa5, 0x64, 0xe3, 0x27, 0xee, 0xc0, 0xd0, 0x79, 0xbd, 0x2d, 0xa5, 0x6e, 0x55, 0xe8, 0x91, 0xf5,
	0x37, 0x79, 0x68, 0xcd, 0x2c, 0x4b, 0x65, 0xce, 0x50, 0x4e, 0xf6, 0xeb, 0x7b, 0x76, 0x49, 0x57,
	0x61, 0xa6, 0x19, 0xfa, 0xd6, 0x26, 0xe9, 0x0a, 0x4c, 0x37, 0x43, 0xdf, 0xd6, 0x23, 0xcd, 0xb6,
	0xd7, 0xd4, 0xe2, 0xe6, 0x76, 0x42, 0x75, 0x37, 0x46, 0x75, 0x42, 0x1f, 0x4c, 0x3a, 0xab, 0x95,
	0x39, 0x89, 0x2b, 0xed, 0xb3, 0x3e, 0x9c, 0xea, 0x98, 0xde, 0xc8, 0x6e, 0xc1, 0x64, 0xcf, 0x93,
	0xfe, 0xd5, 0x77, 0x70, 0x6d, 0xee, 0x26, 0xf1, 0x9f, 0x98, 0xbe, 0x93, 0xd3, 0x2f, 0x00, 0x6f,
	0x61, 0x66, 0x38, 0x90, 0xd9, 0x36, 0xca, 0x67, 0xdb, 0x46, 0xd6, 0xdf, 0x16, 0xe0, 0xfa, 0x7c,
	0x0e, 0xdf, 0xab, 0x79, 0x76, 0x0b, 0xd2, 0x5e, 0xd9, 0x0f, 0xe8, 0x9d, 0x99, 0x0a, 0x96, 0xa6,
	0xfa, 0x5a, 0x2b, 0x30, 0xdd, 0xbf, 0xd2, 0x1b, 0x34, 0xd3, 0xd6, 0xba, 0x03, 0xd5, 0x91, 0x83,
	0x69, 0x38, 0x16, 0xa1, 0xde, 0xa9, 0x09, 0xc0, 0x28, 0x56, 0x95, 0x4c, 0xd3, 0xeb, 0x97, 0xd0,
	0x92, 0xe6, 0xfa, 0x71, 0xef, 0xf4, 0xc1, 0x85, 0x67, 0x6d, 0x4b, 0xbb, 0x3a, 0x4b, 0xcc, 0xbf,
	0x01, 0x16, 0x65, 0xbb, 0x63, 0x51, 0x1b, 0xe6, 0x1e, 0x10, 0x67, 0xe8, 0xf8, 0xcf, 0x81, 0x67,
	0x3a, 0x7f, 0x6a, 0x76, 0x8d, 0x66, 0x67, 0xdd, 0x69, 0x0e, 0x9d, 0xf5, 0xa7, 0x39, 0xb8, 0x3e,
	0xff, 0x01, 0x28, 0xf3, 0x92, 0x94, 0x9b, 0x7a, 0x49, 0xfa, 0x14, 0x2a, 0x6a, 0xf1, 0x22, 0x4c,
	0x2f, 0x4d, 0xe6, 0x01, 0xc2, 0x4e, 0xd1, 0xfc, 0x7e, 0xfa, 0xbb, 0x9f, 0xc2, 0x3c, 0x42, 0x8d,
	0xb4, 0x44, 0xf6, 0x5e, 0x95, 0xbc, 0x27, 0xbd, 0x53, 0x0b, 0x5d, 0x89, 0x12, 0x5e, 0xf3, 0x35,
	0xc9, 0x90, 0x58, 0x8f, 0xb3, 0x57, 0x44, 0xfd, 0x04, 0xf5, 0x2e, 0x29, 0xd6, 0x69, 0x56, 0xb3,
	0xe4, 0x09, 0xea, 0x9d, 0x9a, 0x7d, 0x05, 0x8b, 0xc9, 0xf3, 0x94, 0x70, 0x37, 0x8c, 0x1f, 0x8a,
	0x4c, 0x29, 0x37, 0x4d, 0x65, 0xfd, 0x41, 0x56, 0xbf, 0xfd, 0x71, 0xdc, 0x93, 0x43, 0xf1, 0x4e,
	0x59, 0xef, 0x7f, 0x3f, 0x7e, 0x03, 0xb7, 0x4c, 0xe6, 0x2f, 0x23, 0x61, 0x5e, 0xb4, 0xde, 0x25,
	0xe3, 0x23, 0x28, 0xa2, 0x19, 0xe7, 0x5b, 0x98, 0x50, 0xfc, 0x83, 0xa9, 0x7d, 0x2e, 0xd1, 0x99,
	0x3b, 0xdd, 0xdf, 0x6f, 0xe0, 0xce, 0x94, 0xec, 0x4c, 0x64, 0xcc, 0x48, 0x2f, 0x19, 0x3b, 0xb0,
	0x01, 0x8b, 0xf4, 0xa6, 0x81, 0x8b, 0xd2, 0x2f, 0xa3, 0xd3, 0xf7, 0xd9, 0xdc, 0x65, 0xf7, 0x59,
	0xeb, 0x01, 0x14, 0x51, 0xa1, 0xcb, 0xaa, 0xeb, 0xea, 0x7f, 0xe7, 0x80, 0x4d, 0xbf, 0x0a, 0xf2,
	0x26, 0xc0, 0x9e, 0x0c, 0xb4, 0x70, 0x76, 0x85, 0x37, 0xa0, 0x9a, 0xbe, 0x4e, 0xa9, 0xa6, 0xb5,
	0xf1, 0x62, 0xc4, 0xf2, 0x08, 0x30, 0xde, 0x78, 0x58, 0x01, 0x19, 0x4c, 0x5e, 0x4e, 0x58, 0x91,
	0x73, 0x68, 0x76, 0x7c, 0xdf, 0x9c, 0x54, 0x42, 0x9a, 0xc9, 0xd3, 0x0d, 0x5b, 0xe0, 0x35, 0x28,
	0x6b, 0xff, 0x64, 0x65, 0x7a, 0x51, 0xd6, 0xbe, 0xc2, 0x2a, 0x38, 0x3d, 0x89, 0x10, 0xa5, 0x2b,
	0xab, 0x22, 0x05, 0x7e, 0x23, 0x8c, 0x01, 0x32, 0x9b, 0xc4, 0x32, 0xab, 0xe1, 0x8c, 0xec, 0x7e,
	0xb3, 0x3a, 0x5f, 0x02, 0x36, 0xbd, 0x0f, 0xac, 0xb1, 0xfa, 0x97, 0x39, 0x68, 0x64, 0x92, 0x0e,
	0xbf, 0x06, 0x2d, 0x5a, 0xbd, 0x09, 0xd4, 0x6d, 0x7b, 0x25, 0x3c, 0x37, 0x79, 0xd5, 0x26, 0xf1,
	0x79, 0x14, 0xa7, 0x8d, 0xe8, 0xfb, 0xe4, 0xd9, 0xba, 0x67, 0x3f, 0x1a, 0xc9, 0x40, 0x04, 0x31,
	0x2b, 0x72, 0x06, 0xf5, 0x64, 0x44, 0x73, 0x4a, 0xa8, 0x4e, 0x02, 0x49, 0x67, 0x2d, 0xe0, 0xac,
	0x74, 0x54, 0xe6, 0x65, 0x28, 0x74, 0x7c, 0x9f, 0x55, 0x56, 0x5f, 0x41, 0x6b, 0xe6, 0x4a, 0xc9,
	0x6f, 0xc2, 0x35, 0x52, 0x74, 0x1a, 0xc1, 0xae, 0xf0, 0x4f, 0xe0, 0xde, 0x7e, 0xe0, 0x5f, 0xec,
	0xc9, 0x58, 0x61, 0x85, 0xfb, 0xf4, 0xe2, 0x68, 0xe0, 0x45, 0xe8, 0x13, 0x3b, 0x01, 0x7e, 0x91,
	0xa1, 0x73, 0xab, 0xeb, 0x70, 0xe3, 0x2d, 0xef, 0x03, 0xb8, 0x21, 0x07, 0x4e, 0x14, 0x79, 0x67,
	0x42, 0xad, 0x9e, 0x90, 0x82, 0xe5, 0x56, 0xff, 0x25, 0x0f, 0xad, 0x99, 0x2b, 0x72, 0xa2, 0xcd,
	0x0c, 0x82, 0x5d, 0xc1, 0xa5, 0xbe, 0x50, 0x9c, 0x5e, 0x39, 0xb1, 0x08, 0x5f, 0x39, 0xc8, 0x06,
	0xbd, 0x46, 0x43, 0x9f, 0x79, 0xa1, 0x50, 0xbf, 0x7d, 0xd0, 0x80, 0x5d, 0xef, 0x64, 0x10, 0x07,
	0x5e, 0x70, 0xc2, 0x0a, 0xfc, 0x2a, 0x2c, 0x6a, 0xe8, 0x91, 0x7c, 0xed, 0xf5, 0xd0, 0x1e, 0x45,
	0xdc, 0x00, 0x5d, 0x22, 0x64, 0xef, 0x54, 0x39, 0x93, 0x1a, 0x13, 0xab, 0x85, 0xc9, 0x78, 0xd7,
	0xeb, 0x0b, 0x56, 0x46, 0x59, 0xba, 0x0e, 0x20, 0x0f, 0x56, 0x99, 0x00, 0x48, 0x23, 0x56, 0x45,
	0xf5, 0x15, 0xa0, 0xe3, 0x7e, 0x37, 0x8e, 0x62, 0xac, 0x1c, 0xd1, 0x53, 0x39, 0x3c, 0x66, 0x80,
	0xb4, 0x87, 0xf1, 0x38, 0x78, 0x16, 0x0a, 0xf1, 0x46, 0x44, 0xac, 0xc6, 0x6f, 0xc0, 0x55, 0x04,
	0xec, 0x87, 0xea, 0x7e, 0x92, 0x20, 0xea, 0xbc, 0x0d, 0x4b, 0x33, 0x4c, 0x3a, 0x5e, 0xc8, 0x1a,
	0xb8, 0xff, 0xcf, 0x85, 0xe3, 0x6f, 0x7a, 0xa1, 0xe8, 0xc5, 0xfe, 0x05, 0x6b, 0xa2, 0x40, 0x84,
	0xcc, 0xda, 0x6b, 0x71, 0xf5, 0x8f, 0x73, 0xea, 0xc7, 0x17, 0x53, 0xcf, 0x2a, 0x15, 0x28, 0xd2,
	0xae, 0x5d, 0x51, 0x5d, 0x94, 0x38, 0xbc, 0x60, 0x39, 0x74, 0x91, 0xad, 0x00, 0x7d, 0x10, 0x77,
	0x48, 0xb9, 0x3f, 0x75, 0x59, 0x36, 0x85, 0x13, 0x63, 0xe8, 0x35, 0xa0, 0x7a, 0x20, 0xc2, 0xa1,
	0x43, 0x7e, 0x58, 0xc2, 0xe1, 0xb6, 0x8c, 0x95, 0xde, 0xfa, 0xf7, 0x21, 0xb1, 0xbe, 0x3e, 0xb1,
	0x32, 0xf2, 0xd8, 0x09, 0x9e, 0x3b, 0x81, 0xcb, 0x2a, 0xab, 0xff, 0x50, 0x83, 0xc5, 0xa9, 0x67,
	0x27, 0x5c, 0xf8, 0x94, 0xce, 0x08, 0xd6, 0x3b, 0x9c, 0x34, 0x0b, 0x25, 0xe5, 0xa0, 0x48, 0x85,
	0xc9, 0xc6, 0xc0, 0x09, 0x4e, 0x28, 0x21, 0xb3, 0x3c, 0x2e, 0x00, 0xed, 0xc6, 0x0a, 0xfc, 0x36,
	0xdc, 0x30, 0x2d, 0x68, 0x98, 0x8b, 0x15, 0x51, 0xfb, 0xc3, 0xd1, 0x38, 0x8c, 0xd5, 0xbe, 0x76,
	0x5c, 0x77, 0x5b, 0xca, 0x6f, 0x3d, 0xc7, 0x67, 0x0b, 0xbc, 0x05, 0x0d, 0x35, 0xde, 0x70, 0xc2,
	0xd0, 0x13, 0xa1, 0x8a, 0x91, 0x4d, 0x19, 0xb3, 0x0a, 0x2a, 0x7f, 0x38, 0x1e, 0x0e, 0x65, 0xc0,
	0xaa, 0xb4, 0x65, 0x23, 0xe1, 0xfb, 0xda, 0x22, 0x80, 0x13, 0xb5, 0x17, 0xe9, 0xb5, 0xd7, 0x50,
	0x07, 0xf5, 0x3d, 0xb3, 0x65, 0xac, 0x8e, 0xfb, 0x65, 0x22, 0x59, 0x23, 0x49, 0x31, 0xb6, 0x88,
	0x71, 0x0f, 0x9a, 0x28, 0xee, 0x95, 0x70, 0x46, 0x32, 0x60, 0x8b, 0xfc, 0x43, 0xb8, 0x3d, 0x59,
	0xe8, 0x7e, 0x3f, 0xb9, 0xb5, 0x45, 0x4f, 0x95, 0x7d, 0x18, 0xbf, 0x0b, 0xb7, 0x94, 0x2a, 0xea,
	0x17, 0x1a, 0xfb, 0x7d, 0x6a, 0xa7, 0x1e, 0x88, 0x90, 0x36, 0xb4, 0x45, 0xba, 0xe8, 0x0c, 0x37,
	0x6d, 0x5c, 0xce, 0x97, 0xe1, 0xce, 0xa6, 0x38, 0x93, 0xe3, 0xf0, 0xd7, 0xf4, 0x87, 0x89, 0xa8,
	0x13, 0xb8, 0x1b, 0xf8, 0x15, 0x08, 0x65, 0xe8, 0xab, 0x98, 0xb2, 0x36, 0x31, 0xfe, 0xe5, 0x05,
	0x06, 0xb8, 0x96, 0xba, 0x84, 0x2e, 0xb6, 0x2b, 0xcf, 0x45, 0x88, 0x97, 0xfb, 0xfd, 0xbe, 0xaa,
	0x62, 0xb4, 0xbb, 0xd7, 0xd0, 0x40, 0x98, 0x09, 0xfb, 0xbe, 0x3c, 0xdf, 0x96, 0x92, 0x5d, 0xc7,
	0x68, 0xdf, 0x95, 0x91, 0xc0, 0xc1, 0x0d, 0x7e, 0x1d, 0xf8, 0xa6, 0x17, 0x39, 0xc7, 0xbe, 0xd8,
	0x13, 0xaf, 0x63, 0xd4, 0x11, 0xe1, 0x6d, 0xdc, 0x40, 0x1b, 0x8d, 0x77, 0x13, 0xe7, 0x2b, 0xb7,
	0x47, 0x81, 0x11, 0xbb, 0xa5, 0xe2, 0xe7, 0x54, 0x5b, 0xd7, 0x76, 0x02, 0x57, 0x0e, 0xb7, 0x02,
	0x31, 0xbc, 0x60, 0xb7, 0x55, 0x54, 0x9c, 0x8a, 0x0d, 0x19, 0xc4, 0xa1, 0xf4, 0x09, 0x8a, 0xb3,
	0xd8, 0x1d, 0xdc, 0xe9, 0xed, 0x31, 0xa6, 0xc3, 0x0f, 0x8c, 0x25, 0x3c, 0x0b, 0xe5, 0x1b, 0x11,
	0x10, 0xc5, 0x5d, 0x7e, 0x07, 0xda, 0x2f, 0x23, 0xcc, 0xc5, 0xdb, 0x52, 0x1e, 0xc9, 0x9d, 0x00,
	0xaf, 0xc0, 0x91, 0x5e, 0xf7, 0x87, 0x98, 0x1b, 0x9e, 0xe1, 0xfd, 0x4d, 0xa5, 0x35, 0x4c, 0xc1,
	0x6c, 0x99, 0x7f, 0x04, 0x1f, 0x74, 0x7c, 0x9f, 0x44, 0x44, 0xfb, 0xf4, 0x8b, 0x63, 0x85, 0xda,
	0x16, 0xb1, 0x9a, 0xf7, 0x11, 0x92, 0x28, 0x45, 0x53, 0x65, 0xd0, 0xa8, 0x6a, 0x41, 0x47, 0x03,
	0x31, 0x64, 0x16, 0xbf, 0x07, 0x1f, 0xaa, 0xad, 0x56, 0x7c, 0x82, 0xa7, 0x12, 0x6f, 0xd4, 0x92,
	0x2e, 0xba, 0x11, 0x75, 0xdb, 0xd9, 0x3d, 0x24, 0xc2, 0x95, 0x25, 0xaf, 0x62, 0x47, 0xb2, 0xe3,
	0x7e, 0xe7, 0xf4, 0x54, 0x46, 0x57, 0x6c, 0xd9, 0xc7, 0xb8, 0x7d, 0x24, 0xe6, 0x68, 0xe0, 0xe8,
	0x6c, 0x1c, 0x3d, 0x15, 0x78, 0xce, 0x51, 0x0b, 0x65, 0xf7, 0xf9, 0x2d, 0xb8, 0x3e, 0xc5, 0x46,
	0x4f, 0x67, 0x0f, 0xb8, 0x05, 0x77, 0x6d, 0x71, 0x86, 0x7e, 0xeb, 0x09, 0xd7, 0x58, 0xd3, 0xb3,
	0x50, 0x0e, 0x55, 0xe9, 0xfc, 0x84, 0x7f, 0x00, 0x37, 0x27, 0xee, 0xf7, 0x32, 0x88, 0x3d, 0xdf,
	0xdf, 0x0a, 0xdc, 0xfd, 0x3e, 0x39, 0xd7, 0x0a, 0x55, 0x5f, 0x92, 0x9b, 0xd4, 0x3e, 0xf6, 0x29,
	0x6e, 0x57, 0xa2, 0x2b, 0x31, 0xa5, 0x5f, 0x14, 0x3a, 0x67, 0x17, 0x6c, 0x15, 0x4d, 0xae, 0x2c,
	0x91, 0xf8, 0xaa, 0xda, 0x4d, 0xd4, 0x89, 0x7d, 0x86, 0x29, 0xa0, 0xe3, 0x92, 0x93, 0x3e, 0xbd,
	0xd8, 0x73, 0x86, 0xe2, 0x48, 0x92, 0x47, 0x7d, 0xce, 0x3f, 0x86, 0xe5, 0x4d, 0x91, 0x3c, 0xd9,
	0x1c, 0x49, 0xac, 0x31, 0x9d, 0xc0, 0xcd, 0x08, 0x61, 0x5f, 0x50, 0x6c, 0x9f, 0x63, 0x62, 0x5f,
	0xe3, 0x9f, 0xc1, 0x27, 0xe4, 0x31, 0x2a, 0xfb, 0xec, 0xf4, 0x13, 0xed, 0x9e, 0x3b, 0xd1, 0xae,
	0x88, 0x22, 0x0d, 0x3f, 0x1a, 0x38, 0x01, 0x7b, 0xc8, 0x57, 0xe1, 0xc1, 0xb6, 0xe3, 0x05, 0x89,
	0x4a, 0x98, 0xd6, 0x9f, 0xc9, 0x70, 0xcb, 0xe9, 0x0d, 0xb4, 0xc0, 0x81, 0x17, 0xa1, 0xf8, 0x88,
	0x3d, 0xc2, 0x5d, 0xe9, 0xb8, 0x2e, 0xfd, 0x7b, 0x60, 0xa2, 0x0f, 0xad, 0x6e, 0x27, 0xd0, 0x09,
	0xe1, 0x31, 0x86, 0x33, 0xea, 0xa4, 0x43, 0x78, 0x1d, 0x43, 0x78, 0xe2, 0xbf, 0x9d, 0x38, 0xb5,
	0x9f, 0x5a, 0x09, 0x7b, 0x82, 0x21, 0xbc, 0x29, 0xb0, 0xc8, 0xbb, 0x18, 0x27, 0xc4, 0x0e, 0x35,
	0xd2, 0x0c, 0xbf, 0x54, 0x0e, 0x4c, 0x78, 0x03, 0xfc, 0x13, 0x4c, 0x3c, 0xb6, 0x70, 0x02, 0x6f,
	0xe8, 0xc4, 0xb4, 0xc1, 0xec, 0xa7, 0x74, 0x5a, 0x08, 0x3d, 0x19, 0x62, 0xc1, 0x55, 0x64, 0x5f,
	0xa9, 0x18, 0x27, 0xf7, 0x3f, 0x4a, 0x1f, 0x5a, 0x3b, 0xfd, 0x58, 0x84, 0x9a, 0xe2, 0x6b, 0xda,
	0x64, 0x19, 0xc5, 0x64, 0x9b, 0x9d, 0x7e, 0xf2, 0xd2, 0xa3, 0x03, 0xfa, 0x67, 0xef, 0xf6, 0x57,
	0xa4, 0x89, 0xd8, 0x37, 0xab, 0xf7, 0xd4, 0x2b, 0x0f, 0xe5, 0xf2, 0x3a, 0x54, 0x92, 0x3c, 0xa5,
	0x2a, 0x0a, 0x25, 0x4c, 0x96, 0x5b, 0xdd, 0x80, 0xba, 0xf9, 0x52, 0x85, 0x89, 0xee, 0x85, 0x17,
	0xa8, 0x73, 0x45, 0x0d, 0xca, 0xfb, 0xfd, 0xbe, 0xd7, 0xa3, 0x53, 0x50, 0x03, 0xaa, 0x1b, 0x72,
	0x38, 0x74, 0x02, 0x57, 0x84, 0x2c, 0x8f, 0xb8, 0x6d, 0x11, 0x88, 0xd0, 0xf1, 0x59, 0x61, 0xf5,
	0xe7, 0x13, 0x26, 0x24, 0x0d, 0x60, 0x61, 0x4f, 0x86, 0x43, 0xc7, 0x57, 0x67, 0x89, 0x57, 0x8e,
	0x7f, 0x4a, 0x3c, 0xaa, 0x50, 0x7a, 0x46, 0x53, 0xf2, 0xf8, 0xa9, 0x5c, 0xb0, 0xb0, 0x7a, 0x06,
	0x35, 0xe3, 0x2a, 0x87, 0x69, 0x87, 0xea, 0x3a, 0xa9, 0xa9, 0x0a, 0x36, 0xcd, 0xdc, 0x72, 0xc2,
	0x18, 0xcf, 0x9f, 0x78, 0x4c, 0xf2, 0x42, 0x56, 0x40, 0x42, 0x2a, 0xf8, 0x54, 0x43, 0x54, 0xa9,
	0x2f, 0x21, 0x70, 0x27, 0x16, 0x43, 0xb6, 0x80, 0x82, 0xf7, 0xe3, 0x81, 0x08, 0xf1, 0x68, 0x75,
	0x15, 0x16, 0xf1, 0xb8, 0x62, 0x88, 0x61, 0x95, 0xd5, 0xbf, 0x2f, 0x4c, 0xde, 0x60, 0x26, 0xf7,
	0x55, 0x7d, 0xb2, 0x99, 0x41, 0xb0, 0x2b, 0xc8, 0xfb, 0x60, 0x1c, 0xe1, 0xa1, 0xb8, 0x02, 0x45,
	0xcc, 0xe0, 0xea, 0x27, 0x0f, 0xaf, 0xbc, 0xc0, 0x3d, 0x1c, 0x78, 0xc2, 0x77, 0xd5, 0x41, 0x10,
	0xc7, 0xaf, 0x1c, 0x3a, 0xb9, 0xd4, 0xa0, 0x6c, 0x8b, 0x18, 0x4d, 0xc3, 0x4a, 0xa8, 0xd0, 0x73,
	0x27, 0x74, 0x45, 0xa0, 0x4a, 0xf1, 0x61, 0x2c, 0x03, 0x71, 0x78, 0xea, 0xe1, 0x09, 0xb8, 0x06,
	0xe5, 0x67, 0x32, 0x8c, 0xbd, 0xfe, 0x05, 0xab, 0xd0, 0x51, 0x6c, 0xe0, 0xf8, 0x4e, 0xf0, 0x5a,
	0x9d, 0x7c, 0x11, 0x13, 0x8a, 0x28, 0x62, 0x40, 0x23, 0x2f, 0x14, 0x4f, 0xa5, 0x1f, 0xb3, 0x1a,
	0x32, 0xb4, 0x1d, 0xac, 0x11, 0xac, 0x9e, 0x60, 0x8e, 0x51, 0x2e, 0x95, 0x2f, 0x2c, 0x80, 0x1a,
	0xdb, 0xc4, 0x02, 0xf7, 0x42, 0xc4, 0x42, 0x86, 0x87, 0x03, 0x2c, 0x11, 0x6c, 0x31, 0x39, 0xa2,
	0x78, 0xc1, 0xc9, 0x91, 0x1c, 0xf7, 0x06, 0x8c, 0xe1, 0x9a, 0x5e, 0x88, 0xc0, 0x65, 0x2d, 0x54,
	0xce, 0x16, 0x51, 0x34, 0xc6, 0xd3, 0x0b, 0xe3, 0xea, 0xac, 0x3e, 0xc0, 0x2b, 0x04, 0xbb, 0xaa,
	0x70, 0xda, 0xc3, 0xd9, 0x12, 0x9d, 0x8d, 0xa5, 0x17, 0xc9, 0x60, 0xd3, 0x09, 0x63, 0x76, 0x8d,
	0x8e, 0x62, 0xb8, 0x13, 0x07, 0x24, 0xe6, 0x3a, 0xaa, 0xf5, 0x34, 0x14, 0xce, 0xa9, 0x1c, 0xc7,
	0xec, 0x86, 0x3a, 0x71, 0xd0, 0xb1, 0xa7, 0x8d, 0x98, 0xad, 0x91, 0xe7, 0x8a, 0xa1, 0xd7, 0x63,
	0x37, 0x11, 0xa3, 0xd2, 0x10, 0xbb, 0x85, 0xf2, 0x76, 0x7a, 0x6a, 0x8d, 0xb7, 0xf5, 0x80, 0xcc,
	0x79, 0x87, 0x7e, 0x6c, 0x32, 0x70, 0x62, 0x74, 0x89, 0x0f, 0x88, 0xb5, 0xef, 0xbd, 0x79, 0x83,
	0x15, 0xe5, 0xee, 0xea, 0xd7, 0x70, 0x2b, 0xb3, 0x65, 0x87, 0x42, 0xff, 0x60, 0x27, 0x3d, 0xdd,
	0xaa, 0x5f, 0xd8, 0xab, 0x0b, 0xce, 0x61, 0xf2, 0x3b, 0x7a, 0x96, 0x5b, 0xfd, 0x12, 0x2a, 0x69,
	0x7b, 0x89, 0x41, 0x1d, 0x37, 0x3f, 0x19, 0x2b, 0xf7, 0x7d, 0x4e, 0xed, 0x0b, 0x96, 0xc3, 0x6f,
	0x7d, 0x9e, 0xc8, 0xaf, 0x7e, 0x03, 0xad, 0x99, 0xf6, 0x4a, 0xe2, 0x3b, 0x33, 0x08, 0xc5, 0x47,
	0x57, 0x80, 0xdc, 0xd3, 0x7b, 0x7f, 0x95, 0x5f, 0xde, 0x95, 0x72, 0xb8, 0xa6, 0x4a, 0xfc, 0x53,
	0xe3, 0x2f, 0x91, 0x6b, 0xf4, 0xc0, 0x74, 0x3c, 0xee, 0x1f, 0x2f, 0xd0, 0x0b, 0xd5, 0x93, 0xff,
	0x09, 0x00, 0x00, 0xff, 0xff, 0x78, 0xb5, 0xa8, 0x92, 0x50, 0x39, 0x00, 0x00,
}
