// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/zombie_battleground/types/zb/zb.proto

/*
Package zb is a generated protocol buffer package.

It is generated from these files:
	github.com/loomnetwork/zombie_battleground/types/zb/zb.proto

It has these top-level messages:
	ZBAccount
	UpsertAccountRequest
	GetAccountRequest
	GetDecksRequest
	DecksResponse
	ZBDeck
	UserDecks
	CardInCollection
	GetDeckRequest
	AddDeckRequest
	DeleteDeckRequest
	GetDecksResponse
	ZBCardCollection
	InitRequest
	Card
	Effect
	Ability
	CardList
	CardCollection
	CardCollectionList
	CardSet
	CardLibrary
	ListCardLibraryRequest
	ListCardLibraryResponse
*/
package zb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ZBAccount struct {
	UserId              string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PhoneNumberVerified bool   `protobuf:"varint,2,opt,name=phone_number_verified,json=phoneNumberVerified,proto3" json:"phone_number_verified,omitempty"`
	RewardRedeemed      bool   `protobuf:"varint,3,opt,name=reward_redeemed,json=rewardRedeemed,proto3" json:"reward_redeemed,omitempty"`
	IsKickstarter       bool   `protobuf:"varint,4,opt,name=is_kickstarter,json=isKickstarter,proto3" json:"is_kickstarter,omitempty"`
	Image               string `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	EmailNotification   bool   `protobuf:"varint,6,opt,name=email_notification,json=emailNotification,proto3" json:"email_notification,omitempty"`
	EloScore            int64  `protobuf:"varint,7,opt,name=elo_score,json=eloScore,proto3" json:"elo_score,omitempty"`
	CurrentTier         int32  `protobuf:"varint,8,opt,name=current_tier,json=currentTier,proto3" json:"current_tier,omitempty"`
	GameMembershipTier  int32  `protobuf:"varint,9,opt,name=game_membership_tier,json=gameMembershipTier,proto3" json:"game_membership_tier,omitempty"`
	Owner               []byte `protobuf:"bytes,10,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (m *ZBAccount) Reset()                    { *m = ZBAccount{} }
func (m *ZBAccount) String() string            { return proto.CompactTextString(m) }
func (*ZBAccount) ProtoMessage()               {}
func (*ZBAccount) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{0} }

func (m *ZBAccount) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ZBAccount) GetPhoneNumberVerified() bool {
	if m != nil {
		return m.PhoneNumberVerified
	}
	return false
}

func (m *ZBAccount) GetRewardRedeemed() bool {
	if m != nil {
		return m.RewardRedeemed
	}
	return false
}

func (m *ZBAccount) GetIsKickstarter() bool {
	if m != nil {
		return m.IsKickstarter
	}
	return false
}

func (m *ZBAccount) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ZBAccount) GetEmailNotification() bool {
	if m != nil {
		return m.EmailNotification
	}
	return false
}

func (m *ZBAccount) GetEloScore() int64 {
	if m != nil {
		return m.EloScore
	}
	return 0
}

func (m *ZBAccount) GetCurrentTier() int32 {
	if m != nil {
		return m.CurrentTier
	}
	return 0
}

func (m *ZBAccount) GetGameMembershipTier() int32 {
	if m != nil {
		return m.GameMembershipTier
	}
	return 0
}

func (m *ZBAccount) GetOwner() []byte {
	if m != nil {
		return m.Owner
	}
	return nil
}

type UpsertAccountRequest struct {
	UserId              string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PhoneNumberVerified bool   `protobuf:"varint,2,opt,name=phone_number_verified,json=phoneNumberVerified,proto3" json:"phone_number_verified,omitempty"`
	RewardRedeemed      bool   `protobuf:"varint,3,opt,name=reward_redeemed,json=rewardRedeemed,proto3" json:"reward_redeemed,omitempty"`
	IsKickstarter       bool   `protobuf:"varint,4,opt,name=is_kickstarter,json=isKickstarter,proto3" json:"is_kickstarter,omitempty"`
	Image               string `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	EmailNotification   bool   `protobuf:"varint,6,opt,name=email_notification,json=emailNotification,proto3" json:"email_notification,omitempty"`
	EloScore            int64  `protobuf:"varint,7,opt,name=elo_score,json=eloScore,proto3" json:"elo_score,omitempty"`
	CurrentTier         int32  `protobuf:"varint,8,opt,name=current_tier,json=currentTier,proto3" json:"current_tier,omitempty"`
	GameMembershipTier  int32  `protobuf:"varint,9,opt,name=game_membership_tier,json=gameMembershipTier,proto3" json:"game_membership_tier,omitempty"`
}

func (m *UpsertAccountRequest) Reset()                    { *m = UpsertAccountRequest{} }
func (m *UpsertAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*UpsertAccountRequest) ProtoMessage()               {}
func (*UpsertAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{1} }

func (m *UpsertAccountRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpsertAccountRequest) GetPhoneNumberVerified() bool {
	if m != nil {
		return m.PhoneNumberVerified
	}
	return false
}

func (m *UpsertAccountRequest) GetRewardRedeemed() bool {
	if m != nil {
		return m.RewardRedeemed
	}
	return false
}

func (m *UpsertAccountRequest) GetIsKickstarter() bool {
	if m != nil {
		return m.IsKickstarter
	}
	return false
}

func (m *UpsertAccountRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *UpsertAccountRequest) GetEmailNotification() bool {
	if m != nil {
		return m.EmailNotification
	}
	return false
}

func (m *UpsertAccountRequest) GetEloScore() int64 {
	if m != nil {
		return m.EloScore
	}
	return 0
}

func (m *UpsertAccountRequest) GetCurrentTier() int32 {
	if m != nil {
		return m.CurrentTier
	}
	return 0
}

func (m *UpsertAccountRequest) GetGameMembershipTier() int32 {
	if m != nil {
		return m.GameMembershipTier
	}
	return 0
}

type GetAccountRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (m *GetAccountRequest) Reset()                    { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()               {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{2} }

func (m *GetAccountRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetDecksRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (m *GetDecksRequest) Reset()                    { *m = GetDecksRequest{} }
func (m *GetDecksRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDecksRequest) ProtoMessage()               {}
func (*GetDecksRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{3} }

func (m *GetDecksRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type DecksResponse struct {
	UserId string    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Decks  []*ZBDeck `protobuf:"bytes,2,rep,name=decks" json:"decks,omitempty"`
}

func (m *DecksResponse) Reset()                    { *m = DecksResponse{} }
func (m *DecksResponse) String() string            { return proto.CompactTextString(m) }
func (*DecksResponse) ProtoMessage()               {}
func (*DecksResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{4} }

func (m *DecksResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DecksResponse) GetDecks() []*ZBDeck {
	if m != nil {
		return m.Decks
	}
	return nil
}

type ZBDeck struct {
	Name   string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HeroId int64               `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	Cards  []*CardInCollection `protobuf:"bytes,3,rep,name=cards" json:"cards,omitempty"`
}

func (m *ZBDeck) Reset()                    { *m = ZBDeck{} }
func (m *ZBDeck) String() string            { return proto.CompactTextString(m) }
func (*ZBDeck) ProtoMessage()               {}
func (*ZBDeck) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{5} }

func (m *ZBDeck) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ZBDeck) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *ZBDeck) GetCards() []*CardInCollection {
	if m != nil {
		return m.Cards
	}
	return nil
}

type UserDecks struct {
	Decks []*ZBDeck `protobuf:"bytes,1,rep,name=decks" json:"decks,omitempty"`
}

func (m *UserDecks) Reset()                    { *m = UserDecks{} }
func (m *UserDecks) String() string            { return proto.CompactTextString(m) }
func (*UserDecks) ProtoMessage()               {}
func (*UserDecks) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{6} }

func (m *UserDecks) GetDecks() []*ZBDeck {
	if m != nil {
		return m.Decks
	}
	return nil
}

type CardInCollection struct {
	CardId int64 `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *CardInCollection) Reset()                    { *m = CardInCollection{} }
func (m *CardInCollection) String() string            { return proto.CompactTextString(m) }
func (*CardInCollection) ProtoMessage()               {}
func (*CardInCollection) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{7} }

func (m *CardInCollection) GetCardId() int64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *CardInCollection) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type GetDeckRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeckId string `protobuf:"bytes,2,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
}

func (m *GetDeckRequest) Reset()                    { *m = GetDeckRequest{} }
func (m *GetDeckRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeckRequest) ProtoMessage()               {}
func (*GetDeckRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{8} }

func (m *GetDeckRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetDeckRequest) GetDeckId() string {
	if m != nil {
		return m.DeckId
	}
	return ""
}

type AddDeckRequest struct {
	UserId string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Deck   *ZBDeck `protobuf:"bytes,2,opt,name=deck" json:"deck,omitempty"`
}

func (m *AddDeckRequest) Reset()                    { *m = AddDeckRequest{} }
func (m *AddDeckRequest) String() string            { return proto.CompactTextString(m) }
func (*AddDeckRequest) ProtoMessage()               {}
func (*AddDeckRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{9} }

func (m *AddDeckRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddDeckRequest) GetDeck() *ZBDeck {
	if m != nil {
		return m.Deck
	}
	return nil
}

type DeleteDeckRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeckId string `protobuf:"bytes,2,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
}

func (m *DeleteDeckRequest) Reset()                    { *m = DeleteDeckRequest{} }
func (m *DeleteDeckRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeckRequest) ProtoMessage()               {}
func (*DeleteDeckRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{10} }

func (m *DeleteDeckRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeleteDeckRequest) GetDeckId() string {
	if m != nil {
		return m.DeckId
	}
	return ""
}

type GetDecksResponse struct {
	Decks []*ZBDeck `protobuf:"bytes,1,rep,name=decks" json:"decks,omitempty"`
}

func (m *GetDecksResponse) Reset()                    { *m = GetDecksResponse{} }
func (m *GetDecksResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDecksResponse) ProtoMessage()               {}
func (*GetDecksResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{11} }

func (m *GetDecksResponse) GetDecks() []*ZBDeck {
	if m != nil {
		return m.Decks
	}
	return nil
}

type ZBCardCollection struct {
	Cards []*CardInCollection `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
}

func (m *ZBCardCollection) Reset()                    { *m = ZBCardCollection{} }
func (m *ZBCardCollection) String() string            { return proto.CompactTextString(m) }
func (*ZBCardCollection) ProtoMessage()               {}
func (*ZBCardCollection) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{12} }

func (m *ZBCardCollection) GetCards() []*CardInCollection {
	if m != nil {
		return m.Cards
	}
	return nil
}

type InitRequest struct {
	DefaultDecks      []*ZBDeck         `protobuf:"bytes,1,rep,name=default_decks,json=defaultDecks" json:"default_decks,omitempty"`
	DefaultCollection *ZBCardCollection `protobuf:"bytes,2,opt,name=default_collection,json=defaultCollection" json:"default_collection,omitempty"`
	Cards             []*Card           `protobuf:"bytes,3,rep,name=cards" json:"cards,omitempty"`
}

func (m *InitRequest) Reset()                    { *m = InitRequest{} }
func (m *InitRequest) String() string            { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()               {}
func (*InitRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{13} }

func (m *InitRequest) GetDefaultDecks() []*ZBDeck {
	if m != nil {
		return m.DefaultDecks
	}
	return nil
}

func (m *InitRequest) GetDefaultCollection() *ZBCardCollection {
	if m != nil {
		return m.DefaultCollection
	}
	return nil
}

func (m *InitRequest) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Card struct {
	Id          int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind        string     `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Element     string     `protobuf:"bytes,3,opt,name=element,proto3" json:"element,omitempty"`
	Name        string     `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description string     `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	FlavorText  string     `protobuf:"bytes,6,opt,name=flavorText,proto3" json:"flavorText,omitempty"`
	Picture     string     `protobuf:"bytes,7,opt,name=picture,proto3" json:"picture,omitempty"`
	Rank        string     `protobuf:"bytes,8,opt,name=rank,proto3" json:"rank,omitempty"`
	Type        string     `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Rarity      string     `protobuf:"bytes,10,opt,name=rarity,proto3" json:"rarity,omitempty"`
	Damage      int32      `protobuf:"varint,11,opt,name=damage,proto3" json:"damage,omitempty"`
	Health      int32      `protobuf:"varint,12,opt,name=health,proto3" json:"health,omitempty"`
	Cost        int32      `protobuf:"varint,13,opt,name=cost,proto3" json:"cost,omitempty"`
	Ability     string     `protobuf:"bytes,14,opt,name=ability,proto3" json:"ability,omitempty"`
	Effects     []*Effect  `protobuf:"bytes,15,rep,name=effects" json:"effects,omitempty"`
	Abilities   []*Ability `protobuf:"bytes,16,rep,name=abilities" json:"abilities,omitempty"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{14} }

func (m *Card) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Card) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Card) GetElement() string {
	if m != nil {
		return m.Element
	}
	return ""
}

func (m *Card) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Card) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Card) GetFlavorText() string {
	if m != nil {
		return m.FlavorText
	}
	return ""
}

func (m *Card) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *Card) GetRank() string {
	if m != nil {
		return m.Rank
	}
	return ""
}

func (m *Card) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Card) GetRarity() string {
	if m != nil {
		return m.Rarity
	}
	return ""
}

func (m *Card) GetDamage() int32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

func (m *Card) GetHealth() int32 {
	if m != nil {
		return m.Health
	}
	return 0
}

func (m *Card) GetCost() int32 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *Card) GetAbility() string {
	if m != nil {
		return m.Ability
	}
	return ""
}

func (m *Card) GetEffects() []*Effect {
	if m != nil {
		return m.Effects
	}
	return nil
}

func (m *Card) GetAbilities() []*Ability {
	if m != nil {
		return m.Abilities
	}
	return nil
}

type Effect struct {
	Trigger  string `protobuf:"bytes,1,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Effect   string `protobuf:"bytes,2,opt,name=effect,proto3" json:"effect,omitempty"`
	Duration string `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Target   string `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Limit    string `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (m *Effect) Reset()                    { *m = Effect{} }
func (m *Effect) String() string            { return proto.CompactTextString(m) }
func (*Effect) ProtoMessage()               {}
func (*Effect) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{15} }

func (m *Effect) GetTrigger() string {
	if m != nil {
		return m.Trigger
	}
	return ""
}

func (m *Effect) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

func (m *Effect) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Effect) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Effect) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

type Ability struct {
	Type         string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ActivityType string `protobuf:"bytes,2,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	CallType     string `protobuf:"bytes,3,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
	TargetType   string `protobuf:"bytes,4,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`
	Value        int32  `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Ability) Reset()                    { *m = Ability{} }
func (m *Ability) String() string            { return proto.CompactTextString(m) }
func (*Ability) ProtoMessage()               {}
func (*Ability) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{16} }

func (m *Ability) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Ability) GetActivityType() string {
	if m != nil {
		return m.ActivityType
	}
	return ""
}

func (m *Ability) GetCallType() string {
	if m != nil {
		return m.CallType
	}
	return ""
}

func (m *Ability) GetTargetType() string {
	if m != nil {
		return m.TargetType
	}
	return ""
}

func (m *Ability) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type CardList struct {
	Cards []*Card `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
}

func (m *CardList) Reset()                    { *m = CardList{} }
func (m *CardList) String() string            { return proto.CompactTextString(m) }
func (*CardList) ProtoMessage()               {}
func (*CardList) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{17} }

func (m *CardList) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type CardCollection struct {
	CardId string `protobuf:"bytes,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	Amount int32  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *CardCollection) Reset()                    { *m = CardCollection{} }
func (m *CardCollection) String() string            { return proto.CompactTextString(m) }
func (*CardCollection) ProtoMessage()               {}
func (*CardCollection) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{18} }

func (m *CardCollection) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *CardCollection) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type CardCollectionList struct {
	Cards []*CardCollection `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
}

func (m *CardCollectionList) Reset()                    { *m = CardCollectionList{} }
func (m *CardCollectionList) String() string            { return proto.CompactTextString(m) }
func (*CardCollectionList) ProtoMessage()               {}
func (*CardCollectionList) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{19} }

func (m *CardCollectionList) GetCards() []*CardCollection {
	if m != nil {
		return m.Cards
	}
	return nil
}

type CardSet struct {
	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cards []*Card `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
}

func (m *CardSet) Reset()                    { *m = CardSet{} }
func (m *CardSet) String() string            { return proto.CompactTextString(m) }
func (*CardSet) ProtoMessage()               {}
func (*CardSet) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{20} }

func (m *CardSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CardSet) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type CardLibrary struct {
	Sets []*CardSet `protobuf:"bytes,1,rep,name=sets" json:"sets,omitempty"`
}

func (m *CardLibrary) Reset()                    { *m = CardLibrary{} }
func (m *CardLibrary) String() string            { return proto.CompactTextString(m) }
func (*CardLibrary) ProtoMessage()               {}
func (*CardLibrary) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{21} }

func (m *CardLibrary) GetSets() []*CardSet {
	if m != nil {
		return m.Sets
	}
	return nil
}

type ListCardLibraryRequest struct {
}

func (m *ListCardLibraryRequest) Reset()                    { *m = ListCardLibraryRequest{} }
func (m *ListCardLibraryRequest) String() string            { return proto.CompactTextString(m) }
func (*ListCardLibraryRequest) ProtoMessage()               {}
func (*ListCardLibraryRequest) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{22} }

type ListCardLibraryResponse struct {
	Sets []*CardSet `protobuf:"bytes,1,rep,name=sets" json:"sets,omitempty"`
}

func (m *ListCardLibraryResponse) Reset()                    { *m = ListCardLibraryResponse{} }
func (m *ListCardLibraryResponse) String() string            { return proto.CompactTextString(m) }
func (*ListCardLibraryResponse) ProtoMessage()               {}
func (*ListCardLibraryResponse) Descriptor() ([]byte, []int) { return fileDescriptorZb, []int{23} }

func (m *ListCardLibraryResponse) GetSets() []*CardSet {
	if m != nil {
		return m.Sets
	}
	return nil
}

func init() {
	proto.RegisterType((*ZBAccount)(nil), "ZBAccount")
	proto.RegisterType((*UpsertAccountRequest)(nil), "UpsertAccountRequest")
	proto.RegisterType((*GetAccountRequest)(nil), "GetAccountRequest")
	proto.RegisterType((*GetDecksRequest)(nil), "GetDecksRequest")
	proto.RegisterType((*DecksResponse)(nil), "DecksResponse")
	proto.RegisterType((*ZBDeck)(nil), "ZBDeck")
	proto.RegisterType((*UserDecks)(nil), "UserDecks")
	proto.RegisterType((*CardInCollection)(nil), "CardInCollection")
	proto.RegisterType((*GetDeckRequest)(nil), "GetDeckRequest")
	proto.RegisterType((*AddDeckRequest)(nil), "AddDeckRequest")
	proto.RegisterType((*DeleteDeckRequest)(nil), "DeleteDeckRequest")
	proto.RegisterType((*GetDecksResponse)(nil), "GetDecksResponse")
	proto.RegisterType((*ZBCardCollection)(nil), "ZBCardCollection")
	proto.RegisterType((*InitRequest)(nil), "InitRequest")
	proto.RegisterType((*Card)(nil), "Card")
	proto.RegisterType((*Effect)(nil), "Effect")
	proto.RegisterType((*Ability)(nil), "Ability")
	proto.RegisterType((*CardList)(nil), "CardList")
	proto.RegisterType((*CardCollection)(nil), "CardCollection")
	proto.RegisterType((*CardCollectionList)(nil), "CardCollectionList")
	proto.RegisterType((*CardSet)(nil), "CardSet")
	proto.RegisterType((*CardLibrary)(nil), "CardLibrary")
	proto.RegisterType((*ListCardLibraryRequest)(nil), "ListCardLibraryRequest")
	proto.RegisterType((*ListCardLibraryResponse)(nil), "ListCardLibraryResponse")
}

func init() {
	proto.RegisterFile("github.com/loomnetwork/zombie_battleground/types/zb/zb.proto", fileDescriptorZb)
}

var fileDescriptorZb = []byte{
	// 1069 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0x4d, 0x73, 0x1b, 0x45,
	0x13, 0xae, 0xd5, 0xf7, 0xb6, 0x6c, 0xd9, 0x9a, 0xd7, 0x6f, 0xb2, 0x85, 0xf9, 0x50, 0x96, 0x0a,
	0x51, 0x85, 0x20, 0x43, 0x72, 0xa0, 0x8a, 0x70, 0xc0, 0x4e, 0x82, 0x4b, 0x45, 0xc8, 0x61, 0x62,
	0x73, 0xf0, 0x81, 0xad, 0xd1, 0x6e, 0x4b, 0x9a, 0xd2, 0xee, 0x8e, 0x98, 0x9d, 0xb5, 0xb1, 0xcf,
	0xfc, 0x06, 0x0e, 0x54, 0xf1, 0x07, 0xf8, 0x69, 0xdc, 0xb9, 0x53, 0xf3, 0xb1, 0xb2, 0x6c, 0x1c,
	0x9c, 0x2a, 0x8a, 0x1b, 0xb7, 0x7d, 0x9e, 0xee, 0xe9, 0x7e, 0xa6, 0xbb, 0xd5, 0x23, 0xf8, 0x72,
	0xc6, 0xd5, 0xbc, 0x9c, 0x8c, 0x62, 0x91, 0xed, 0xa5, 0x42, 0x64, 0x39, 0xaa, 0x33, 0x21, 0x17,
	0x7b, 0x17, 0x22, 0x9b, 0x70, 0x8c, 0x26, 0x4c, 0xa9, 0x14, 0x67, 0x52, 0x94, 0x79, 0xb2, 0xa7,
	0xce, 0x97, 0x58, 0xec, 0x5d, 0x4c, 0xf6, 0x2e, 0x26, 0xa3, 0xa5, 0x14, 0x4a, 0x84, 0x7f, 0xd4,
	0xc0, 0x3f, 0x39, 0xd8, 0x8f, 0x63, 0x51, 0xe6, 0x8a, 0xdc, 0x85, 0x76, 0x59, 0xa0, 0x8c, 0x78,
	0x12, 0x78, 0x03, 0x6f, 0xe8, 0xd3, 0x96, 0x86, 0xe3, 0x84, 0x3c, 0x86, 0xff, 0x2f, 0xe7, 0x22,
	0xc7, 0x28, 0x2f, 0xb3, 0x09, 0xca, 0xe8, 0x14, 0x25, 0x9f, 0x72, 0x4c, 0x82, 0xda, 0xc0, 0x1b,
	0x76, 0xe8, 0xff, 0x8c, 0xf1, 0x95, 0xb1, 0x7d, 0xe7, 0x4c, 0xe4, 0x01, 0x6c, 0x49, 0x3c, 0x63,
	0x32, 0x89, 0x24, 0x26, 0x88, 0x19, 0x26, 0x41, 0xdd, 0x78, 0xf7, 0x2c, 0x4d, 0x1d, 0x4b, 0xee,
	0x43, 0x8f, 0x17, 0xd1, 0x82, 0xc7, 0x8b, 0x42, 0x31, 0xa9, 0x50, 0x06, 0x0d, 0xe3, 0xb7, 0xc9,
	0x8b, 0x6f, 0x2e, 0x49, 0xb2, 0x03, 0x4d, 0x9e, 0xb1, 0x19, 0x06, 0x4d, 0x23, 0xcd, 0x02, 0xf2,
	0x09, 0x10, 0xcc, 0x18, 0x4f, 0xa3, 0x5c, 0x28, 0x3e, 0xe5, 0x31, 0x53, 0x5c, 0xe4, 0x41, 0xcb,
	0x04, 0xe8, 0x1b, 0xcb, 0xab, 0x35, 0x03, 0xd9, 0x05, 0x1f, 0x53, 0x11, 0x15, 0xb1, 0x90, 0x18,
	0xb4, 0x07, 0xde, 0xb0, 0x4e, 0x3b, 0x98, 0x8a, 0xd7, 0x1a, 0x93, 0x7b, 0xb0, 0x11, 0x97, 0x52,
	0x62, 0xae, 0x22, 0xc5, 0x51, 0x06, 0x9d, 0x81, 0x37, 0x6c, 0xd2, 0xae, 0xe3, 0x8e, 0x38, 0x4a,
	0xf2, 0x29, 0xec, 0xcc, 0x58, 0x86, 0x51, 0x86, 0xfa, 0xae, 0xc5, 0x9c, 0x2f, 0xad, 0xab, 0x6f,
	0x5c, 0x89, 0xb6, 0x7d, 0xbb, 0x32, 0x99, 0x13, 0x3b, 0xd0, 0x14, 0x67, 0x39, 0xca, 0x00, 0x06,
	0xde, 0x70, 0x83, 0x5a, 0x10, 0xfe, 0x5e, 0x83, 0x9d, 0xe3, 0x65, 0x81, 0x52, 0xb9, 0xda, 0x53,
	0xfc, 0xa1, 0xc4, 0xe2, 0xbf, 0x16, 0xfc, 0x0b, 0x2d, 0x08, 0x1f, 0x41, 0xff, 0x10, 0xdf, 0xb6,
	0xd0, 0xe1, 0x43, 0xd8, 0x3a, 0x44, 0xf5, 0x1c, 0xe3, 0x45, 0x71, 0xab, 0xef, 0x21, 0x6c, 0x3a,
	0xc7, 0x62, 0x29, 0xf2, 0x02, 0xdf, 0xdc, 0xbe, 0xf7, 0xa0, 0x99, 0x68, 0xcf, 0xa0, 0x36, 0xa8,
	0x0f, 0xbb, 0x8f, 0xdb, 0xa3, 0x93, 0x03, 0x7d, 0x92, 0x5a, 0x36, 0xfc, 0x1e, 0x5a, 0x96, 0x20,
	0x04, 0x1a, 0x39, 0xcb, 0xd0, 0x1d, 0x37, 0xdf, 0x3a, 0xea, 0x1c, 0xa5, 0xd0, 0x51, 0x6b, 0xa6,
	0x60, 0x2d, 0x0d, 0xc7, 0xba, 0xc1, 0xcd, 0x98, 0xc9, 0xa4, 0x08, 0xea, 0x26, 0x6a, 0x7f, 0xf4,
	0x8c, 0xc9, 0x64, 0x9c, 0x3f, 0x13, 0x69, 0x8a, 0xb1, 0xae, 0x36, 0xb5, 0xf6, 0xf0, 0x21, 0xf8,
	0xc7, 0x05, 0x4a, 0x23, 0xf6, 0x52, 0x8b, 0x77, 0xa3, 0x96, 0x67, 0xb0, 0x7d, 0x3d, 0x8c, 0x56,
	0xa0, 0x03, 0x55, 0xf7, 0xaa, 0xd3, 0x96, 0x86, 0xe3, 0x84, 0xdc, 0x81, 0x16, 0xcb, 0x74, 0x5d,
	0x2b, 0x65, 0x16, 0x85, 0x07, 0xd0, 0x73, 0x55, 0xbc, 0x75, 0xb2, 0xef, 0x42, 0x5b, 0x27, 0xae,
	0x6e, 0xe7, 0xd3, 0x96, 0x86, 0xe3, 0x24, 0xfc, 0x1a, 0x7a, 0xfb, 0x49, 0xf2, 0x56, 0x31, 0x76,
	0xa1, 0xa1, 0x0f, 0x99, 0x00, 0x6b, 0x37, 0x32, 0x64, 0xf8, 0x02, 0xfa, 0xcf, 0x31, 0x45, 0x85,
	0xff, 0x4c, 0xce, 0x67, 0xb0, 0x7d, 0x39, 0x18, 0xae, 0xdf, 0xb7, 0x94, 0xf2, 0x29, 0x6c, 0x9f,
	0x1c, 0xe8, 0x62, 0xae, 0x95, 0x72, 0xd5, 0x33, 0xef, 0x96, 0x9e, 0xfd, 0xe2, 0x41, 0x77, 0x9c,
	0xf3, 0xd5, 0xc4, 0x3e, 0x82, 0xcd, 0x04, 0xa7, 0xac, 0x4c, 0x55, 0x74, 0x63, 0xce, 0x0d, 0x67,
	0xb5, 0x4d, 0xfe, 0x0a, 0x48, 0xe5, 0x1d, 0xaf, 0x42, 0xbb, 0xfa, 0xf4, 0x47, 0xd7, 0x55, 0xd1,
	0xbe, 0x73, 0x5e, 0x13, 0xba, 0x7b, 0x75, 0xb8, 0x9a, 0x46, 0x68, 0x25, 0xee, 0xd7, 0x3a, 0x34,
	0x34, 0x26, 0x3d, 0xa8, 0xad, 0x86, 0xa2, 0xc6, 0x13, 0x3d, 0xbf, 0x0b, 0x9e, 0x57, 0xb5, 0x33,
	0xdf, 0x24, 0x80, 0x36, 0xa6, 0x98, 0x61, 0xae, 0xcc, 0xfe, 0xf1, 0x69, 0x05, 0x57, 0xd3, 0xde,
	0x58, 0x9b, 0xf6, 0x01, 0x74, 0x13, 0x2c, 0x62, 0xc9, 0x97, 0x46, 0xb2, 0xdd, 0x35, 0xeb, 0x14,
	0x79, 0x1f, 0x60, 0x9a, 0xb2, 0x53, 0x21, 0x8f, 0xf0, 0x47, 0x65, 0x36, 0x8d, 0x4f, 0xd7, 0x18,
	0x9d, 0x6f, 0xc9, 0x63, 0x55, 0xba, 0x05, 0xe3, 0xd3, 0x0a, 0xea, 0x7c, 0x92, 0xe5, 0x0b, 0xb3,
	0x57, 0x7c, 0x6a, 0xbe, 0x35, 0xa7, 0x1f, 0x46, 0xb3, 0x40, 0x7c, 0x6a, 0xbe, 0xf5, 0x58, 0x4b,
	0x26, 0xb9, 0x3a, 0x37, 0x6b, 0xdb, 0xa7, 0x0e, 0x69, 0x3e, 0x61, 0x66, 0x05, 0x76, 0xcd, 0xba,
	0x71, 0x48, 0xf3, 0x73, 0x64, 0xa9, 0x9a, 0x07, 0x1b, 0x96, 0xb7, 0x48, 0xc7, 0x8e, 0x45, 0xa1,
	0x82, 0x4d, 0xc3, 0x9a, 0x6f, 0xad, 0x8e, 0x4d, 0x78, 0xaa, 0x83, 0xf7, 0xac, 0x3a, 0x07, 0xc9,
	0x3d, 0x68, 0xe3, 0x74, 0x8a, 0xb1, 0x2a, 0x82, 0x2d, 0xd7, 0xdb, 0x17, 0x06, 0xd3, 0x8a, 0x27,
	0x1f, 0x81, 0x6f, 0xbd, 0x39, 0x16, 0xc1, 0xb6, 0x71, 0xea, 0x8c, 0xf6, 0xed, 0x79, 0x7a, 0x69,
	0x0a, 0x7f, 0xf2, 0xa0, 0x65, 0xcf, 0xea, 0x7c, 0x4a, 0xf2, 0xd9, 0x0c, 0xa5, 0x9b, 0xf4, 0x0a,
	0x6a, 0xd5, 0x36, 0x6e, 0x35, 0xe9, 0x16, 0x91, 0x77, 0xa0, 0x93, 0x94, 0xd2, 0xee, 0x71, 0xdb,
	0xb0, 0x15, 0xd6, 0x67, 0x14, 0x93, 0x33, 0x54, 0xae, 0x67, 0x0e, 0xe9, 0xb7, 0x21, 0xe5, 0x19,
	0x57, 0xd5, 0xdb, 0x60, 0x40, 0xf8, 0xb3, 0x07, 0x6d, 0xa7, 0x6e, 0x55, 0x67, 0x6f, 0xad, 0xce,
	0x1f, 0xc2, 0x26, 0x8b, 0x15, 0x3f, 0xe5, 0xea, 0x3c, 0x32, 0x46, 0x2b, 0x64, 0xa3, 0x22, 0x8f,
	0xb4, 0xd3, 0x2e, 0xf8, 0x31, 0x4b, 0x53, 0xeb, 0xe0, 0xf4, 0x68, 0xc2, 0x18, 0x3f, 0x80, 0xae,
	0x55, 0x60, 0xcd, 0x56, 0x14, 0x58, 0xca, 0x38, 0xec, 0x40, 0xf3, 0x94, 0xa5, 0xa5, 0x7d, 0xb4,
	0x9a, 0xd4, 0x82, 0xf0, 0x01, 0x74, 0xf4, 0xf8, 0xbe, 0xe4, 0x85, 0xba, 0x1c, 0x74, 0xef, 0x86,
	0x41, 0xdf, 0x87, 0xde, 0xb5, 0x1f, 0xf0, 0xb5, 0x5d, 0xe8, 0xbf, 0x61, 0x17, 0x36, 0x57, 0xbb,
	0xf0, 0x29, 0x90, 0xab, 0x21, 0x4c, 0xd6, 0xfb, 0x57, 0xb3, 0x6e, 0x8d, 0xae, 0xfd, 0x22, 0x5d,
	0xfe, 0x2f, 0xa0, 0xad, 0x0d, 0xaf, 0x51, 0xdd, 0xf8, 0x34, 0xac, 0xb4, 0xd7, 0x6e, 0xd0, 0xfe,
	0x31, 0x74, 0xed, 0x25, 0x27, 0x92, 0xc9, 0x73, 0xf2, 0x2e, 0x34, 0x0a, 0x54, 0x55, 0xc2, 0xce,
	0xc8, 0xc5, 0xa5, 0x86, 0x0d, 0x03, 0xb8, 0xa3, 0x75, 0xad, 0x1d, 0x70, 0x8b, 0x27, 0xfc, 0x1c,
	0xee, 0xfe, 0xc5, 0xe2, 0xf6, 0xdf, 0xdf, 0x86, 0x3c, 0x20, 0xbf, 0xd5, 0xb6, 0x5e, 0x0a, 0x91,
	0x8d, 0x8e, 0x73, 0xae, 0xce, 0x9f, 0x24, 0xa3, 0x93, 0xc9, 0xa4, 0x65, 0xfe, 0x78, 0x3e, 0xf9,
	0x33, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xed, 0x7f, 0x59, 0xb8, 0x0a, 0x00, 0x00,
}
